I've attached the latest versions of the container classes I've worked on.

They are SkipList, Treap and SplayList. SplayList is interesting, but it won't 
work very well in a multi-threaded environment. Treap is a pretty solid 
performer, and can be given a performance tweak for non-uniform requests 
where it speeds up access to commonly requested items, but doing that means
 it won't parallelize as well either. 

I'm fairly happy with the current Traits settings for the structures, 
although I think C++ templating would be helped enormously by keyword parameters,
 since you can't overload template specs the way you can ordinary class methods and
  constructors.

Also, I wrote testing code to produce uniform, normalized or zipf data distributions,
which is useful to testing.

The code all compile without warnings (with -Wall) under gcc. I used CodeBlocks 
for my IDE instead of QT Creator because I ran into several PITA problems with 
QT Creator (opaque how to pass make file flags, didn't catch dependencies on
 .inl files, debugger hung). 
