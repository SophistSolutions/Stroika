# Copyright(c) Sophist Solutions Inc. 1990-1992.  All rights reserved
#
# $Header: /fuji/lewis/RCS/Makefile.unix,v 1.3 1992/11/25 22:37:27 lewis Exp $
# 
# Description:
# 		Stroika Graphix makefile for UNIX
# 
# TODO:
# 
# 
# Notes:
# 
# 
# Changes:
#		$Log: Makefile.unix,v $
#		Revision 1.3  1992/11/25  22:37:27  lewis
#		First cut at updating for new GenClass support.
#
#
#
.SUFFIXES:	.cc .hh


ObjDir				=	./
SrcDir				=	../Sources/
Includes			=	-I../Headers -I../../Foundation/Headers
TmplGenDir			=	../Templates/
TemplateIncludes	=	-I$(TmplGenDir) -I../../Foundation/Templates/
Etc					=	../../../Etc/
TemplateHeaders		=	../../Foundation/Headers/
TemplateSources		=	../../Foundation/Sources/


Objs= 									\
		$(ObjDir)BitBlitter.o			\
		$(ObjDir)Brush.o				\
		$(ObjDir)Color.o				\
		$(ObjDir)ColorLookupTable.o		\
		$(ObjDir)Cursor.o				\
		$(ObjDir)Enclosure.o			\
		$(ObjDir)Font.o					\
		$(ObjDir)GDIConfiguration.o		\
		$(ObjDir)GDIInit.o				\
		$(ObjDir)GraphixDevice.o		\
		$(ObjDir)GraphixResources.o		\
		$(ObjDir)Pallet.o				\
		$(ObjDir)Pen.o					\
		$(ObjDir)Picture.o				\
		$(ObjDir)PixelMap.o				\
		$(ObjDir)PixelPoint.o			\
		$(ObjDir)Point.o				\
		$(ObjDir)Rect.o					\
		$(ObjDir)Region.o				\
		$(ObjDir)Shape.o				\
		$(ObjDir)Sound.o				\
		$(ObjDir)Tablet.o				\
		$(ObjDir)Tile.o



all:	Templates.make	TemplatesLib.a	../Graphix.a

Graphix Graphix.a ../Graphix:		../Graphix.a

../Graphix.a:	$(Objs)	
	@echo Making library Graphix.a
	@$(RM) -f ../Graphix.a
	@if [ $$UseTemplates = 1 ] ; then \
		$(CP) -f TemplatesLib.a ../Graphix.a; \
	fi;
	@$(AR) cq ../Graphix.a $(Objs)
	@$(RANLIB) ../Graphix.a

clean:
	@$(RM) -f $(Objs)

clobber:	clean
	@$(RM) -f ../Graphix.a
	@$(RM) -rf Templates.make

.cc.o:
	@echo "Compiling $<"
	@if [ "$$CPlusPlusSystem" = "cfront" ] ; then \
		rm -f $*.C; \
		ln -s $< $*.C; \
		if [ $$UseTemplates = 1 ] ; then \
			$(CPlusPlus) $(CPlusFlags) -c $(Includes) $*.C -o $@; \
		else \
			$(CPlusPlus) $(CPlusFlags) -c $(TemplateIncludes) $(Includes) $*.C -o $@; \
		fi; \
		rm -f $*.C; \
	else \
		if [ $$UseTemplates = 1 ] ; then \
			$(CPlusPlus) $(CPlusFlags) -c $(Includes) $< -o $@; \
		else \
			$(CPlusPlus) $(CPlusFlags) -c $(TemplateIncludes) $(Includes) $< -o $@; \
		fi; \
	fi;


#
## Default template rules incase Templates.make not created yet...
#
$(TmplGenDir):
	@mkdir $@

Templates.make::	$(TmplGenDir)
	

Templates.make::	../TemplatesList
	@if [ $$UseTemplates = 0 ]; then \
		echo Making $@ From TemplatesList; \
		mkdir ../Templates 2> /dev/null || echo > /dev/null; \
		$(GenMake) $(GenMakeFlags) -b $(Etc)/CollectionInfo ../TemplatesList Templates.make; \
		cat ../../Foundation/Templates/TFndFMap.hh TFileMap.hh > XXX.hh; \
		mv XXX.hh ../Templates/TFileMap.hh; \
		$(MAKE) -f Templates.make TmplGenDir=$(TmplGenDir) TemplateHeaders=$(TemplateHeaders) TemplateSources=$(TemplateSources) Includes="$(Includes) $(TemplateIncludes)" Etc=$(Etc) -$(MAKEFLAGS) TmpLinks; \
		echo Made $@ From TemplatesList; \
	fi

Templates.make::	../TemplatesList
	@if [ $$UseTemplates = 0 ]; then \
		cp ../Templates/TFileMap.hh ../Templates/TFndFMap.hh; \
	fi

TemplateClean TemplateClobber:	Templates.make .FORCE
	@if [ $$UseTemplates = 0 ]; then \
		$(MAKE) -f Templates.make TmplGenDir=$(TmplGenDir) TemplateHeaders=$(TemplateHeaders) TemplateSources=$(TemplateSources) Includes="$(Includes) $(TemplateIncludes)" Etc=$(Etc) -$(MAKEFLAGS) $@; \
	fi

TemplatesLib.a:	Templates.make .FORCE
	@if [ $$UseTemplates = 0 ]; then \
		echo Making $@ via Templates.make; \
		$(MAKE) -f Templates.make TmplGenDir=$(TmplGenDir) TemplateHeaders=$(TemplateHeaders) TemplateSources=$(TemplateSources) Includes="$(Includes) $(TemplateIncludes)" Etc=$(Etc) -$(MAKEFLAGS) $@; \
		echo Made $@ via Templates.make; \
	fi

.FORCE:




# For gnuemacs:
# Local Variables: ***
# mode:Text ***
# tab-width:4 ***
# End: ***
