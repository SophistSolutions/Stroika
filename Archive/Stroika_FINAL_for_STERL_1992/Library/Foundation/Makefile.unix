# Copyright(c) Sophist Solutions Inc. 1990-1992.  All rights reserved
#
# $Header: /fuji/lewis/RCS/Makefile.unix,v 1.32 1992/12/03 19:16:28 lewis Exp $
# 
# Description:
# 		Stroika Foundation makefile for UNIX
# 
# TODO:
# 
# 
# Notes:
# 
# 
# Changes:
#		$Log: Makefile.unix,v $
#		Revision 1.32  1992/12/03  19:16:28  lewis
#		Got rid of $(X)/ hack - fixed GenMake instead.
#
#		Revision 1.31  1992/11/29  06:02:22  lewis
#		Temp hack - Etc=$(Etc)/ instead of Etc=$(Etc) in calling submake til we
#		fix output of GenMake.
#
#		Revision 1.28  1992/11/19  05:48:53  lewis
#		Delete all *Fixed* classes.
#
#		Revision 1.27  1992/11/17  05:27:45  lewis
#		More cleanups of makefile based on what I did in testsuite one.
#
#		Revision 1.26  1992/11/16  04:37:32  lewis
#		Copy TFileMap.hh when we generate the Templates.make file, not
#		when we build the Lib. Also, do rule to automatically build
#		the TemplateGenDir.
#
#		Revision 1.25  1992/11/15  16:16:45  lewis
#		Makefile larglely rewritten with kdjs help. Much better
#		use of other template.make makefile.
#		Also, support for new Makefile, that calls this makefile.
#		Works much more cleanly now.
#
#		Revision 1.24  1992/11/12  07:58:56  lewis
#		Change CC build rule so it will work with cfront also - had to hack
#		and rename files to .C for time being!!!
#
#		Revision 1.20  1992/10/10  20:15:58  lewis
#		More work on genclass stuff.
#
#		Revision 1.19  1992/10/10  03:26:47  lewis
#		Delete Container.o
#
#		Revision 1.18  1992/10/09  04:41:17  lewis
#		Added support for psuedo-templates ($UseTemplates).
#
#		Revision 1.17  1992/09/27  08:50:28  lewis
#		Added Options.cc.
#
#		Revision 1.16  1992/09/26  03:53:54  lewis
#		Added Mapping_FixedArray, and Mapping_FixedSortedArray.
#
#		Revision 1.15  1992/09/21  06:31:58  sterling
#		Added a bunch of new mapping implemenations.
#
#		Revision 1.14  1992/09/16  21:58:29  lewis
#		Added Sorting/Sorting_Array
#
#		Revision 1.13  1992/09/15  17:28:52  lewis
#		Added PriorityQueue.o and PriorityQueue_LinkList.o.
#
#		Revision 1.12  1992/09/15  17:26:28  lewis
#		Got rid of the Ab files, and removed extra fixedarray.o and renamed
#		ReferenceCounted.o->Shared.o.
#
#		Revision 1.9  1992/09/05  06:05:49  lewis
#		Lots of new files.
#
#		Revision 1.8  1992/09/04  15:22:45  lewis
#		Rename Bag_LinkedList to Bag_LinkList.
#
#		Revision 1.7  1992/09/03  19:34:56  lewis
#		Added lots of stuff to the UNIX makefile like sterl had added
#		to mac, like ab{bag/mapping,etc}, Bag_LinkedList, Iterator, Queue_XXX, etc...
#
#		Revision 1.6  1992/07/21  05:15:21  lewis
#		Added Character and Container, and made sure everything was
#		alphabatized - and added Sequence.o.
#
#		Revision 1.5  1992/07/17  04:57:19  lewis
#		Got rid of Sequence_ArrayPtr and Sequence_DoubleLinkListPtr.
#
#		Revision 1.4  1992/07/03  07:07:29  lewis
#		Renamed DoublyLinkedList->DoubleLinkList, Sequence_ArrayOfPointers->Sequence_ArrayPtr,
#		Sequence_DoublyLinkedList->Sequence_DoubleLinkList, and Sequence_DoublyLLOfPtrs->Sequence_DoubleLinkListPtr.
#
#		Revision 1.3  1992/07/01  03:50:02  lewis
#		Renamed Strings.cc String.cc
#
#		Revision 1.1  1992/06/19  22:27:40  lewis
#		Initial revision
#
#		Revision 1.39  1992/06/10  16:21:44  lewis
#		Added Queue.
#
#		Revision 1.38  92/06/09  23:40:05  23:40:05  lewis (Lewis Pringle)
#		Renamed Resources.o Resources.o
#		
#		Revision 1.37  92/06/09  22:26:53  22:26:53  lewis (Lewis Pringle)
#		Moved Chaneable/Saveable/Resources to Foundation.
#		
#		Revision 1.34  92/05/22  23:32:45  23:32:45  lewis (Lewis Pringle)
#		Moved Language.cc here from User.
#		
#		Revision 1.33  92/05/20  20:53:10  20:53:10  lewis (Lewis Pringle)
#		Added Bag/Set.
#		
#
# 
#
#
#
.SUFFIXES:	.cc .hh


ObjDir				=	.
SrcDir				=	../Sources
Includes			=	-I. -I../Headers
TmplGenDir			=	../Templates
TemplateIncludes	=	-I$(TmplGenDir)
Etc					=	../../../Etc
TemplateHeaders		=	../Headers
TemplateSources		=	../Sources



Objs = 											\
		$(ObjDir)/Angle.o						\
		$(ObjDir)/Array.o						\
		$(ObjDir)/Bag.o							\
		$(ObjDir)/Bag_Array.o					\
		$(ObjDir)/Bag_LinkList.o				\
		$(ObjDir)/BitString.o					\
		$(ObjDir)/BlockAllocated.o				\
		$(ObjDir)/Changeable.o					\
		$(ObjDir)/Character.o					\
		$(ObjDir)/CircularArray.o				\
		$(ObjDir)/Collection.o					\
		$(ObjDir)/Date.o						\
		$(ObjDir)/DateTime.o					\
		$(ObjDir)/Debug.o						\
		$(ObjDir)/Deque.o						\
		$(ObjDir)/Deque_CircularArray.o			\
		$(ObjDir)/Deque_DoubleLinkList.o		\
		$(ObjDir)/DoubleLinkList.o				\
		$(ObjDir)/Exception.o					\
		$(ObjDir)/File.o						\
		$(ObjDir)/Format.o						\
		$(ObjDir)/HashTable.o					\
		$(ObjDir)/Integer.o						\
		$(ObjDir)/Iterator.o					\
		$(ObjDir)/Language.o					\
		$(ObjDir)/LinkList.o					\
		$(ObjDir)/Mapping.o						\
		$(ObjDir)/Mapping_Array.o				\
		$(ObjDir)/Mapping_HashTable.o			\
		$(ObjDir)/Mapping_LinkList.o			\
		$(ObjDir)/Mapping_SortedArray.o			\
		$(ObjDir)/Mapping_SortedLinkList.o		\
		$(ObjDir)/Math.o						\
		$(ObjDir)/Memory.o						\
		$(ObjDir)/Options.o						\
		$(ObjDir)/OSConfiguration.o				\
		$(ObjDir)/OSInit.o						\
		$(ObjDir)/PeriodicTask.o				\
		$(ObjDir)/PriorityQueue.o				\
		$(ObjDir)/PriorityQueue_LinkList.o		\
		$(ObjDir)/Queue.o						\
		$(ObjDir)/Queue_CircularArray.o			\
		$(ObjDir)/Queue_DoubleLinkList.o		\
		$(ObjDir)/Random.o						\
		$(ObjDir)/RedBlackTree.o				\
		$(ObjDir)/Resource.o					\
		$(ObjDir)/Saveable.o					\
		$(ObjDir)/Scheduler.o					\
		$(ObjDir)/Sequence.o					\
		$(ObjDir)/Sequence_Array.o				\
		$(ObjDir)/Sequence_DoubleLinkList.o		\
		$(ObjDir)/Set.o							\
		$(ObjDir)/Set_Array.o					\
		$(ObjDir)/Set_BitString.o				\
		$(ObjDir)/Shared.o						\
		$(ObjDir)/SimpleTree.o					\
		$(ObjDir)/Sorting.o						\
		$(ObjDir)/Sorting_Array.o				\
		$(ObjDir)/Stack.o						\
		$(ObjDir)/Stack_Array.o					\
		$(ObjDir)/Stack_LinkList.o				\
		$(ObjDir)/StreamUtils.o					\
		$(ObjDir)/String.o						\
		$(ObjDir)/Tally.o						\
		$(ObjDir)/Tally_Array.o					\
		$(ObjDir)/Task.o						\
		$(ObjDir)/Time.o						\
		$(ObjDir)/Version.o



all:	Templates.make	TemplatesLib.a	../Foundation.a

Foundation Foundation.a ../Foundation:		../Foundation.a

../Foundation.a:	Templates.make TemplatesLib.a $(TemplateObjects) $(Objs)
	@echo Making library Foundation.a
	@$(RM) -f ../Foundation.a
	@if [ $$UseTemplates = 1 ] ; then \
		$(CP) -f TemplatesLib.a ../Foundation.a; \
	fi;
	@$(AR) cq ../Foundation.a $(Objs)
	@$(RANLIB) ../Foundation.a

clean:		TemplateClean
	@$(RM) -f $(Objs)

clobber:	clean	TemplateClobber
	@$(RM) -f ../Foundation.a
	@$(RM) -rf Templates.make

.cc.o:
	@echo "Compiling $<"
	@if [ "$$CPlusPlusSystem" = "cfront" ] ; then \
		rm -f $*.C; \
		ln -s $< $*.C; \
		if [ $$UseTemplates = 1 ] ; then \
			$(CPlusPlus) $(CPlusFlags) -c $(Includes) $*.C -o $@; \
		else \
			$(CPlusPlus) $(CPlusFlags) -c $(TemplateIncludes) $(Includes) $*.C -o $@; \
		fi; \
		rm -f $*.C; \
	else \
		if [ $$UseTemplates = 1 ] ; then \
			$(CPlusPlus) $(CPlusFlags) -c $(Includes) $< -o $@; \
		else \
			$(CPlusPlus) $(CPlusFlags) -c $(TemplateIncludes) $(Includes) $< -o $@; \
		fi; \
	fi;




#
## Default template rules incase Templates.make not created yet...
#
$(TmplGenDir):
	@mkdir $@

Templates.make::	$(TmplGenDir)
	

Templates.make::	../TemplatesList
	@if [ $$UseTemplates = 0 ]; then \
		echo Making $@ From TemplatesList; \
		mkdir ../Templates 2> /dev/null || echo > /dev/null; \
		$(GenMake) $(GenMakeFlags) -b $(Etc)/CollectionInfo ../TemplatesList Templates.make; \
		mv TFileMap.hh ../Templates/TFileMap.hh; \
		$(MAKE) -f Templates.make TmplGenDir=$(TmplGenDir) TemplateHeaders=$(TemplateHeaders) TemplateSources=$(TemplateSources) Includes="$(Includes) $(TemplateIncludes)" Etc=$(Etc) -$(MAKEFLAGS) TmpLinks; \
		echo Made $@ From TemplatesList; \
	fi

Templates.make::	../TemplatesList
	@if [ $$UseTemplates = 0 ]; then \
		cp ../Templates/TFileMap.hh ../Templates/TFndFMap.hh; \
	fi

TemplateClean TemplateClobber:	Templates.make .FORCE
	@if [ $$UseTemplates = 0 ]; then \
		$(MAKE) -f Templates.make TmplGenDir=$(TmplGenDir) TemplateHeaders=$(TemplateHeaders) TemplateSources=$(TemplateSources) Includes="$(Includes) $(TemplateIncludes)" Etc=$(Etc) -$(MAKEFLAGS) $@; \
	fi

TemplatesLib.a:	Templates.make .FORCE
	@if [ $$UseTemplates = 0 ]; then \
		echo Making $@ via Templates.make; \
		$(MAKE) -f Templates.make TmplGenDir=$(TmplGenDir) TemplateHeaders=$(TemplateHeaders) TemplateSources=$(TemplateSources) Includes="$(Includes) $(TemplateIncludes)" Etc=$(Etc) -$(MAKEFLAGS) $@; \
		echo Made $@ via Templates.make; \
	fi

.FORCE:



# For gnuemacs:
# Local Variables: ***
# mode:Text ***
# tab-width:4 ***
# End: ***
