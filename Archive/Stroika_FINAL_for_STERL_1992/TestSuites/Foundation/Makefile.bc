# Copyright(c) Sophist Solutions Inc. 1990-1992.  All rights reserved
#
# $Header: /fuji/lewis/RCS/Makefile.bc,v 1.10 1992/12/07 12:26:15 lewis Exp $
# 
# Description:
#		Stroika TestSuite makefile for DOS
# 
# TODO:
# 
# 
# Notes:
# 
# 
# Changes:
#		$Log: Makefile.bc,v $
#		Revision 1.10  1992/12/07  12:26:15  lewis
#		Rename Windows - >> "Windows" in if tests.
#
#		Revision 1.9  1992/12/05  17:41:08  lewis
#		Include Config instead of Config.bc.
#		Disabled tDQ_DLL tDLL tInt64 Q_DLL tHashT tMap_HT tSeq_DLL since they
#		didn't compile (template problems - fix next release).
#		Rewrote much of makefile to use more macro magic so we can support
#		building for Windows too.
#
#		Revision 1.8  1992/12/03  19:21:34  lewis
#		Lots of fixes to what testsuites depend on what - had
#		wrong Tests file in many cases.
#		Renamed tests files tst, even if they fit under the DOS 8 char limit.
#		In make clobber rule, rm *.exe and *.map since list of testsuites is too long.
#
#		Revision 1.7  1992/12/03  17:51:40  lewis
#		Fixed typo - .ob instead of .obj
#
#		Revision 1.6  1992/12/03  07:41:20  lewis
#		Fixed minor typos on a few link lines, and added a bunch of missing
#		testsuites. I think I now have this file up to date wrt the UNIX
#		list of testsuites. Now all I need to do is make them work :-).
#
#		Revision 1.5  1992/11/26  02:55:44  lewis
#		Fixed slight errors in link rules, and add lots of new programs - not
#		all the ones from UNIX makefile - but most.
#		Also, cleanup the names - proper case - even if DOS will ignore it.
#		Cleanup names a bit - sync with PCNameMapDictionary.
#
#		Revision 1.4  1992/11/25  04:15:28  lewis
#		Update for new names, and better linker support (response file)
#
#		Revision 1.3  1992/11/20  21:13:17  lewis
#		Got rid of some unused apps, and fixed up some changed names.
#
#		Revision 1.2  1992/07/16  08:02:50  lewis
#		Lots of cleanups including new rcs header, and rules for each .exe file, based
#		on one for tArray.exe - which itself was cleaned up.
#
#
#

#
# Disabled for now (mostly cuz DLL breaks BCC templates):
#		LGP-	Saturday, December 5, 1992 11:01:10 AM
#
#
#	tDQ_DLL.exe		\
#	tDLL.exe		\
#	tInt64.exe		\
#	tQ_DLL.exe		\
#	tHashT.exe		\
#	tMap_HT.exe		\
#	tSeq_DLL.exe	\
#
#


!include	..\..\config

.suffixes:	.cc .hh

ObjDir	=	.\Objects
SrcDir	=	.\Sources

.path.cc  = $(SrcDir)
.path.obj = $(ObjDir)

BCCDir				=	c:\BorlandC
LibDir				=	..\..\Library
FoundationLibrary	=	$(LibDir)\Fnd\Fnd.lib
Includes			=	-IHeaders -I$(LibDir)\Fnd\Headers -I$(BCCDir)\Include 


TestSuites =		\
	tArray.exe		\
	tBag.exe		\
	tBag_ar.exe		\
	tBag_ll.exe		\
	tCar.exe		\
	tDQ.exe			\
	tDQ_CAr.exe		\
	tExcept.exe		\
	tFile.exe		\
	tFormat.exe		\
	tLL.exe			\
	tMap.exe		\
	tMap_Ar.exe		\
	tMap_LL.exe		\
	tMap_SAr.exe	\
	tMap_SLL.exe	\
	tMath.exe		\
	tMemory.exe		\
	tOSConf.exe		\
	tQ.exe			\
	tQ_CAr.exe		\
	tSeq.exe		\
	tSeq_Ar.exe		\
	tSet.exe		\
	tSet_Ar.exe		\
	tSet_BtS.exe	\
	tSTree.exe		\
	tSrt.exe		\
	tSrt_Ar.exe		\
	tStk_Ar.exe		\
	tStk_LL.exe		\
	tString.exe		\
	tTly.exe		\
	tTly_Ar.exe		\
	tTly_LL.exe		\
	tTime.exe


all:	TestSuites

TestSuites:	$(TestSuites)

test:	$(TestSuites)
	&$**

tArray.exe:		$(ObjDir)\tArray.obj $(ObjDir)\SClass.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tArray.obj $(ObjDir)\SClass.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tBag.exe:		$(ObjDir)\tBag.obj $(ObjDir)\SClass.obj $(ObjDir)\BagTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tBag.obj $(ObjDir)\SClass.obj $(ObjDir)\BagTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tBag_ar.exe:		$(ObjDir)\tBag_ar.obj $(ObjDir)\SClass.obj $(ObjDir)\BagTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tBag_ar.obj $(ObjDir)\SClass.obj $(ObjDir)\BagTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tBag_ll.exe:		$(ObjDir)\tBag_ll.obj $(ObjDir)\SClass.obj $(ObjDir)\BagTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tBag_ll.obj $(ObjDir)\SClass.obj $(ObjDir)\BagTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tCar.exe:		$(ObjDir)\tCar.obj $(ObjDir)\SClass.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tCar.obj $(ObjDir)\SClass.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tDQ.exe:		$(ObjDir)\tDQ.obj $(ObjDir)\SClass.obj $(ObjDir)\DQTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tDQ.obj $(ObjDir)\SClass.obj $(ObjDir)\DQTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tDQ_CAr.exe:		$(ObjDir)\tDQ_CAr.obj $(ObjDir)\SClass.obj $(ObjDir)\DQTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tDQ_CAr.obj $(ObjDir)\SClass.obj $(ObjDir)\DQTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tDQ_DLL.exe:		$(ObjDir)\tDQ_DLL.obj $(ObjDir)\SClass.obj $(ObjDir)\DQTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tDQ_DLL.obj $(ObjDir)\SClass.obj $(ObjDir)\DQTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tDLL.exe:		$(ObjDir)\tDLL.obj $(ObjDir)\SClass.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tDLL.obj $(ObjDir)\SClass.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tExcept.exe:	$(ObjDir)\tExcept.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tExcept.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tFile.exe:		$(ObjDir)\tFile.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tFile.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tFormat.exe:		$(ObjDir)\tFormat.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tFormat.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tHashT.exe:		$(ObjDir)\tHashT.obj $(ObjDir)\SClass.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tHashT.obj $(ObjDir)\SClass.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tInt64.exe:	$(ObjDir)\tInt64.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tInt64.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tLL.exe:		$(ObjDir)\tLL.obj $(ObjDir)\SClass.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tLL.obj $(ObjDir)\SClass.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tMap.exe:	$(ObjDir)\tMap.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tMap.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tMap_Ar.exe:	$(ObjDir)\tMap_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tMap_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tMap_HT.exe:	$(ObjDir)\tMap_HT.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tMap_HT.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tMap_LL.exe:	$(ObjDir)\tMap_LL.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tMap_LL.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tMap_SAr.exe:	$(ObjDir)\tMap_SAr.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tMap_SAr.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tMap_SLL.exe:	$(ObjDir)\tMap_SLL.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tMap_SLL.obj $(ObjDir)\SClass.obj $(ObjDir)\MapTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tMath.exe:	$(ObjDir)\tMath.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tMath.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tMemory.exe:	$(ObjDir)\tMemory.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tMemory.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tOSConf.exe:	$(ObjDir)\tOSConf.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tOSConf.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tQ.exe:		$(ObjDir)\tQ.obj $(ObjDir)\SClass.obj $(ObjDir)\QTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tQ.obj $(ObjDir)\SClass.obj $(ObjDir)\QTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tQ_CAr.exe:		$(ObjDir)\tQ_CAr.obj $(ObjDir)\SClass.obj $(ObjDir)\QTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tQ_CAr.obj $(ObjDir)\SClass.obj $(ObjDir)\QTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tQ_DLL.exe:		$(ObjDir)\tQ_DLL.obj $(ObjDir)\SClass.obj $(ObjDir)\QTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tQ_DLL.obj $(ObjDir)\SClass.obj $(ObjDir)\QTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tSeq.exe:	$(ObjDir)\tSeq.obj $(ObjDir)\SClass.obj $(ObjDir)\SeqTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tSeq.obj $(ObjDir)\SClass.obj $(ObjDir)\SeqTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tSeq_Ar.exe:	$(ObjDir)\tSeq_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\SeqTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tSeq_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\SeqTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tSeq_DLL.exe:	$(ObjDir)\tSeq_DLL.obj $(ObjDir)\SClass.obj $(ObjDir)\SeqTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tSeq_DLL.obj $(ObjDir)\SClass.obj $(ObjDir)\SeqTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tSet.exe:	$(ObjDir)\tSet.obj $(ObjDir)\SClass.obj $(ObjDir)\SetTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tSet.obj $(ObjDir)\SClass.obj $(ObjDir)\SetTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tSet_Ar.exe:	$(ObjDir)\tSet_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\SetTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tSet_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\SetTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tSTree.exe:		$(ObjDir)\tSTree.obj $(ObjDir)\SClass.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tSTree.obj $(ObjDir)\SClass.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tSet_BtS.exe:	$(ObjDir)\tSet_BtS.obj $(ObjDir)\SClass.obj $(ObjDir)\SetTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tSet_BtS.obj $(ObjDir)\SClass.obj $(ObjDir)\SetTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tSrt.exe:	$(ObjDir)\tSrt.obj $(ObjDir)\SClass.obj $(ObjDir)\SrtTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tSrt.obj $(ObjDir)\SClass.obj $(ObjDir)\SrtTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tSrt_Ar.exe:	$(ObjDir)\tSrt_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\SrtTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tSrt_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\SrtTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tStk_Ar.exe:	$(ObjDir)\tStk_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\StkTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tStk_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\StkTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tStk_LL.exe:	$(ObjDir)\tStk_LL.obj $(ObjDir)\SClass.obj $(ObjDir)\StkTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tStk_LL.obj $(ObjDir)\SClass.obj $(ObjDir)\StkTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tString.exe:	$(ObjDir)\tString.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tString.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tTly.exe:	$(ObjDir)\tTly.obj $(ObjDir)\SClass.obj $(ObjDir)\TlyTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tTly.obj $(ObjDir)\SClass.obj $(ObjDir)\TlyTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tTly_Ar.exe:	$(ObjDir)\tTly_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\TlyTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tTly_Ar.obj $(ObjDir)\SClass.obj $(ObjDir)\TlyTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tTly_LL.exe:	$(ObjDir)\tTly_LL.obj $(ObjDir)\SClass.obj $(ObjDir)\TlyTst.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tTly_LL.obj $(ObjDir)\SClass.obj $(ObjDir)\TlyTst.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp

tTime.exe:	$(ObjDir)\tTime.obj $(FoundationLibrary)
	@echo Linking $@
	@echo $(LinkerFlags)+ > Stroika.Rsp
	@echo $(BCCDir)\lib\C0$(WFlag)$(Model).Obj+ >> Stroika.Rsp
	@echo $(ObjDir)\tTime.obj >> Stroika.Rsp
	@echo $@ >> Stroika.Rsp
	@echo $(@:.exe=.map) >> Stroika.Rsp
	!if		$(OS)=="Windows"
		@echo Import.Lib+ >> Stroika.Rsp
	!endif
	@echo $(FoundationLibrary)+ >> Stroika.Rsp
	@echo C$(WFlag)$(Model).Lib FP87.Lib Math$(WFlag)$(Model).lib $(LinkerExtraLibs) >> Stroika.Rsp
	@$(Linker) @Stroika.Rsp
	@$(RM) Stroika.Rsp


clean:
#	Cannot do what we should here cuz line too long error with DOS.
#	$(RM)	$(Objs)
	@$(RM)	$(ObjDir)\*.*

clobber:	clean
#	Cannot do what we should here cuz line too long error with DOS.
#	@$(RM)	$(TestSuites)
	@$(RM)	*.exe
	@$(RM)	*.map


# -P flag: c++ code regardless of file extension
.cc.obj:
	@echo Compiling $<
	@echo $(CPPFlags) > Stroika.CFG
	@echo $(CPlusFlags) >> Stroika.CFG
	@echo $(Includes) >> Stroika.CFG
	@$(CPlusPlus) -c -P +Stroika.CFG -o$@ $<
	@$(RM) Stroika.CFG



# For gnuemacs:
# Local Variables: ***
# mode:Text ***
# tab-width:4 ***
# End: ***
