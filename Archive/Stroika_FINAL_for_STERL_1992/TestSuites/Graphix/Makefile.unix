# Copyright(c) Sophist Solutions Inc. 1990-1992.  All rights reserved
#
# $Header: /fuji/lewis/RCS/Makefile.unix,v 1.1 1992/09/04 02:08:55 lewis Exp $
# 
# Description:
# 		Stroika TestSuite makefile for UNIX
# 
# TODO:
# 
# 
# Notes:
# 
# 
# Changes:
#		$Log: Makefile.unix,v $
# Revision 1.1  1992/09/04  02:08:55  lewis
# Initial revision
#
#		Revision 1.6  1992/09/04  01:09:46  lewis
#		*** empty log message ***
#
#		Revision 1.5  1992/07/22  02:00:57  lewis
#		Renamed testsuite files more consistently.
#
#		Revision 1.4  1992/07/21  06:47:23  lewis
#		Re-order so Foundation testsuites come first - probably we should have
#		a separate directory for other layers.
#		Also do ../TestSuite hack so I can type make in top level dir.
#
#		Revision 1.3  1992/07/01  02:50:05  lewis
#		Cleanup makefile a bit - add LibDir Macro, and Rcs log header.
#
#
# 
#
#
#
.SUFFIXES:	.cc .hh

ObjDir	=	./
SrcDir=		../Sources

LibDir				=	../../../Library/
StroikaLibrary		=	$(LibDir)Stroika.a
FoundationLibrary	=	$(LibDir)Foundation/Foundation.a
GraphixLibrary		=	$(LibDir)Graphix/Graphix.a $(FoundationLibrary)

Includes = -I../Headers -I$(LibDir)Foundation/Headers/ -I$(LibDir)Graphix/Headers/



TestSuites=						\
	tArray	 					\
	tBag	 					\
	tBag_Array	 				\
	tBag_LinkList				\
	tDate	 					\
	tException 					\
	tFile						\
	tHashTable					\
	tInt64						\
	tMapping_HashTable			\
	tMemory 					\
	tQueue 						\
	tQueue_Array 				\
	tQueue_ArrayBounded 		\
	tQueue_DoubleLinkList 		\
	tSequence_Array 			\
	tSequence_DoubleLinkList 	\
	tStack_Array 				\
	tStack_ArrayBounded			\
	tStack_LinkList				\
	tString						\
	tTime


# Graphix not yet supported - soon break into separate test suites...
#	tOSConfiguration 			\
#	tPixelMap	 				\
#	tRegion




all:		TestSuites

../TestSuite:	TestSuites

TestSuite:	TestSuites

TestSuites:	$(TestSuites)

test:		$(TestSuites)
	for i in $(TestSuites); do\
		$$i;\
	done;	


tArray:	$(ObjDir)tArray.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tArray.o $(LDFlags) $(FoundationLibrary) -lm $(LinkerExtraLibs)

tBag:	$(ObjDir)tBag.o $(ObjDir)BagTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tBag.o $(ObjDir)BagTests.o $(ObjDir)CollectionTests.o $(LDFlags) $(FoundationLibrary) -lm $(LinkerExtraLibs)

tBag_Array:	$(ObjDir)tBag_Array.o $(ObjDir)BagTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tBag_Array.o $(ObjDir)BagTests.o $(ObjDir)CollectionTests.o $(LDFlags) $(FoundationLibrary) -lm $(LinkerExtraLibs)

tBag_LinkList:	$(ObjDir)tBag_LinkList.o $(ObjDir)BagTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tBag_LinkList.o $(ObjDir)BagTests.o $(ObjDir)CollectionTests.o $(LDFlags) $(FoundationLibrary) -lm $(LinkerExtraLibs)

tDate:	$(ObjDir)tDate.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tDate.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tException:	$(ObjDir)tException.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tException.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tFile:	$(ObjDir)tFile.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tFile.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tHashTable:	$(ObjDir)tHashTable.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tHashTable.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tInt64:	$(ObjDir)tInt64.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tInt64.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tMapping_HashTable:	$(ObjDir)tMapping_HashTable.o $(ObjDir)MappingTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tMapping_HashTable.o $(ObjDir)MappingTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tMemory:	$(ObjDir)tMemory.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tMemory.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tQueue:	$(ObjDir)tQueue.o $(ObjDir)QueueTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tQueue.o $(ObjDir)QueueTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tQueue_Array:	$(ObjDir)tQueue_Array.o $(ObjDir)QueueTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tQueue_Array.o $(ObjDir)QueueTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tQueue_ArrayBounded:	$(ObjDir)tQueue_ArrayBounded.o $(ObjDir)QueueTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tQueue_ArrayBounded.o $(ObjDir)QueueTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tQueue_DoubleLinkList:	$(ObjDir)tQueue_DoubleLinkList.o $(ObjDir)QueueTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tQueue_DoubleLinkList.o $(ObjDir)QueueTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tSequence:	$(ObjDir)tSequence.o $(ObjDir)SequenceTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tSequence.o $(ObjDir)SequenceTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tSequence_Array:	$(ObjDir)tSequence_Array.o $(ObjDir)SequenceTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tSequence_Array.o $(ObjDir)SequenceTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tSequence_DoubleLinkList:	$(ObjDir)tSequence_DoubleLinkList.o $(ObjDir)SequenceTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tSequence_DoubleLinkList.o $(ObjDir)SequenceTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tSet_Array:	$(ObjDir)tSet_Array.o $(ObjDir)SetTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tSet_Array.o $(ObjDir)SetTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tSet_BitString:	$(ObjDir)tSet_BitString.o $(ObjDir)SetTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tSet_BitString.o $(ObjDir)SetTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tStack_Array:	$(ObjDir)tStack_Array.o $(ObjDir)StackTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tStack_Array.o $(ObjDir)StackTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tStack_ArrayBounded:	$(ObjDir)tStack_ArrayBounded.o $(ObjDir)StackTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tStack_ArrayBounded.o $(ObjDir)StackTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tStack_LinkList:	$(ObjDir)tStack_LinkList.o $(ObjDir)StackTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tStack_LinkList.o $(ObjDir)StackTests.o $(ObjDir)CollectionTests.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tString:	$(ObjDir)tString.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tString.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tTime:	$(ObjDir)tTime.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tTime.o $(FoundationLibrary) -lm $(LinkerExtraLibs)

tOSConfiguration:	$(ObjDir)tOSConfiguration.o $(FoundationLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tOSConfiguration.o $(GraphixLibrary) -lXm -lXt -lX11 -lm $(LinkerExtraLibs)

tPixelMap:	$(ObjDir)tPixelMap.o $(GraphixLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tPixelMap.o $(GraphixLibrary)  -lXm -lXt -lX11 -lm $(LinkerExtraLibs)

tRegion:	$(ObjDir)tRegion.o $(GraphixLibrary)
	@echo Linking $@
	@$(Linker) $(LinkerFlags) -o $@ $(ObjDir)tRegion.o $(GraphixLibrary)  -lXm -lXt -lX11 -lm $(LinkerExtraLibs)


clean:
	@$(RM) -f $(ObjDir)*.o

clobber:	clean
	@$(RM) -f $(TestSuites)

.cc.o:
	@echo "Compiling $<"
	@$(CPlusPlus) $(CPlusFlags) -c $(Includes) $< -o $@;



# For gnuemacs:
# Local Variables: ***
# mode:Text ***
# tab-width:4 ***
# End: ***
