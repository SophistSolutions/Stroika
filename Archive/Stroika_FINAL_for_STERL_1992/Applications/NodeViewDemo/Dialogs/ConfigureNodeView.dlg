#if 0
7:Version1
18:ConfigureNodeView_ 6:Dialog ((51 47) (246 250)) T(4 4)FT6:fItem0 4:View ((18 0) (228 250)) (228 250) 7:Chicago 12  0: T F 0:
	(3) 7:fCancel 15:DialogDismisser ((196 20) (20 85)) (20 85) 7:Chicago 12  0: T 6:Cancel F T
	(3) 3:fOK 15:DialogDismisser ((188 140) (28 93)) (20 85) 7:Chicago 12  0: T 2:OK T F
	(10) 6:fTitle 10:StaticText ((4 68) (16 134)) (16 134) 7:Chicago 12  0: T 18:Configure NodeView F L 0:
	(9) 10:fDirection 4:View ((27 79) (53 92)) (39 90) 7:Chicago 12  0: T T 9:Direction
		(5) 11:fHorizontal 11:RadioButton ((24 4) (14 85)) (14 85) 7:Chicago 12  0: T 10:Horizontal F
		(5) 9:fVertical 11:RadioButton ((8 4) (14 68)) (14 68) 7:Chicago 12  0: T 8:Vertical F
		(0)
	(9) 12:fLineSegment 4:View ((83 15) (68 101)) (54 99) 7:Chicago 12  0: T T 12:Line Segment
		(12) 11:fLSVertical 10:NumberText ((15 19) (15 77)) (12 15) 6:Geneva 9  0: T 1:0 T R 9:Vertical:0 2 50 1
		(12) 13:fLSHorizontal 10:NumberText ((31 2) (15 94)) (12 15) 6:Geneva 9  0: T 1:0 T R 11:Horizontal:0 2 50 1
		(0)
	(9) 8:fSpacing 4:View ((83 135) (68 103)) (54 101) 7:Chicago 12  0: T T 7:Spacing
		(12) 9:fSpacingV 10:NumberText ((15 23) (15 77)) (12 15) 6:Geneva 9  0: T 1:0 T R 9:Vertical:0 2 50 1
		(12) 9:fSpacingH 10:NumberText ((31 6) (15 94)) (12 15) 6:Geneva 9  0: T 1:0 T R 11:Horizontal:0 2 50 1
		(0)
	(4) 11:fExpandable 8:CheckBox ((160 76) (14 92)) (14 92) 7:Chicago 12  0: T 10:Expandable F
	(0)
#endif

#ifndef	__ConfigureNodeView__
#define	__ConfigureNodeView__

#include	"Dialog.hh"
#include	"CheckBox.hh"
#include	"RadioButton.hh"

#include	"NumberText.hh"

#include	"NodeView.hh"

// text before here will be retained: Do not remove or modify this line!!!


class ConfigureNodeView_ : public Dialog {
	public:
		ConfigureNodeView_ ():
			Dialog (Point (228, 250), 0.5, 0.5)
		{

			AddSubView (fCancel = new DialogDismisser (*this, "Cancel", True));
			fCancel->SetExtent (196, 20, 20, 85, eNoUpdate);
			SetCancelButton (fCancel, eNoUpdate);

			AddSubView (fOK = new DialogDismisser (*this, "OK"));
			fOK->SetExtent (192, 144, 20, 85, eNoUpdate);
			SetDefaultButton (fOK, eNoUpdate);

			AddSubView (fTitle = new StaticText ());
			fTitle->SetExtent (4, 68, 16, 134, eNoUpdate);
			fTitle->SetWordWrap (False, eNoUpdate);
			fTitle->SetText ("Configure NodeView", eNoUpdate);

			AddSubView (fDirection = new View ());
			fDirection->SetExtent (40, 80, 39, 90, eNoUpdate);
			TitledAdornment*	groupAdorn6 = new TitledAdornment ("Direction", new Rectangle ());
			fDirection->SetAdornment (groupAdorn6, eNoUpdate);

			fDirectionRadioBank.SetController (GetController ());

			fDirection->AddSubView (fHorizontal = new RadioButton ("Horizontal"));
			fHorizontal->SetExtent (24, 4, 14, 85, eNoUpdate);
			fDirectionRadioBank.AddRadioButton (fHorizontal);

			fDirection->AddSubView (fVertical = new RadioButton ("Vertical"));
			fVertical->SetExtent (8, 4, 14, 68, eNoUpdate);
			fDirectionRadioBank.AddRadioButton (fVertical);

			AddSubView (fLineSegment = new View ());
			fLineSegment->SetExtent (96, 16, 54, 99, eNoUpdate);
			TitledAdornment*	groupAdorn7 = new TitledAdornment ("Line Segment", new Rectangle ());
			fLineSegment->SetAdornment (groupAdorn7, eNoUpdate);

			fLineSegment->AddSubView (fLSVertical = new NumberText (GetTextController (), 0));
			fLSVertical->SetExtent (16, 80, 12, 15, eNoUpdate);
			fLSVertical->SetFont (&kApplicationFont);
			fLSVertical->SetValue (0, eNoUpdate);
			LabelAdornment*	textAdorn8 = new LabelAdornment ("Vertical:", new Rectangle ());
			fLSVertical->SetAdornment (textAdorn8, eNoUpdate);
			fLSVertical->SetMinValue (2);
			fLSVertical->SetMaxValue (50);

			fLineSegment->AddSubView (fLSHorizontal = new NumberText (GetTextController (), 0));
			fLSHorizontal->SetExtent (32, 80, 12, 15, eNoUpdate);
			fLSHorizontal->SetFont (&kApplicationFont);
			fLSHorizontal->SetValue (0, eNoUpdate);
			LabelAdornment*	textAdorn9 = new LabelAdornment ("Horizontal:", new Rectangle ());
			fLSHorizontal->SetAdornment (textAdorn9, eNoUpdate);
			fLSHorizontal->SetMinValue (2);
			fLSHorizontal->SetMaxValue (50);

			AddSubView (fSpacing = new View ());
			fSpacing->SetExtent (96, 136, 54, 101, eNoUpdate);
			TitledAdornment*	groupAdorn8 = new TitledAdornment ("Spacing", new Rectangle ());
			fSpacing->SetAdornment (groupAdorn8, eNoUpdate);

			fSpacing->AddSubView (fSpacingV = new NumberText (GetTextController (), 0));
			fSpacingV->SetExtent (16, 84, 12, 15, eNoUpdate);
			fSpacingV->SetFont (&kApplicationFont);
			fSpacingV->SetValue (0, eNoUpdate);
			LabelAdornment*	textAdorn10 = new LabelAdornment ("Vertical:", new Rectangle ());
			fSpacingV->SetAdornment (textAdorn10, eNoUpdate);
			fSpacingV->SetMinValue (2);
			fSpacingV->SetMaxValue (50);

			fSpacing->AddSubView (fSpacingH = new NumberText (GetTextController (), 0));
			fSpacingH->SetExtent (32, 84, 12, 15, eNoUpdate);
			fSpacingH->SetFont (&kApplicationFont);
			fSpacingH->SetValue (0, eNoUpdate);
			LabelAdornment*	textAdorn11 = new LabelAdornment ("Horizontal:", new Rectangle ());
			fSpacingH->SetAdornment (textAdorn11, eNoUpdate);
			fSpacingH->SetMinValue (2);
			fSpacingH->SetMaxValue (50);

			AddSubView (fExpandable = new CheckBox ("Expandable", GetController ()));
			fExpandable->SetExtent (160, 76, 14, 92, eNoUpdate);
		}

		DialogDismisser*				fCancel;
		DialogDismisser*				fOK;
		StaticText*						fTitle;
		View*							fDirection;
		RadioBank						fDirectionRadioBank;
		RadioButton*					fHorizontal;
		RadioButton*					fVertical;
		View*							fLineSegment;
		NumberText*						fLSVertical;
		NumberText*						fLSHorizontal;
		View*							fSpacing;
		NumberText*						fSpacingV;
		NumberText*						fSpacingH;
		CheckBox*						fExpandable;
};


// text past here will be retained: Do not remove or modify this line!!!
class ConfigureNodeView : public ConfigureNodeView_ {
	public:
		ConfigureNodeView (NodeView& nodeView) :
			ConfigureNodeView_ ()
		{
			if (nodeView.GetDirection () == Point::eVertical) {
				fVertical->SetOn (True);
			}
			else {
				fHorizontal->SetOn (True);
			}
			fExpandable->SetOn (nodeView.GetExpandable ());
			fLSVertical->SetValue (nodeView.GetArcLength ().GetV ());
			fLSHorizontal->SetValue (nodeView.GetArcLength ().GetH ());
			fSpacingV->SetValue (nodeView.GetSpacing ().GetV ());
			fSpacingH->SetValue (nodeView.GetSpacing ().GetH ());
		}
		
	protected:
		override	void	ButtonPressed (AbstractButton* button)
		{
			if (button == &fDirectionRadioBank) {
				ResetFields ();
			}
		}
	private:
		nonvirtual	void	ResetFields ()
		{
			fLSVertical->SetEnabled (fVertical->GetOn ());
			fLSHorizontal->SetEnabled (fHorizontal->GetOn ());
			fSpacingV->SetEnabled (fHorizontal->GetOn ());
			fSpacingH->SetEnabled (fVertical->GetOn ());
		}
};


#endif	__ConfigureNodeView__
