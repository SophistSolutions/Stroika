# Copyright(c) Sophist Solutions Inc. 1990-1992.  All rights reserved
#
# $Header: /fuji/lewis/RCS/Config.snake,v 1.1 1992/06/19 22:24:45 lewis Exp $
# 
# Description:
#		Configuration flags for Stroika build
#		Included by cmake and flags passed along to make.
#
#		These flags are specially setup for compilation on an HP-9000-700, under HPUX 8.0
#		X11R4, Motif 1.1.1.
#
# TODO:
# 
# 
# Notes:
# 
# 
# Changes:
#		$Log: Config.snake,v $
#		Revision 1.1  1992/06/19  22:24:45  lewis
#		Initial revision
#
#		Revision 1.18  1992/04/24  09:11:41  lewis
#		Lots of new comments about flags.
#
#		Revision 1.17  92/04/20  14:42:27  14:42:27  lewis (Lewis Pringle)
#		Comment flags better, and added -D_POSIX_SOURCE - ported stroika to POSIX.
#		
#
# 
#




#
# Variables NOT exported and NOT referenced in Makefile scripts.
# These are just a convienience to setup parameters for the exported variables below.
#


#
# Debug can be either 0 or 1, depending on whether or not you want the stroika define qDebug on or off.
# This configuration flag primarily indicates whether or not to expand asserts, and invariants. But it also
# sometimes triggers the saving of extra information in structures, so it is important that all .o's combined
# from both the Stroika library and our application agree on the value of this define...
#
#Debug=0
#Debug=1
Debug=1


#
# The -g flag tells the Unix compiler whther or not to save symbolic information for running a source level debugger.
# While use of a source level debugger may be nice, it dramatically slows down, ar, and link time, and makes applications
# several times larger. This can be turned on/off on a module by module (.o file by .o file) basis.
#
#DashGFlag=""
#DashGFlag="-g"
DashGFlag=""



#
# This is a set of flags that will be haned to the compiler to indicate what optimization is to be done.
# Since optimizing takes time, I generally set this to the empty string, and go all out when I am shipping
# code.
#
#OptimizeFlag=""
#OptimizeFlags="-O"
OptimizeFlag=""



#
# Make this 0 or 1, to turn off/on inclusion of rcs strings into binaries. This makes binaries slightly larger when
# used, but can be helpful to identify the vintage of the code you are linking against.
#
#IncludeRCSIDs=0
#IncludeRCSIDs=1
IncludeRCSIDs=1



#
# flag to control dynamic link lib inclustion
#
# for dynamic link libraries - the default, but it does not work well with xdb.
#dynLibFlag=""
#
#for static link libraries (needed to use xdb - sometimes, but much bigger binaries)
#dynLibFlag="-Wl,-a,archive"
dynLibFlag=""






#
# These flags probably need not be edited - they define a bunch of things that tell Stroika what GUI, and
# so on to use.
#
#		qSnake			=>		Build for the HP PaRisk "snake" architecture
#		qUnixOS			=>		OS Services available can genrally be summed up as being Unix style.
#		qHPCPlus		=>		Development envirment is HP provided CFront 2.1 based C++
#		qXGDI			=>		Graphix layer should assume compiling against X GDI for graphix implementation
#		qMotifGUI		=>		For GUI descisions, prefered GUI for widgets, and behavior is Motif
#		qXtToolkit		=>		Xt Toolkit intrinsics available to implement user interactions.
#		qXmToolkit		=>		Use OSF Xm implementation to get motif style widgets
#		_POSIX_SOURCE	=>		tell the compiler to show us ONLY posix symbols to encourage us to be POSIX complaint.
#
environConfigDefines="-DqSnake -DqUnixOS -DqHPCPlus -DqXGDI -DqMotifGUI -DqXToolkit -DqXtToolkit -DqXmToolkit -D_POSIX_SOURCE"





#
# Variables actually exported and referenced in Makefile scripts.. Generally this are defined by the control variables
# above, and need not be tampered with, except when porting to a new system, or system software release.
#
export	AR; AR=ar
export	RANLIB; RANLIB=:
export	RM; RM=rm;
export	CPlusPlusSystem;CPlusPlusSystem=hpcplus
export	CPlusPlus; CPlusPlus=CC
export	Linker; Linker=CC
export	LinkerFlags; LinkerFlags="$dynLibFlag $DashGFlag -z -L/usr/lib/Motif1.1 -L/usr/lib/X11R4"
export	CPPFlags; CPPFlags="$environConfigDefines -DqDebug=$Debug -DqIncludeRCSIDs=$IncludeRCSIDs -I/usr/include/X11R4 -I/usr/include/Motif1.1"
export	CPlusFlags; CPlusFlags="$DashGFlag $OptimizeFlags $CPPFlags"





# For gnuemacs:
# Local Variables: ***
# mode:Text ***
# tab-width:4 ***
# End: ***
