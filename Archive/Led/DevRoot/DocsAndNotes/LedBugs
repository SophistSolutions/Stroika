                                Known/Open Bugs


Last Serial# Used:	1660


DATE		Act'n	WHO		Description
		(SPR#)
----		-----	---		-----------



051008	NOTE		LGP		I looked through the code, and I think the trouble is that
						Led_Win32_Helper<BASE_INTERACTOR>::OnGetDlgCode_Msg ()
						only returns DLGC_WANTALLKEYS if the ES_MULTILINE and
						ES_WANTRETURN styles are set. I THINK - ActiveLedIt
						doesn't set these styles. We should somehow make sure
						that they DO get set - not just in ActiveLedIt - by
						default with other Led_Win32/Led_MFC-based Led controls.
051008	REPORT	ken@keng	>We are considering using your control with our application
						>but for some reason, with the demo, in ms access 2000
						>the enter key will not put a new line it, and it will not
						>fire the keypress or keydown events.
						>
						>It seems to work fine in VB.
						>
						>Is this a known issue?



050513	REPORT	DHENRSN	>From: Derek Henderson [mailto:dhenderson@odysseylearn.com] 
		(1660)			>Sent: Friday, May 13, 2005 9:09 AM
						>To: Lewis G. Pringle, Jr.
						>Cc: info-led@sophists.com
						>Subject: Re: Bug
						...
						>With your help, I was able to get this resolved. I do have another
						>problem though. When I load in the attached RTF file, the images
						>in the table do not display properly. They display at the end
						>of the table instead of in the table.
						> 
						>The document looks fine in word.
						>Any suggestion?
050513	NOTE		LGP		Reproduced, and saved sample file in SPRs/1660/1351316.rtf



Implement Value property in AL - so its value appears in a POST (test if that works,
and then - perhaps - update samples?)




040511	FIXED	LGP			Issue is that combobox window size needs larger horizontal
						size.
040511	WORKING	LGP			I cannot repro on WinXP, but on Win2k - I did see this.
						Window doesn't pop down.
040511	NOTE		LGP			Note old report - was same thing: Win2kSP4, plus VB60SP5 -
						run AL Toolbar sample. Note how combo-boxes don't popup!
						<SERIOUS FOR 3.1>
040426	REPORT	MUTHU	> > > > > > > > > From: "Muthu Nedumaran" <muthu@murasu.com>
		(1659)			> > > > > > > > > To: "Lewis G. Pringle, Jr." <lewis@sophists.com>
						> > > > > > > > > Sent: Monday, April 26, 2004 3:05 PM
						> > > > > > > > > Subject: Re: Populating Fonts and Sizes in Toolbar
						> > > > > > > > >
						> > > > > > > > >
						> > > > > > > > > > Lewis,
						> > > > > > > > > >
						> > > > > > > > > > Here's a zip file that contains an example.  Run
						> > Project1.exe
						> > > > and
						> > > > > > > > click
						> > > > > > > > on
						> > > > > > > > > > the "Toolbar" button to add the toolbar to ActiveLedIt1.
						> > > > I've
						> > > > > > run
						> > > > > > > > this
						> > > > > > > > > on
						> > > > > > > > > > both WinXp and Win2000 - the toolbar gets added but the
						> font
						> > > > and
						> > > > > > > > fontsize
						> > > > > > > > > > combo boxes are not populated.


	+	Hersh Kathuria complained in email (mostly phone call) - 2004-02-22 that he
		had a problem with print margins not being properly respected in ActiveLedIt
		pritning (from an RTF file). He said he woudl send me a sample.


	+	Funny Check on Web (under help) menu names wiht Ledit and ledLineit MACOS.
	
	+	Slightly funny window-size behavior on MacOS. Maybe make window a little wider
		and pin height to max of page-size.
		
	+	kReplaceAgainCmd (add Cmd#) to LedLineItPP resource.h file and to LedLienit.r file
		(MENU)






040101	REPORT	LGP			New 'find' with tables bug report. Open RTF 1.7 spec in LedIt. Search
		(1624)			for some word that only occurs at the end?? I forget which - TERMINATE? -
						and then note how you scroll to the	wrong place. As a GUESS - I THINK
						that if you scroll around there first (so all tables shown) or wait til
						all tables computed (size) - then do this - the problem won[t occur. I THINk
						the problem is with the code to delay table size computations.



031217	REPORT	LGP			Force an Exception throw in the first call to
		(1601)			Led_StdDialogHelper_SpellCheckDialog::DoFindNextCall (was from OLE call
						in my case) - and then get assertion errors unwinding the
	 					stack destroying stack based Widget/Dialog objects.




------- ABOVE --- SHORT_TERM_TODO - OR SHORT_TERM_TO_RECLASSIFY -----------------

















------------- START GENERAL LED BUG-FIXES -------------


040211	REPORT	LGP			Take the string "--- ----- ------" and double click on
		(1654)			sequences of dashes. These SHOULD be treated as an entire word.
						Similarly - when you control-RIGHT-ARROW (to got to next word),
						we should treat a run of identical characters (punct) as a single
						word. This is closer to what MSWOORD XP does (what DevStudio does
						is more crazy than what Led currently does).

031230	REPORT	LGP			In new LedComboBoxWidget (see SPR#1580) - Clicking
		(1605)			outside of the popup no longer (always) makes the popup disappear.


031230	REPORT	LGP			In new LedComboBoxWidget (see SPR#1580) - If possible -
		(1607)			fix so ESC and RETURN apply to the COMBOBOX popup - rather
						than the	dialog as a whole.
							SOLUTION MAYBE TO DO OUR OWN SUB-EVENT LOOP - see
						fakemenu.c code (on my laptop).


040211	REPORT	LGP			Add FileChangedWatcher () helper class - and use to monitor changes
		(1649)			in UDs and also - in LedLineIt - to detect and reload files.


031210	REPORT	LGP			TextInteractor::OnDoReplaceAllCommand () could probably be made faster if I
		(1586)			first checked search from start and from end (to verify range in which
						there will be replaces) - and then used that whole range to do a single
						replace context - instead of multiple replace objects. Test to see if this
						is true (tried replace of "Date-Found" something or in 12MB dictionary source
						file and it took forever).

040113	REPORT	LGP			Consider making scroll-so-showing behavior (autoscroll) so that it prefers
		(1619)			pinning horizontally to the left (instead of prefering no change to horizontal
						position). Test a bit with other editors. My sense - empirically - is that I would
						often prefer if it jumped back to the left side of the scrollbar - at least in 
						LedLineIt (so maybe this is optional behavior)


030923	REPORT	LGP			Add 'search backwards' checkbox to the Find and Replace dialog
		(1554)			boxes. Perhaps also update the Find API in OLEAUT for ActiveLedIt.

030605	REPORT	LGP			Change REPLACE dialog to be more like the spellchecking dialog. Don't
		(1527)			dismiss - at least for some calls (like find and replace).


030601	REPORT	LGP			Led lets you type in a read-only text widget.
		(1519)			See the read-only text widget in the spellchecking
						dialog (On Win32). It displays with a gray background
						but since OnBadUserInput was overridden to just
						beep, the expected throw doesn't happen and blow
						us out of AboutToUpdate. Be careful how this is fixed,
						cuz we need an outer catcher to handle the throws,
						and that may not (always) be around for dialogs using
						this control.

030527	REPORT	LGP			Do improved CSS support (follow on from SPR#0574). At least support stuff
		(1507)			in SPR#1113 for 3.1.

021101	NOTE					Never mind. I want to get d1 out the door.
021101	NOTE	LGP				Check if EASY todo. If yes, then do for d1, and else defer for
						d2.
020822	REPORT	Shapiro	> > -----Original Message-----
		(1113)			> > From: Jake.Shapiro@marsh.com [mailto:Jake.Shapiro@marsh.com]
						> > Sent: Thursday, August 22, 2002 11:35 PM
						> > To: info@sophists.com
						> > Subject: ActiveLedit: preservation of Word formating when converting
						> into
						> > HTML
						> >
						> > Hi,
						...	
						> >
						> > I tested your activeX demo control and it preserves paragraph 
						> > structure but indentation, tabs and, more importantly, nested 
						> > paragraphs are lost when
						> I
						> > press GetAllHTML.
						> 
						> [LGP] I don't think there is any notion of nested paragraphs in HTML. 
						> At least none that I know of. Similarly for RTF.
						> 
						>  I think the problem with Led's behavior on the text you sent me is 
						> that it  is not persevering the MARGIN settings, and the first-indent 
						> settings for  some of the paragraphs (when you save it as HTML - if 
						> you save as RTF it  does fine).
						> 
						>  You are right that the tabstops are ALSO not being saved - but I 
						> didn't  see where that mattered for the text you sent me.

030523	REPORT	LGP			Improve HTML table IO to at least include border, cellspacing and
		(1502)			cell margins support (based on SPR#1141).



030527	REPORT	LGP			open costa-new.doc in MSWordXP and paste into LedIt. Note the
		(1508)			table has the wrong top/bottom	margin values...



030517	REPORT	LGP			Small bug error handling reading a file. Open (illegal)
		(1491)			RTF file SPR_1490.rtf. Then get qAssertWarningForEqualPriorityMarkers
						assertion error in StyleMarkerSummarySink::CombineElements.
							LOWPRI.

030326	REPORT	LGP			"Insert URL" command should be enabled when a region
		(1382)			is selected if its on just one line(para). Then when the command
						is invoked - use the selected text as the URL contents (URL value
						and NAME value).

030201	REPORT	LGP			In LedIt(MFC) select multiple paras and use the
		(1285)			ParaIndents dialog. Set the LHS margin to zero and leave
						the RHS margin UNSET. Do the command and note how RHS
						margin gets set to ZERO as well. Works OK for a single
						para - I believe - but not for multiple ones.

030131	REPORT	LGP			Spinoff of SPR#1270. Create a conext menu in LedDialogWidget for
		(1281)			the various builtin edit commands (sb pretty easy - but somewhat
						lowpri now that at elast SPR#1270 is done - and basic cmd-key equivs
						for basic edit commands work).

030131	REPORT	LGP			We don't make it easy to implement a single-CTRL-Z UNDO/REDO
		(1280)			mechanism. Only easy to do separate comamnds for undo/redo.
						Fix LedDialogWidget to have CTRL-Z do undo/redo combo,
						and make it easy for others to do likewise.

030322	REPORT	LGP			Open file SPR_1372.rtf. Note how Japanese characters
		(1372)			are all messed up. Open the same file with WordPad on WinXP
						or WinWord XP on Win XP, and the Japanese text looks fine.

030522	NOTE		LGP			Set a breakpoint in StyledTextIOReader_RTF::ConstructDIBFromEMFHelper ().
						Then fudge the rect size just before the PlayEnhMetaFile () call (to 1000x1000),
						and the image looks pretty good. This is a big hint!
030322	REPORT	LGP			Open file SPR_1373.rtf. The pictures are messed up
		(1373)			on LedIt (3.1a4). They look fine with WinWord XP and Wordpad on
						WinXP. There are other files in this folder with the same picture
						which display fine on all 3 editors.

031230	DEFER	LGP			Deferable for Led 3.1.
031230	REPORT	LGP			In new LedComboBoxWidget (see SPR#1580) - Try using UNICODE
		(1606)			LISTBOX class (even with non-UNICODE Led (STDKCHAR) -	dynamic
						(control) UNICODE choice.<<TRIED BUT DIDNT WORK. EITHER DEBUG
						OR WRITE OWNER_DRAW_LISTBOX CODE SO IT DRAWS PROPERLY>>

031230	DEFER	LGP			Deferable for Led 3.1.
031230	REPORT	LGP			Add CB_SETCURSEL (and all releated reasoable CB_ messages
		(1608)			for this control.


------------- END GENERAL LED BUGFIXES -------------









----- START PERFORMANCE TESTING/ BUGS ----------

030319	REPORT	LGP			Setup DevPartner profiling with LedLineItMFC, and run that, and
		(1358)			see if I can do any tweeks of that code. It MAYBE the only things
						there that are slow are very long lines (esp on some machines like
						CERBERUS) and InvertRect (HILIGHT TO BLUE) code.

030318	REPORT	LGP			Based on SPR#1352- go back and make sure BufferedIndirectSrcStream
		(1353)			usage is optional.

030319	REPORT	LGP			Add re-implementing FontCacheInfoUpdater code to list of things
		(1356)			todo for performance reasons (and also modularity - it should be
						inside LedGDI - not TextImager).

021213	REPORT	LGP			Fix PartitioningTextImager::GetTextDirection (size_t charPosition)
		(1205)			to be optimized for qCacheTextMeasurementsForPM - keeping TextBuf cache
						and use that cache elsewhere...

030521	NOTE		LGP			Close related to SPR#1498. Retest that when I address this.
030521	REPORT	LGP			Performance bug based on SPR#1496. T4. Open RTF 1.7 Specification.rtf.
		(1497)			Select all, CLEAR, and undo. The CLEAR (DEL KEY) takes WAY too long.
						Basically - this means the RTF (probably table generation)	code is much
						too slow. We probably COULD ship with this - but its highly desirable to fix.

----- END PERFORMANCE TESTING/ BUGS ----------








----- START TABLE BUGS ----

030430	REPORT	LGP			Must more fully support RTF \trleft flag. This allows for
		(1453)			tables to be placed at just the right position and is frequently
						used (in RTF 1.7 spec doc) to make tables appear to be right justified
						(or at least aligned with the RHS of the document).

030307	REPORT	LGP			D&D of a selected range of cells doesn't work. More specifically
		(1328)			even doing a single click on a range of selected cells has the effect
						of deselecting the entire table (cuz of the SimpleEmbedding selection
						semantics - I think).

030401	REPORT	LGP			Add UI for SplitTable, Split Cell and Merge Cells (something vaguely
		(1400)			like MSWord provides, though I may want it different. I found no way in
						MSWord to UNMERGE cells).

030401	NOTE		LGP			This will probably need to be defered til AFTER Led 3.1 as part of a
						full page object support program (where our scroll positions are defined
						differently).
030401	REPORT	LGP			Table Scrolling support (fix so you can start partway through
		(1397)			a cell, SOMEHOW.

030415	REPORT	LGP			Based on SPR#1425 - Add Split Cell / Merge cell commands.
		(1436)			LOW PRI for 3.1.

030410	NOTE					LGP handle this (probably) by creating a special 'mapping' TextStore
						which makes a main with nested table TextStores look all like one big one.
						Then - find works with that (though the mapping back to actual coords is
						tricky for case of nested tables? Must have nested nested special mapping
						textstores). This approach is also need to make spellchecking work with
						tables.
030408	REPORT				Handle Find commands with tables
		(1415)

030408	REPORT				Handle cursoring ACROSS CELLS
		(1414)

030409	REPORT				It would be NICE if we made it hard to set selection to be
		(1420)			just BEFORE a table (at least displayed in the same row). In that case,
						just change the selection to be inside the first cell of the table.
						MAYBE NOT. MUST be able to always insert a cursor BEFORE a table
						even if its at the beginning of a doc. Look carefully at this! Maybe
						just make it happen a little less often for some cases?
							LOWPRI.


030430	REPORT	LGP			Small spacing/cell margins bugs. RTF supports more features than
		(1454)			we do. Need to support 4 values (TLBR) for cell spacing, and need to
						support different valeus for cell spacing and margins across rows.
							This is easily DEFERABLE for 3.1. Based on SPR#1396.

030515	NOTE		LGP			Already provided A way through the new properties dialog (SPR#1399). This would
						still be good, but is now deferable for 3.1.
030507	NOTE		LGP			Investigated how MSWord handles it. If a cell is selected (or a set of cells),
						then attempts to resize cols on that border resize all cells - not the whole table.
						If you resize a column without first preselecting some cells - then you resize ALL
						columns together (all that were at the same point).
							To implement this wouldn't be very hard if I restrict dotted line drawing to
						just inside the table (maybe OK). But I would also need to provide a bunch of cursors
						which would be a pain (so users gets feedback about dragging). I think I can
						defer this for 3.1. Maybe just include cell/column width in dialogs (SPR#1402).
030414	REPORT	LGP			Need to be able to resize columns. Not 100% sure we need a tracker
		(1434)			for 3.1, but it would be nice.


---- END TABLE BUGS -----








---- START ACTIVELEDIT CHANGES -----------


+	Mark as obsolete functions that can now be done via InvokeCommand(),
	such as for 'LaunchFindDialog' etc...
	<< CREATE NEW SPR AND DO AFTER B1>>>

+	Revise AL SDK docs about new API methods and support for COMMANDS.
	<< CREATE NEW SPR AND DO AFTER B1>>>

+	Add sample I've created for testing to ACTIVELEDIT SAMPLES.
	<< CREATE NEW SPR AND DO AFTER B1>>>

-- Debug small problem with dependencies in ActiveLedIt! project. Fix so can rebuildall
(relase only) and get everything compiled.

+++ Add support to ActiveLedIt to specify a watermark background (as one of ActiveLedIts
competitors does). SB easy for me. I already have basic support. Tough part is coming
up with a DEMO! WHEN I do that - change DEMO WATERMARK CODE to randomly pick a color
for MY watermark - so it always shows up. Prevents someone from setting their own
YELLOW watermark - thereby making my message invisible. (must randomly select at DLL load time?).



030509	REPORT	LGP			Do VB.Net (and .Net 2003) demo for ActiveLedIt. Opening
		(1478)			the existing VisualBasic AL demo and converting it produces an
						app that doesn't work.



040204	REPORT	LGP			Based on SPR#1618 (toolbar): Toolbar COMMAND tooltips (BALOONS) - ask
		(1632)			Sterl?

040204	REPORT	LGP			Based on SPR#1618 (toolbar): Maybe add ABOUT button (to standard bar) -
		(1633)			and maybe (in demo mode) a DEMO button?)



030326	REPORT	LGP			Revise ActiveLedIt docs to take into account new installer, and also
		(1381)			revise the Led build scripts, and website etc. Based on SPR#0795.


030328	REPORT	LGP			ActiveLedIt - installer. Add license and/or perhaps readme
		(1387)			file that appears DURING install to explain roughly what
						is being installed.
							LOWPRI.


030923	NOTE		LGP			When I do this - at same time - probably also fix 1556 (same thing for LedIt/
						LedLineIt).
030115	CLARIFY	LGP			I'm not 100% sure this is what i was referring to - but there is a property page
						that comes up from apps like DevStudio in DESIGN mode. Ours looks like SHIT. We should
						put lots of options in this panel, and then make it look good. Also - make sure
						those options get saved in the property bag?? so they stay around if a user
						sets them that way.
							This SHOULD be done for 3.1 - MEDPRI.
010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
980303	REPORT	LGP			ActiveLedIt! should have properties dialog (optionally - controlled by property) showable
		(0520)			from context menu. And should have lots more stuff in properties dialog. And that stuff
						should actually work (now not really wired up).


021010	WORKING	LGP			I quickly threw something together in Delphi 5.0. It did work.
						There were some small quirks (already in SPR#1122). But we should
						add such a demo to the list of sample codes.
021010	REPORT	LGP			Provide a DELPHI example of using ActiveLedIt.
		(1124)


021010	WORKING	LGP			I did a lot of investigation into this. There is a tool called
						aximp which you can use to create a C# WRAPPER class for the OCX, and
						to build a manifest and other stuff. I tried this and I didn't get it
						to work fully. THIS is probably what should be done CORRECTLY
						for 3.1.
							In the meantime - I also tried the builtin support for OCXs in
						VisualStudio .Net. It worked fine. You check goto Toolbox/COM and put
						a checkmark by "ActiveLedIt" and then it appears in the toolbar (under windows forms)
						and then you can use it. There were SOME quirks - but basically it worked
						pretty well.
021010	REPORT	LGP			Add .NET (Visual C#) wrappers for the OCX - so its more tightly
		(1123)			integrated.




-- Revise buildscripts to build a
	ActiveLedItDemo.zip file using (roughly) these instructions:
		<ActiveLedItDemo project
			o	Start with ActiveLedIt! 3.0.1 distribution
			o	DELETE ActiveLedIt_3.0.1.cab (leaving only demo cab) from the Binaries folder
			o	REVISE the README docs (in real project - create a ReadMeDemo.rtf file - and maybe rename
			this one!!
			<< ADD NOTES ABOUT HOW TO GET THE REAL VERSION and what is disabled in the demo version!!!>>>!
		<<< WORKING>>>
		
			<<< ADD NOTES ABOUT HOW TO REGISTER YOUR REAL COPY to the DISTRIBUTER VERSION (so people
			can register online, THAT needs to be done for the Led packages as well!!! - do a special 
			release set of folders for ComponentSource (and make appropriate changes to my copies as well).
		>


021025	NOTE	LGP			I did a bit more testing. The problem still exists, but I think
						I understand it better. I think it has todo with being inplace activated.
						It probably SHOULDNT be (at least other OCXs I insert in design mode dont
						get activeated.
							ALSO - this brings up ANOTHER SPR. I REALLY should do a decent 
						job with the Property Page. It SUCKS now - and THAT is what gets used alot in
						Borland (and probably elsewhere).
021010	REPORT	LGP			Place an instance of ActiveLedIt into Borland Delphi.
		(1122)			Then move the instance on the screen. Somehow we DONT properly
						handle the move calls and occasionally draw in the wrong (old)
						location. FIX THIS FOR 3.1!. Also - test with a DEBUG build.
						I was briefly seeing ASSERT errors from wincore.cpp - I think -
						when I tested some random pre-release build. That could have been
						a quirk of the verison I was testing - but test carefully.




030612	REPORT	LGP			Create ActiveLedIt FAQ. Include in it the item that
		(1529)			if you see quirky resizing problems with ActiveLedIt inside
						of the Microsoft ActiveX test container, then this is caused by
						a bug in that container (see SPR#1168). Users can work around
						the bug by setting the containers ambient properties "ShowGrabHandles"
						and "ShowHatching" both to FALSE.


030612	REPORT	LGP			Be sure to add license agreement and launch to some file
		(1533)			(new readme) that	pings my webserver so I know who/when installed...
						(for BOTH AL and AS)


030123	REPORT	LGP			Was asked to add 'SelFirstIndent', 'SelLeftMargin', etc.
		(1261)			Instead - consider adding new 'SelParagraphAttributes' SUBOBJECT
						and have that have properties like spaceBefore etc.
							If I can do that - then revise the existing SelFontFace stuff
						to ALSO use that paradime. MUCH BETTER. May not be able to get
						to this for 3.1, but it would be NICE.
							Based (losely) on SPR#1186- now closing that and pointing
						to this).

010830	DEFER	LGP			DEFER for Led 3.0
010830	NOTE				Add this function for the next release. Quirky - but commonly requested/used, and easy to add.
991222	REPORT	LGP		> -----Original Message-----
		(1008)			> From: D.Durrans@exeter.ac.uk [mailto:D.Durrans@exeter.ac.uk]
						> Sent: Friday, July 14, 2000 9:02 AM
						> To: info-led@sophists.com
						> Cc: dan@durrans.com
						> Subject: ActiveLedIt and Spell Checking
						....

						>It would also be handy if it could count the number of
						> words.


-------- END ACTIVELEDIT CHANGES --------------











-------- START ACTIVESPELLEDIT CHANGES ------


031217	NOTE		LGP			Maybe not an issue anymore - since I now just use the created
						tmp-object paradigm. That seems to work well. Leave this open
						issue to improve/fixup the test HMTL file.
030612	REPORT	LGP			See why some test cases involving VARIANT safearrays of strings
		(1528)			being passed back, and any var-parameters (mutli-valued-functions) being
						passed back to ActiveSpelledIt JavaScript test code.


030612	REPORT	LGP			Do An ActiveSpelledIt FAQ.
		(1530)


030612	REPORT	LGP			Need new SPR to track installer/readme stuff needed for AS
		(1531)			later in release cycle.

030612	REPORT	LGP			Track as SPR new COM APIs for AS to support dialogs etc...
		(1532)			(so it can be a plugin replacement for stuff like VSSpell, etc,
						having nothing todo with ActiveLedit - so works with RichEdit
						HWND.


-------- END ACTIVESPELLEDIT CHANGES ------








-------- START SPELLEDIT CHANGES ------


031210	REPORT	LGP			Add dictionary options dialog support to spellcheck
		(1591)			dialog (subdialog). Therein - add support to change
						location of the UD, and a few other misc options.
							LowPri for 3.1.

030619	REPORT	LGP			Tune WordScavanger to not add Chinese (all non-english chars)
		(1539)			words.


040211	REPORT	LGP			Update word scavanger to break words at '-' boundary - so we dont
		(1648)			get more	hypehenated words generated.


030603	NOTE		LGP			Instead of loading from resource - probably will write a tool to convert from
						text file to C++ #include file with staticly initialized table with values encoded.
						That allows for table to be automatically demand paged, avoids file management issues, etc.
030529	REPORT	LGP			Work on spellchecking. Be able to load spellcheck dictionary from a
		(1516)			resource or file. Make a slightly larger file to do slightly more heavy
						testing.

040211	REPORT	LGP			Fix word scavanger not to grab really long words (say over 25
		(1650)			or 50 characters?)


030529	REPORT	LGP			Work on spellchecking. Next step is to add passive spellcheck UI
		(1514)			to LedIt. All platforms, or spinoff SPR for unsupported platforms.

030603	NOTE		LGP			A halfway decent job of this has been done now (last few days). Good enough
						until we have a REAL dictionary so I can assess and improve the hueristics.
030529	REPORT	LGP			Work on spellchecking. Generate suggestions UI (and at least basic hack
		(1515)			support in _Basic engine) and popup menu to display suggstions - at least
						in LedIt.

010830	DEFER	LGP			DEFER for Led 3.0 (VERY HIGH PRIORITY FOR Led 3.1)
010830	NOTE				>The spell ckecker
							> that we have been playing with is avalable from
							> http://www.wintertree-software.com/dev/wspell/index.html
							At least look at this. I had a conversation with the VP of this company a month ago.
							Maybe do business with him, or roll my own. Probably do this FIRST as part of Led 3.1.
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970715	REPORT	LGP		LedIt! needs SpellChecking support. Perhaps this can be done via OLE?

040211	DEFER	LGP			Defer MacOS/X-Win support for after 3.1.
031210	WORKING	LGP			Implemented for Win32. Must test/tune dialogs
						for MacOS and X-Win.
031210	REPORT	LGP			Add 'Check Web' button to spellcheck dialog - to
		(1589)			launch webbrowser	with 
						http://dictionary.reference.com/search?q=stance to see
						if word present...

040211	REPORT	LGP			Opening a UTF-8 UD file wiht a non-UNICODE version of Led -
		(1647)			produces a first entry	with a couple bogus characters (BOM) stuck
						in front. Thats not good. << PROBABLY CAN BE DEFERED for 3.1>>

-------- END SPELLEDIT CHANGES ------










---------- START WIN32 CHANGES ------------------

020904	REPORT	SSW			---	on 9/4/02 12:14 PM, Sterling Wight wrote:
		(1370)			Btw, my first instinct was to switch to a led control, but I did a quick
						search for ES_RIGHT style in led and you don't pay attention to it, at
						which point I did something else. I'm sure you have a way to set alignment,
						but I (and presumably other customers) and way to lazy to look it up and
						would prefer to just set the style when I build the control.

---------- END WIN32 CHANGES ------------------







---------- START MACOS CHANGES -----------


030612	REPORT	LGP			MacOS find dialog problems under MacOS 9 (labels dont fit
		(1534)			for undef word prefix).

031213	REPORT	LGP			Add UD support to MacOS version of spelledit code.
		(1598)			SB simple and done for 3.1. See SPR#1585.

031213	NOTE		LGP			Consider asking Marc Van Olmen for a hint about how best to handle
						the background window update during modal dialog? Maybe during 
						by modal dialog callback - call updatewindow on it? Also maybe post
						to the net?
030603	REPORT	LGP			Fix SpellCheck dialog on MacOS (LedIt). Displays and is somewhat
		(1525)			functional, no listbox and no change of background display/selection from
						inside the modal dialog. Based on SPR#1513.


030224	REPORT	LGP			Based on SPR#1306. Implement DrawText/MeasurText for WIDE CHARCTERS/UNICODE
		(1310)			on MacOS using ATSUI layer.
							See http://developer.apple.com/intl/atsui.html.
							Sent note today to ask Marc for help on this (providing these two routines).
						If he doesn't - I'll hopefully get to trying it myself in a couple weeks
						(when tables are done).

030313	WORKING	LGP			Mostly taken care of now that I've solved SPR#1337. Still - wait til
						I've integreated UNICODE code, and then update my release procedures (and
						Help files) to use the new UNICODE CARBON LedIt.
030311	REPORT	LGP			Talk to Marc Van Olmen about if I should just ship the CARBON
		(1332)			version for LedIt/LedLineit from now on - but FIRST must AT LEAST
						fix bug with OPEN/SAVE dialogs (and maybe about box too, and also the
						help menu stuff above).

030313	REPORT	LGP			Cannot figure out how to get NavServices SFGetFile dialog to allow
		(1338)			"All Files" filter to work. Some files - like .sit files - just stay
						persistently grayed out (at least under MacOS X).
							Based on SPR#1337.
							LOWPRI BUG.

030313	REPORT	LGP			Small issue about HELP menu for CARBON LedIt/LedLineIt when running
		(1339)			under MacOS 9. You end up with 2 help menus. One is the system provided
						help menu, and since under CARBON - I cannot access it (no GetHelpMenu() call
						available) - I just add my own Help menu.
							Ask Marc Van Olmen what he thinks about this.
							LOWPRI BUG.

030120	REPORT	LGP			Use MacOS X interface builder app to make a sample
		(1253)			application for MacOSX which does NOT use PowerPlant. Their
						default app generate makes a simple windowed app using
						just bare MacOS. Use that as a starting point. Similer
						to LedTestWin32 (LedTestMacOS).

030313	REPORT	LGP			When saving a new file (picking a new name) and the user
		(1342)			specifies no file name suffix, automatically add one for
						.RTF, .LED, .HTM, and perhaps .TXT. (probably no caps)?
							Not 100% sure if this is the right thing todo for the Mac.
						I probably already do this for Windows. Consider - and maybe
						impelement.

030122	REPORT	LGP			MacOS AboutBox (about box) for LedIt and LedLineIt don't
		(1258)			display the version number very well. Looks bad with that background
						(at least under MacOSX). See if I can fix that.

030311	REPORT	LGP			Fix ugly MacOS AboutBox (ugly where version# written). LOWPRI.
		(1333)			See SPR#1322 (ask Marc Van Olmen).


------------ END MACOS CHANGES ------------







----------- START XWIN CHANGES ------------

030603	REPORT	LGP			Fix SpellCheck dialog on Gtk/Linux (LedIt). Displays and is somewhat
		(1524)			functional, but but-ugly, and no listbox. Based on SPR#1513.

030509	REPORT	LGP			Add right-click context menu to LedIt X-Windows app.
		(1477)

?02009	REPORT	LGP			LedIt! XWindows version doesn't support cut-paste properly
						with WinaXe 6.2 (currently installed on my XP box).

021101	NOTE	LGP				Major hint: its got todo with offsets. If the table is
						at the top of the page, it displays fine. As you move it down (insert
						NLs before it), the table progressively disapears. Maybe a clipping
						bug?
							Also - Tables on X-Win don't display table borders.
021024	REPORT	LGP			Debug why tables don't display on LINUX.
		(1165)

021101	REPORT	LGP			XWin dialogs for AddURL.
		(1166)

030311	REPORT	LGP			Debug when on Linux why tables borders are not drawn.
		(1337)

030514	DEFER	LGP			No time for 3.1 release.
030514	REPORT	LGP			Implement X-Windows Add Table/Edit Table Properties dialogs.
		(1486)			(based on SPR#1399 and SPR#1401).


------------ END XWIN CHANGES ------------









------------------- LEDIT&LEDLINEIT CHANGES ------------------------

040211	REPORT	LGP			Use new registry code to rewrite how we save LRU FileList in
		(1646)			MFC APps (LedIt/LedLineIt). Then make it so that if we have mulitple
						docs open - they SHARE the list of files by rewriting it and reloading
						it frequently)

031129	REPORT	LGP			LedLineIt/LedIt 'QuickMarks' feature (or quickmarkers?) Select
		(1574)			and do CTRL-M to create LRU list of 5 QMs. Then can right click
						to select and goto one of the quick markers.

------------------- END LEDIT&LEDLINEIT CHANGES ------------------------








------------------- LEDIT CHANGES ------------------------


030923	REPORT	LGP			Add improved options dialog boxes to LedLineIt, LedIt.
		(1556)			This is closely related to bug#0520 which is basically
						the same thing - but for ActiveLedIt.

030922	REPORT	LGP			Cleanup document OPEN (and save) code in LedIt - so
		(1553)			it shares more common code cross-platform. Also, related to
						this - is fixing the READ (for D&D) code to handle
						resource forks on MacOS (so that the file reading code
						can vector to the internalizer code with no loss of
						functionality, AND so D&D of files with 'styl' in resource
						fork get properly respoected on MacOS).
							This is a follow-on cleanup code project based on
						the bugfix SPR#1552, and really only applies to the LedIt
						sample code (no library changes should be needed).


-------------------- END LEDIT CHANGES -------------------








------------------- LedLineIt CHANGES ------------------------

031129	REPORT	LGP			Bounding parens (syntax based). For XML - do bouncing
		(1575)			open/close tags. CYCLING. Inside a tag - bounce first to select
						that tag. Next cycle is to select open (if closing),
						or closing (if opening tag). Next ^B selects entire region enclosed
						by tags. Next selects next further out nesting. Control up or down
						(in this mode) selects next object at same level up or down.


031206	REPORT	LGP			Add new Module SyntaxEditing.cpp to Led (and move coloring stuff there).
		(1583)			Create syntax-specific word-set check lists (for double clicking etc). Differnt
						good answers for C++ than for XML. Also - do auto-check algorithm
						so LedLineIt auto-picks its syntax usage (maybe make this optional - but
						don't let a great UI be the enemy of a decent one - cuz I dont have time
						to do something great here).


031230	REPORT	LGP			FIX C++ SYNTAX COLORING CODE TO PROPERLY SUPPORT COMMENTS
		(1609)			(AND MAYBE SOME MINIMAL EFFORT TO HANDLE IFDEFS RIGHT?)


030923	REPORT	LGP			Add 'reload from disk when changed' feature to LedLineIt.
		(1555)			This is occasionally useful for a line editor like LedLineIt - 
						for example - when monitoring logfiles (as I was doing for Oasis).
							If I do this - make SURE I do a decent job (better than
						uedit32) - since it CAN be quite annoying if not done well. Optionally
						preserve selection? Optionally just reload without warning dialog?
							MAYBE MAYBE also implement this for LedIt?


030327	REPORT	LGP			Fix LedLineIt's auto-indent to only operate if you've selected
		(1385)			an entire line (or at least more nearly so). Just a small selection
						in a line with a tab is seldom intended to be an indent).

030411	REPORT	LGP			Add a 'marker' feature. This could be quite handy. Expand
		(1423)			a little space on LHS of screen so you can see marks where markers
						are (optionally). Have ^M set a mark. Have a popup in the toolbar of
						existing markers. Maybe have cmd-equivs for some - like %1 etc.
							This could be useful in LedIt as well - but I'm less sure there.

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970315	REPORT	LGP		CTRL-B and clicking on parans doing the paren-bounce.



-------------------- END LedLineIt CHANGES -------------------







++ Fix LedIt/LedLineiT so that the updatefileassoc dialog is FORCED to come to the front!!!
I'm tired of it getting stuck behindother windows!
<<<MAYBE FIXED IN Led_StdDialogHelper_UpdateWin32FileAssocsDialog::PreDoModalHook ()
call to SetForegroundWindow()---LGP 2002-09-25>>>>









-------------------DONE---------------DONE-----------------DONE---------

040213	FIXED	LGP			This was already fixed as part of Led 3.1b1.
040101	REPORT	LGP			Fix LedTestXWindows (LedIt works on XWindows - need to
		(1612)			lose old templated cmd stuff, and `WordProcessorHScrollbarHelper'
						- I think...



-------------------DONE END ---------------------- DONE END ------------












------------- START    PROPOSED MAJOR NEW FEATURES FOR LED 4.0 ----------------

030417	NOTE					UI Localization should probably also include German (Remo),
						and perhaps French. Will have to defer this til after 3.1, since we
						are already so late. DEFERED
030415	REPORT	LGP			Localize ActiveLedIt, and perhaps LedIt/LedLIneIt to different
		(1439)			languages: Japanese, Spanish? MAYBE consider doing for 3.1?


030507	DEFER	LGP			This will probably be DEFERED for 3.1 and done for 4.0.
030507	WORKING	LGP			Now I undertand the problem. It has todo with when/how tabs are calculated.
						For measurement purposes, its measured at the LHS of the screen and so imputed
						to have one particular width. Later, when its drawn, the tab is measured
						on the RHS of the screen - at a differnt offset, and so it just happens to
						come up with a different width (cuz of tabstop alignment).
							I could fix the passed in tabstop list or tabstop origin or something
						to adjust for this effect. However, it may not be worth while. I need to do
						a major overhaul of tabs, and text drawing later anyhow. I really think I should
						fully layout a row, and then draw using fixed precomputed character level layout.
						That way - I can handle full justification.
							Plus, I can handle RIGHT-Tabs and Decimal tabs etc at the same time.
						I think this should be strongly considered as a major feature for 4.0, and
						defered for the time being.
030507	WORKING	LGP			Nope. My mistake. Its really just a problem with tabs and justification.
030506	WORKING	LGP			SPR_1441a.rtf makes it clear that the trouble really isn't with tabs,
						but with INDENTS. ALso - this is NOT a regression - since it occurs in
						LedIt 3.0.1.
030506	WORKING	LGP			Look at file SPR_1441.rtf. Consider the first row of the last paragraph.
030415	REPORT	LGP			Tab/indent mixes badly with right justification? Goto page
		(1441)			http://www.sophists.com/Led/ActiveLedIt/OnlineDemos/WPInWebPageWithToolbar.asp
						Select all text. Set RIGHT justification to all (really only needed for last para).
						Try selecting text in the first line of the last para (e.g. "ActiveX"). Note how
						selection doesn't match where the text is drawn! Also - the text isn't fully
						right justified (maybe the selection dispaly is right and its just the text
						draw thats wrong?).

030507	NOTE		LGP			Maybe something very similar to TextLayoutBlock.
						class MeasurementForRowTextLayoutBlock {
							TextLayoutBlock	tlb;
							(contains ORIG TEXT AND MAPPING TO OUTPUT TEXT).
							... need methods to be able to MUNGE text (e.g. \n replaced with special character)
							.... maybe even including INSERTING and REMOVING characters from the middle of hte TLB.
							Led_Coordinate	charBoundariesArray[]; array of offsets where we draw characters. NB: this
										array length 1 GREATER than len of text, so charBounds[0] = start of char 0, and
										charBounds[1] = RHS of char 0. Think carefully if this array SB stored in
										virtual or REAL order! Probably VIRTUAL. But make it easy to convert back
										and forth.
						}
030213	REPORT	LGP			Consider adding for Led 3.2 new feature to be totally MEASUREMENT
		(1300)			based in drawing, so I can support full justification, avoid returning
						AMOUNT DRAWN from TextOut calls, and so that I can do far better
						optimizations of draws for extremely long lines (as in SPR#1295).



031206	DEFER	LGP			DEFER til after Led 3.1
031206	REPORT	LGP			Based on bug#1550 - so should notify Greg when fixed. Support
		(1581)			numbered lists in Led's WP classes. Right now - just simple
						bullets. See related bug# SPR#1582.

031206	DEFER	LGP			DEFER til after Led 3.1
031206	REPORT	LGP			Based on bug#1550 - so should notify Greg when fixed. Support
		(1582)			improved list reading support. Probably not worth doing the writing
						support as even Word XP doesn't seem to do too well writing this
						old format. Syncronize with SPR#1581 (do that first). So we can
						update our reading code for this old format to read old
						format numeric lists and other options (which bullet char, and
						space between bullet and text?).


040210	DEFER	LGP			DEFER til after Led 3.1
040206	NOTE		LGP			I considered this - but suspect its  not worth the risk.
						Changing this could cause subtle problems with autoscrolling, and perhaps
						other areas (that count on knowing that if a ROW is showing (or not)
						then it is showing in its entirety (or NOT). Would need to examine too
						much code to remove this assumption - I fear (for the 3.1 release).
						This will have to be taken care of as part of the scrolling redesign for
						Led 4.0.
040129	NOTE		LGP			I will think about this. I know of this issue. It never
						struck me as a very big problem for images - but the exact
						same issue exists for tables (since they are both implemented
						as embedding objects). A FULL fix for this issue will not be
						present in Led 3.1 - but I may be able to come up with
						something that helps enough to significantly mitigate the
						problem.
							Solution to consider is SOMETIMES allowing a partial
						line displayed as the last line. That would improve the situation
						with tables and these images - but could cause other problems,
						and doesn't address the REAL primary issue (scrolling position
						design).
040129	REPORT	N.Lyons	> -----Original Message-----
		(1626)			> From: Nancy Lyons [mailto:nancy@integrationnewmedia.com]
						> Sent: Thursday, January 29, 2004 12:09 PM
						> To: Lewis G. Pringle, Jr.
						> Cc: Laurent Brigaut
						> Subject: Technical question
						> 
						> I forgot one question. When an image is not completly visible, the image
						> is not displayed at all. That gives a strange behavior when you scroll in
						> a document with big pictures. Do you plan to change this in version 3.1?



------------- END    PROPOSED MAJOR NEW FEATURES FOR LED 4.0 ----------------







&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& NEW BUGS TO ORGANIZE &&&&&&&&&&&



+ Consider using Panda library (from www.sourceforge.com) to add PDF output support
	to ActiveLedIt/LedIt



030201	REPORT				Add new SPR (like SPR#1186) for adding TABS dialog to all
		(1290)			the various apps and to OLE AUT interface as well.



030214	DEFER	LGP			Low priority
030214	REPORT	RStraus		(reported by Richard Straus a few months ago). Support CONTROL-CLICK
		(1302)			(or whatever Richard said was supposed to do something about words
						(maybe I already do what he suggested  ask??).


030214	DEFER	LGP			Not totally sure what is needed here. MSDEV does like I recomend
						here, but WinWord XP does more or less what I already do now. Probably
						parameterize behavior (in Led_Win32_Helper<BASE_INTERACTOR>::OnKeyDown_Msg).
030214	REPORT	LGP			(really earlier). Fix control UP/DOWN arrow to scroll (like in
		(1301)			Vis Interdev and others on PC)



021021	REPORT	LGP			Support PICTURE embeddings (when you have selected a picture,
		(1138)			 change cmd-name/text to add URL props to picture.




021022	NOTE				Handle this after 3.1d1. This isn't too common.
021020	WORKING	LGP			Not serious (I think). The paragraph (for some reason) was just
						marked as EXACT TWIPS instead of 'single-space'. So - the bottom was
						cut-off. This maybe just an RTF reading issue.
021020	REPORT	LGP			Open file SPR_1132.rtf. Note how table display height is
		(1132)			wrong.


021022	REPORT	LGP			Add Insert File/Insert Image menu items to LedIt etc. Related to SPR#1142
		(1143)			about adding the basic Insert menu to other apps.

030111	REPORT	LGP			Minor click handling bug. Vaguely related to SPR#1232 and SPR#1219.
		(1233)			Open file SPR_1219.rtf. Click just after the JJJJ. Then click just
						past the whitespace one char further to the right. Note how the blinking
						caret jumps to the end (before the period). I THINK the trouble is that when
						we click - depending on context - we should set the 'show-before-or-after'
						flag specially depending on the surounding direction of text.
							I believe this is a LOWPRI BIDI bug.


030104	REPORT	LGP			Open file SPR_1222a.rtf, and note how "]" characters
		(1222)			at the end of lines all look OK. Then open SPR_1222b.rtf, and
						THEN re-open SPR_1222a.rtf. Note how "]" characters are inappropriately
						wrapped. NOTE - this is NOT a regression. It exists with
						LedIt WIN 3.0.1.




021206	REPORT	LGP			Consider using png library to handle other file formats for
		(1201)			bitmaps. Also - a LIBWMF for reading Windows Meta file format images
						on OS other than MSWin.

021206	REPORT	LGP			Consider using 'wv' lib (used by AbiWord) to implement
		(1200)			reading .DOC files. Consider other sources as well.

021008	REPORT	LGP			Insert a few chars and then a table and type of a few
		(1120)			characters after. Then - from the end of buffer, backspace
						over  the whole thing a character at a time. Note at some point
						how the blinking caret displays in the wrong place (set-display-after?).
							Based on SPR#1119.

020918	NOTE	LGP			Maybe add a field to UpdateInfo object saying it its
						in interactive (user generated) update. Maybe just set for calls from
						InteractiveReplace ()? Then for ES_READONLY - check that flag in
						AboutToUpdate method?
020918	REPORT	STERL	> -----Original Message-----
		(1100)			> From: Sterling Wight [mailto:work@SterlingWight.net]
						> Sent: Tuesday, August 13, 2002 10:44 AM
						> To: Lewis Gordon Pringle, Jr.
						> Subject: Led bug reports
						> 
						> A few problems using Led have cropped up while rewriting the apps. None of
						> them is critical, as I have workarounds for all of them, but they should
						> probably go on a to-do list for you.
						> 
						> 1) Problem with read-only text fields.
						> In LogoTransDotNet I set the translation field to be readonly (style
						> ES_READONLY). Unfortunately, the way Led works now, whenever I
						> programmatically do things like set the text or change the font, I trigger
						> "BadUserInput" exceptions in led. I work around this by removing the
						> readonly style before calling any relevent methods, but that is awkward

020918	REPORT	STERL	> -----Original Message-----
		(1101)			> From: Sterling Wight [mailto:work@SterlingWight.net]
						> Sent: Tuesday, August 13, 2002 10:44 AM
						> To: Lewis Gordon Pringle, Jr.
						> Subject: Led bug reports
						> 
						...
						> 
						> 2) Problem with SubclassDlgItem
						> Doesn't get Led properly initialized. Workaround is to use SubclassWindow
						> instead.

020918	NOTE	LGP			See SPR#1103. It defines qCannotSafelyCallLotsOfComplexVirtMethodCallsInsideCTORDTOR.
						It also shows how to work around this. I'll need to get more info from sterl
						about the EXACT code where he ran into this to see what I can/should do.
							Maybe I should create template to capture what I did for BWA in SimpleLed? Then
						Sterl could just use that?
020918	REPORT	STERL	> -----Original Message-----
		(1102)			> From: Sterling Wight [mailto:work@SterlingWight.net]
						> Sent: Tuesday, August 13, 2002 10:44 AM
						> To: Lewis Gordon Pringle, Jr.
						> Subject: Led bug reports
						> 
						...
						> 
						> 3) Problem with corruption from virtual base classes
						> We used to have this problem as well, but in the past it was easier to
						> work
						> around.
						> All over the place I use a class that is a subclass of
						> Led_MFC_X <StandardStyledWordWrappedTextInteractor,
						> Led_MFC_OptionalWin32SDKMessageMimicHelper  <Led_MFC_MimicMFCAPIHelper
						> <Led_MFC_Helper <CWnd> > > >
						> 
						> Whenever I use the class, I corrupt memory when it is destroyed, because
						> the
						> code ends up trying to remove already deleted markers. The code is calling
						> overridden methods during the destruction, and all hell breaks loose. The
						> only workaround I have found is to add a method to my class:
						> nonvirtual  void    AboutToCroak ()
						> {
						>    SetCommandHandler (NULL);
						>    SpecifyTextStore (NULL);
						> }
						> 
						> and make sure that it gets called prior to destroying any LedEditText.
						> Note
						> you can't call AboutToCroak from the destructor, too late by then. I have
						> to
						> manually call it from whoever owns the LedEditText. Quite unfortunate.
						> 
						> 
						> I don't really want you to fix any of these right now, as I want you
						> debugging networking problems for me instead, but presumably these same
						> bugs
						> will bite some of your Led clients.

030124	NOTE					Added file 1112/LedLineItSpeedBug-LONG-LAST-LINE.txt
						which also reproduces a similar problem.
							This is moderately SERIOUS. It is somewhat of a regression
						since 3.0.1 (that version doesnt hang but doesnt display
						much of the text as you horizontally scroll either).
							MEDPRI for 3.1.
020922	REPORT	LGP			Open file SPR_1112.rtf in LedLineIt (NOT LEDIT). There is one
		(1112)			very long line. First note that towards the end of the line - we
						display BLANKS. Next - note that if you edit a bit at the end - you can
						get into what appears to be an infinite loop.

020918	REPORT	LGP			Specify clearly in the documentation what version of HTML
		(1097)			Led supports, and be sure to write out charset and doctype
						tags that so-specify. Probably should support  XHTML 1.0
						Transitional (at least). Be sure to VALIDATE output of several
						sample Led documents, and be sure they all validate (or I have
						a list of specific things that DONT validate and why).

020921	REPORT	LGP			Speedup RTF reading and reduce memory usage of tables. In other words, undo the
		(1106)			negative effects refered to in SPR#1105 of adding table support. LOWPRI!

020923	NOTE				Also support:
								\clmgf	The first cell in a range of table cells to be merged.
								\clmrg	Contents of the table cell are merged with those of the preceding cell.
020923	REPORT	LGP			Support \trrh and \trgaph (RTF module RowInfo) and WordProcessor
		(1115)			itself needs to support them. Based on SPR#1114. This is one of the few
						(easy) things which are relatively high priority for the 3.1 release
						(for the RTF reader).


030110	NOTE		LGP			Make sure VB examples for ActiveLedIt work on both VB6 and VB.Net
						and if thats hard - then rename them so clear which are for VB6 and
						which for VB.Net.
030110	REPORT	M.Weinbe	>Okay, I looked at the sample and SDK.  First off, your code
		(1228)			>does NOT build under Visual BASIC.Net.  I’m looking at quite a
						>few errors in the build process.  I think VB just gave up at some
						>point, but I can’t be sure on that.
						>[LGP] 	Thanks. I believe my visual basic examples were only
						>tested on Visual Basic 6. I will make a point of testing them
						>all so that they run under Visual Basic.Net for my 3.1 release.







--------------------------------------------------------------------
------------------------------- DEFERED ----------------------------
--------------------------------------------------------------------

&&&&&&&&&&&&&&&&&&&&&& LED CLASS LIB &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

040206	REPORT	LGP			Think about how to generalize existing stuff to handle special cases of
		(1636)			owner-draw combo boxes / menus like with LedIt for color menu and even font
						menu (TT icon). This can be DEFERED for 3.1. Based on SPR#1629 work.
							Basic idea here is to allow for fancier popup menus (with color stuff and
						fancy fonts) for ActiveLedIt fontname and font color menus.

030429	DEFER	LGP			This will be DEFERED until after Led 3.1.
030429	REPORT	LGP			Strongly consider using wvware (www.wvware.com) to handle .DOC file
		(1451)			covnerstion. Also contains/refers to WMF/PNG conversion software. Seriously
						consider adding ALL this support for 4.0 (not for 3.1 - and must look at
						licensing issues).


030320	REPORT	LGP			Consider the code in TextInteractor::DrawBefore () where
		(1366)			it calls UpdateScrollBars (). I'm not sure - but I suspect this
						could be done more efficeintly just using the new Idler mechanism.
						Its not clear we need to use the update mechanism.
							Note - stuff that invalidates the scrollbar probably ALSO does
						a (needless if we change this code) InvalidateRect of the window.
						Look into this carefully before making any changes.
							Still - its been done this way for quite some time - so this
						is LOWPRI - and will probably be defered.

030214	DEFER				MEDPRI for Led 3.2
030214	WORKING	LGP			Looking at the file SPR_1296a.rtf - generated by dumping
						to a file the contents of the PASTE buffer from MSIE to LedIt -
						we see that the RTF emitted by MSIE is really wrong. Saving that
						RTF to a file and opening it in MSWord yields the same display
						Led provides. So - MSWord must be grabbing the content in
						another format - perhaps HTML.
							Here - there is a real bug with Led. It does not pay attention
						to style= specifications for <SPAN> tags. In fact - it may altogether
						ignore SPAN tags. This should be fixed, but will likely be defered
						for a later release (MEDPRI for Led 3.2).
030213	WORKING	LGP			Pasting this char from MSWord to Wordpad also produces
						a Ø character.
030203	REPORT	LGP			Open file SPR_1296.htm. Note how the character 'Ø' is
		(1296)			displayed (with LedIt). But with MSIE and WinWord - you see
						an arrow-shaped character. This looks on the SURFACE like an
						HTML reading but. BUT - when you copy and paste from MSIE into
						Led - you still see the 'Ø' character and no arrow glyph.

030203	DEFER	LGP			Probably not important enough to worry about for 3.1.
030203	CLARIFY	LGP			Make sure you have Hebrew and Arabic and Greek keyboards installed on
						WinXP. Type "This is a good test" - but in a specail way.
							Select ENGLISH keyboard and type "This ". Select HEBREW keyboard
						and type "is a good ". Then select GREEK and type "test."
							Note - when you do this in LedIt - it works fine. When you do it
						in WordPad it works fine, and when you do it in MS Word XP - it works fine.
							The PROBLEM is that if you COPY the text from LedIt to MS Word XP, some
						of the text comes out in the wrong order.
							I THINK the issue is that Led is not writing special directional indicator
						tags that MSWord is counting on when it reads. Note - WordPad doesn't have this
						difficulty.
030203	REPORT	LGP			BIDI RTF RTL/LTR tag emitting
		(1294)

030203	DEFER	LGP			I'm not sure if this is important to do. I have seen no ill-effects
						from NOT doing it (so far). Reason to not try now is that it could have
						adverse performance impact.
							DEFER for now!
030203	NOTE		LGP			To re-summarize this report: consider making MeasureSegmentWidth
						and related functions (e.g. MeasureSegmentHeight) take a TextLayoutBlock.
						Then pass THAT along to SummarizeStyleMarkers and delete the 2-arg version.
030203	REPORT	LGP			(date really much earlier). Condiser NEW SPR(s) to track remaining
		(1293)			question mark issues on BIDI (measuretext passed virtual text and 1218 above?)
							Get rid of 2 arg version of SummarizeStyleMarkers (). Make
						ure EVERYONE/EVERYTHING uses 3 arg version. This implies adding an
						extra arg (TextLayoutBlock) to lots of Measure XXX functions.
							Maybe move some more stuff from PartitioningTextImager to TextImager
						if it can be done with no cost - easily.
							Move some code (eg PartitioningTextImager::GetRowRelativeCharAtLoc) to
						TextImager - if it can be done easily.


030116	REPORT	LGP			Find some way to get a UNICODE window in MFC, or rewrite LedIt based
		(1242)			on ATL (a much better idea, along with a rewrite of LedLineIt and
						ActiveLedIt using ATL). This would be a good candidate major project for
						3.2.
							This is partly motivated by that fact that some characters - such as
						extended greek characters (see SPR#1238) cannot be entered using the
						Partial UNICODE version of LedIt/ActiveLedIt.
							LOWPRI for 3.1, and HIPRI FOR 3.2.

021205	REPORT	LGP			Open file SPR_1196.rtf in one instance of LedIt. In
		(1196)			another instance - open a NEW doc and select right justified.
						Copy and paste text from doc SPR_1196.rtf to the new doc. First
						I believe the pasted text becomes inappropriately right justified.
						I'm not 100% sure its inappropriate - but it sure looks awkward.
							Second - the closing ")" in the second row is not selectable.
						That is clearly a bug, and not a regression since 3.0.1 (it reproduces
						in 3.0.1).


030227	REPORT	LGP			Handle VERITCAL merge cells (TABLES). Based on SPR#1311 (where
		(1312)			I implemented horizontal merge cells). Shouldn't be too hard - but
						a bit of an investigation as to how RTF handles this, and also - I'm not
						sure if/how you do that in HTML. This is DEFERABLE for 3.1 - I suspect.

030227	REPORT	LGP			Handle extra col (not sure exactly my bug - buy why so wide) for
		(1313)			SPR_1311e.rtf. Probably pretty minor - and DEFERABLE for 3.1.

021205	REPORT	LGP			Small RTF reading bug. See file SPR_1195.rtf. Note
		(1195)			the bogus DatabaseID and ContactID= display.

021204	NOTE	LGP			Tested on laptop and though not speedy - its OK.
						On Cerberus - it really hangs the machine for a few seconds. I guess
						from this the issue is the GDI draw call is hanging when it gets handed
						a large number of NUL-bytes. Since this is machine specific, and somewhat
						rare, and not that big a deal - I'll defer this for a while.
						Also - its not a regression - I don't think.
021204	WORKING	LGP			Tested fixed for NON-UNICODE - but couldnt test UNICODE
						cuz of SPR#1194 (fix that first)
021204	WORKING	LGP			See if SPR#1193 fixed this problem...
021204	REPORT	LGP			Really much earlier report (months):
		(1192)				Found (understood) performance bug. See saved page on Cerberus. content with
						TONS of NULLs (or whatever) at the end form a HUGE word (line) at the end of the document
						and though this works - its (too) slow. Only (so far seen) affecting LedLineIt opening
						my HTML logfiles (last line) for CURRENT DAY (only time they have that crap at the end)

021101	NOTE	LGP			Can probably DEFER this due to fix in SPR#1146.
021024	NOTE	LGP			The REAL problem is that this document has the characters represented as
						'FIELD' objects. Either I must support these field objects (to some limited extent)
						or the customer must avoid using them (for now). I'm waiting for feedback from him
						about his needs. Either this will just get handled under a GENERAL 'FIELD OBJECT"
						support SPR, or maybe I'll do a quickie field object support SPR to just add support
						for these 'SYMBOL' fields - turning them into UNICODE characters directly
						in the RTF reader. That shouldn't be too hard.
021024	REPORT	FredFry		Some special characters from MS Word cannot be copied/pasted into
		(1147)			ActiveLedIt. See file SPR_1147.rtf


020504	DEFER	LGP			DEFER for 3.0.1
011129	REPORT	LGP			2001-11-29 - Another SHIFT-RETURn related bug. Do a LISTITEM, and then
		(1089)			at the end of it, insert a SHIFT-RETURN
						(I had todo this by pasting from MSWord since it was broken in LedIt! 3.0).
						Note the cursor doesn't advance to the next line, Type any character ('x').
						Note how THEN you adjance to the next line. The shift-return should 
						adjust the flags for showing before/after the cursor position.

020504	DEFER	LGP			DEFER for 3.0.1
020315	REPORT	LGP			Ashi reported a bug 2002-03-15 - and the code is in
		(1090)			L:\ashidemo\. Trouble only happens on Win2k - and it seems we
						sometimes get hack a corrupted DIB. Try using my
						Led_HBITMAPtoDIB code in this case and see if that works better
						(try to only do this
						if the native format is a HBITMAP or if I can somehow detect the corruption).
							<ASK ASHI IF THIS NEEDS TO BE FIXED FOR 3.0.1>

010908	DEFER	LGP			DEFER for Led 3.0 (easy todo, but too late to make such changes now)
010908	REPORT	LGP			Add Led_TWIPS::kOneCM and kOneInch, etc statics. Add appropriate op conversion guys so easy
		(1020)			to specify a number of inches as Led_TWIPS::kOneInch * 7.5.

010830	DEFER	LGP			DEFER for Led 3.0 (interesting and probably good idea, but way to disruptive right now.
						Too much has changed in Led 3.0. 3.1 may not involve such a dramatic change and maybe a better time
						for something like that).
010905	REPORT	LGP			Consider - before 3.0 is released (it will be harder later) - going through
		(1015)			and systematicly making sure APIs are FROM/TO not FROM/LENGTH...
						(cosnsitancy should make Led easier to use and is more consistent with STL).

010830	DEFER	LGP			DEFER for Led 3.0
010827	REPORT	LGP			Rewrite Printing support (including page objects) for POST Led 3.0. DEFER for now. Reference
		(0982)			SPR#0979 to check after this is done.

010830	DEFER	LGP			DEFER for Led 3.0
010827	NOTE				Do SPR#0982 first - then check this.
010827	REPORT	LGP			LedLineIt TAB Printing support broken (occasionally misplaced?). LedLineIt PrintPreview
		(0979)			support broken (maybe just the tabstops too big?).

011109	DEFER				Took a while to notice. Doesn't happen too often. VERY late in 3.0
						cycle, so DEFFER for 3.0 and HIGH PRIORITY for Led 3.1.
011109	REPORT	LGP			File SPR_1078.html demonstrates a bug with the display of URL
		(1077)			embedding objects. The display appears shifted way too
						far to the right (when in the context of a list item).

010830	DEFER	LGP			DEFER for Led 3.0 (High Priority for Led 3.1 - related to Page Object work for improved printing)
000829	NOTE	LGP			I've now gotten several requests for this - esp ActiveLedIt! customers.
000612	REPORT	LGP			Implement Scaling/Zooming. Now that what needs to be is saved in TWIPS - it should be pretty easy to
		(0783)			genericly implement scaling (by adding methods to the TABLET class - mostly). Maybe need to make sure
						more vectors through that class - instead of making direct win32 etc calls - so we can fudge more params!
							Not critical for this release - but it would be a cool new feature - and not TOO much effort - I think.
							Related to SPR#0786.

010830	DEFER	LGP			DEFER for Led 3.0
000902	REPORT	LGP			Small error/quirk in click handling with emebddings. When I click on an emebedding - it gets
		(0833)			selected. When I click AGAIN on it (while its already selected) - and let go - it becomes UNSELECTED.
							This makes sense with characters (which is why I have the bug). But I don't think so for embeddings.
						Contrast the current behavior with that of MSWord 2000 (Windows).

010830	DEFER	LGP			DEFER for Led 3.0
000707	NOTE	LGP			Marc replied that this is very common in multimedia applications, etc. I'll look more
						carefully when I'm ready to do this, but I think I WILL make this change.
							Then - PERHAPS - also change LedIt! MAC/PC to allow wrap-to-window - cuz will work more reasonably with margins!
000706	NOTE	LGP			One reason I'm not sure this would be an improvement is cuz I'm unclear how the change
						in defintiion would affect my future implementation of columns. How important do you think
						this is? Its probabaly not hard for me to impleemnt.
							I also worry slightly about backward compatability. But thats a small issue now since
						I've already changed all these numbers from pixels to TWIPs. So now would clearly be a good
						time to change this too - if I were ever to.
000705	REPORT	MVOlman	> -----Original Message-----
		(0809)			> From: Marc Van Olmen [mailto:marc.van.olmen@sky4studios.be]
						> Sent: Wednesday, July 05, 2000 9:17 PM
						> To: lewis@sophists.com
						> Subject: Some feedback
						...
						> I keep the rightmargin of the text relative to the Paperborder (or
						> screenborder) just like RTF does. This is more easier to maintain because
						> when resize the paperborder it is automaticaly updated (I can give you the
						> list of places where I adapted the code it was easy to do).
						> 
						> With this relative to the rightmargin you can still implement 
						> your version:
						> in case you would introduce a kind of paperrectangle which is 
						> different from
						> the viewing rectangle (window rectangle). So in that case the LedIt will
						> still work with fixed right margin even when you resize the window.

010830	DEFER				DEFER for Led 3.0 (but medium to high priority for Led 3.1)
010830	NOTE				See also SPR# 0916, 1005, 0984, 0578. 1006
010829	REPORT	LGP			REDO FONT CODE SO ALL ATTRIBUTES ALLWAYS SUPPORTED ON ALL PLATFORMS (even if not always displayed)
		(0984)

010830	DEFER				DEFER for Led 3.0 (but medium to high priority for Led 3.1)
010830	NOTE				See also SPR# 0916, 1005, 0984, 0578. 1006,1007
010512	REPORT	LGP			Add portable implementation of things like Underline (cuz X doesn't have it) and Strikethroug etc.
		(0916)			At least keep the attributes in the LedFOntSpec object so they don't get lost acrross platforms (even if we cannot display
						them properly). Where not too hard - and not supported by the OS - do portable implemetnation of these things (undline/striketrhough
						easy, but outline style hard).
							Proabably DEFER for 3.0 release.

011015	DEFER				Defer for Led 3.0. Med pri for 3.1
011015	REPORT	LGP			When a mouse moves over an embedding (esp a URL - but maybe always),
		(1060)			we should change the cursor (maybe to a finger pointing up) - like web browsers
						do to indicate you can click on it to follow a link (or activate an object).
						See / cleanup FAQ#8 when this is resolved, and make that FAQ refer to new portable
						'set cursor hook' mechanism (so it can be used in both implementations).

010830	DEFER				DEFER for Led 3.0 (but medium to high priority for Led 3.1)
010830	NOTE				See also SPR# 0916, 1005, 0984, 0578. 1006,1007
010829	DEFER	LGP			DEFER for Led 3.0 (medium to high priority for next release)
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960518	DEFER	LGP		
960518	REPORT	LGP		Led_FontSpecification could be made much smaller, saving
		(1005)			runtime RAM. Probably can get whole thing in longword for
						Mac, and at least a BIT smaller (a few bytes) on the PC.

010830	DEFER				DEFER for Led 3.0 (but medium to high priority for Led 3.1)
010830	NOTE				See also SPR# 0916, 1005, 0984, 0578. 1006,1007
000617	NOTE	LGP			I think this really should be fixed for Led 3.0. It should be pretty easy- and its one annoying
						way you can lose info (maybe only way left) going x-platform with your documents.
990517	DEFER	LGP
990517	NOTE	LGP		This is a design flaw of Led which nobody ever alerted me to until you right now.
						Right now - I conditionally compile into Led support for different style types.
						The basic class which keeps track of style run info uses a Led_FontSpecification object.
						That - in turn - is conditionally compiled based on platform to include strikethrough, or outline, based on platform.
						This means that places like Led's file IO code don't even compile in checks for strikethough etc when compiled for the
						Mac.
990517	REPORT	MacUser	>-----Original Message-----
		(0578)			>From: macuser@singnet.com.sg [mailto:macuser@singnet.com.sg]
						>Sent: Sunday, May 16, 1999 7:14 AM
						>To: info-led@sophists.com
						>Subject: Query
						>
						...
						>2. How do I implement strikethrough text on the Mac? Using 
						>markers (again)?

011015	DEFER	LGP			DEFER for Led 3.0 - Med Pri to fix for Led 3.1 (at least delete
						tutorial if nobody complains about it not working).
011015	REPORT	LGP			There is a problem with the RTF_Preserving tutorial. See
		(1061)			the tutorial itself. Either fix it for Led 3.1, or delete
						the tutorial. Ignore for now, til someone complains.

010830	DEFER				DEFER for Led 3.0 (but medium to high priority for Led 3.1)
010830	NOTE				See also SPR# 0916, 1005, 0984, 0578. 1006,1007
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960518	DEFER	LGP		
960518	REPORT	LGP		Consider changing the representaiton of Led_FontSpecification
		(1006)			so that we can keep track of UNSUPPORTED STYLES - so we don't
						lose information going from Mac <--> PC.
						Note: this has some bizarre consequences for the UI - can have
						style selected (eg strikeout) on mac, but can see nothing -
						could iether have in menu (with no effect) or not in menu
						with mystery why all styles uncheckked, but plain not checked.

010830	DEFER				DEFER for Led 3.0 (but medium to high priority for Led 3.1)
010830	NOTE				See also SPR# 0916, 1005, 0984, 0578. 1006,1007
960518	DEFER	LGP		
960518	REPORT	LGP		StyleDataBase (in memory version) could maintain SHARED rep of
		(1007)			Led_FontSpecification's, and the StyleMarkers could just point
						back to these. This would save alot of memory for StyleMarkers
						(assuming the same styles reappear frequently). Also, it could make
						for XTRA QUICK comparisons for equality in SetFontInfo/GetFontInfo().

010830	DEFER	LGP			DEFER for Led 3.0 (maybe already done - but revisit and test carefully for Led 3.1 - HIGHPRI)
000117	NOTE	LGP			Really must fix TextInteractor::InternalizeFlavor_FILEData, and RTF IO, and maybe more.
						Application code (LedIt!/LedLineIt!) now covered in another SPR 0697.
							Also - the RTF UNICODE stuff is close to working. It now compiles and works with non-UNICODE characters.
						Just must enhance it for wide (multibyute) characters.
991209	REPORT	LGP			UNICODE RTF (and other File IOs) not right. Handle UNICODE files (LedIt/LedLineIt) REGARDLESS 
		(0648)			of whether I'm built for UNICODE, etc.... The biggest part of this is the RTF IO.

010914	DEFER				DEFER for 3.0
010914	REPORT	LGP			Sample doc 1025/LVX_License_E.rtf isn't formatted
		(1025)			quite right. The lining up of margins/tabstops is slightly
						different in LedIt! 3.0c1x throughout the doc and the doc when
						read by MSWord2k looks fine.

011107	DEFER				Again - DEFER the rest for 3.0 - and reopen and MEDIUM priority for 3.1.
011107	WORKING				Made a small tweek to Led_Win32_Helper<BASE_INTERACTOR>::CheckIfDraggingBeepAndReturn ()
						so it calls Led-BeepNotify () instead of OnBadUserInput (). This is a guess. I'm
						not sure where the REAL error is coming from. But this whole handing should be rethought.
						Just beeping maybe right - or aborting the catpure on keyboard input maybe right?
						RETHINK for the next release. And fix the other calls in Led_Win32 to OnBadUserInput to
						be slighltly more specific (like about clipboard errors etc). If nothing else - it will make
						this a bit easier to debug. And - in a slightly related matter - make sure if there is a bad
						item on the clipboard (nothing?) - and you say paste - iether paste SB disabled, or should at least
						give a decent error message (now its a bad exception message).
011106	DEFER				This is extremely rare, and I cannot find a way to reproduce it. DEFER for
						Led 3.0.
011019	NOTE				I got this problem once again - but when trying todo a
						shift-indent.
011018	NOTE				I got this problem again - but in a funny way. I selected a region
						of text in LedLineIt and hit the tab key (to indent it). I got the badUserInput
						exception. Said OK, and tried again, and no reproducible problem. This is interesting
						because I don't THINK it involes the clipboard at all.
011016	WORKING				I tried to reproduce this in LedLineIt - and when I try to
						I cannot. Give it another day or two - and see if I see this
						problem again. Sigh... I have a HUNCH it may have todo with
						the fact that handles (GetHandleSize()) return value doesn't agree
						with length of text size promised - or something like that???
							Or maybe that occasionally I'm failing to claim the clipboard
						cuz some process being debugged has it? Who knows!
011016	REPORT	LGP			too often I get exceptions doing pastes (and maybe copies???)
		(1065)			Test under debugger and see if I can reproduce. Happens at least
						with LedLineItMFC - and maybe also with LedIt).

010830	DEFER	LGP			DEFER for Led 3.0
000829	NOTE	LGP			Probably won't have time todo this for Led 3.0, as I must start concentrating on Linux port.
							Saved his source code at \\Pythagoras\Led\Sample&TestDocsEtc\AddNewTestDocsHere\SPR#0815\samplecode
000723	REPORT	MVOlman		More TabStop support
		(0815)			Support \tldot, \tleq, etc, and \tqc, etc. Two major features missing. One is specifying what MSWord2000 calls
						the tab leader - a string to be used to show the whitespace where the tab is. The second feature is
						left, right, center, decimal and bar tabs. I've now played around enoguh with MSWord so I understand what these do.
						Not TOO hard todo. Basicly - text just AFTER such a tab - instead of being always advacned past teh tabstop (as with left tabs)
						you either center around that tabstop, or right justify, or do some decimal thing?? Look for dec point? Not sure about
						bartab? But when that conflicts with other text - ignore special tab (not room to center, for example).
							Probably half to a full day to implement - but ALSO requires a bunch of new UI (see MSWord tabs dialog). That would take
						another half day (including Mac/PC). So probably delay this a bit. MAYBE for 3.0.
							Also - Marc sent me sample code (Text.h,Text,c,RTFText.c) which implements some of this. It might be helpful
						to look at.

010830	DEFER	LGP			DEFER for Led 3.0 (unlikely for Led 3.1 - but probably yes for Led 4.0)
000119	REPORT	LGP			Support RTF \header and \footer proplery - that is - adding Header and Footer support to Led.
		(0701)			

010830	DEFER	LGP			DEFER for Led 3.0
991130	NOTE	LGP			Try to implement the 'delayed-computation' version of LinedBasedPartition. Remo sent me
						some code he had tried to get working based on my guidance in this matter a long time ago.
						He never got it fully working (stable) - but said it made his application MUCH faster.
							At least look into this, and maybe incorporate it into my next release.
990321	DEFER	LGP		Defer, and probably do AFTER Led 2.3.
990321	NOTE	LGP		Remo sent mail a couple months back saying he was working on this. Check with him sometime
						and find out how it went. Maybe then integrate it into Led as a demo, or utility class.
980424	REPORT	LGP			Implement "ON DEMAND" partition, like I discussed with Remo in email around this date.
		(0541)			Basicly just override DidUpdate() to handle splitting/coalecing in a delayed manner (set flag
						saying dirty) and override GetNext/GetPRev() methods too check flag and do splits/coleances
						there on the fly. Tell REMO when this is done (though he may have already done this).

010830	DEFER	LGP			DEFER for Led 3.0 (would be nice to do this cleanup for Led 3.1 - but not critical)
000331	REPORT	LGP			Split out some of the WP code into a separate file - namely PARAGRAPHINFO stuff
		(0726)			- so can be used without the WP class.	SHOULD be usable just from an IMAGER -
						not an interactor (someone asked for this - search my bug list and see who?).
						I think it was Dennis Garrett

010830	DEFER	LGP			DEFER for Led 3.0
000531	REPORT	LGP			Files with very long lines don't display properly in LedLineIt! on Windows 2000.
		(0765)			Open the file SPR_0765.txt in LedLineIt - and note how the first two or three lines don't display
						properly (and are extremely slow)

010830	DEFER	LGP			DEFER for Led 3.0 (MedPri for Led 3.1 - if/when we do Page Object support)
010829	REPORT	LGP			One potential customer asked about \keepN support - for keeping lines together when printing (page breaks)
		(0986)

010830	DEFER	LGP			DEFER for Led 3.0 (Test MSWord etc - and if this is right - we SHOULD fix for Led 3.1)
010829	REPORT	LGP			Test MSWord etc - but I THINK interROW space (space after etc) shoudln't be part of
		(0988)			lineheihgt for selection rectangle (and probably I-beam). if so - add extra virtual
						method (get interrow space) method to TextImager - like GetRowHeightContainingPOS - and use that to subtract out
						from selection rectangle - except when you select last char in row ... just like with interline space...

031130	NOTE		LGP			See also SPR#1577.
010830	DEFER	LGP			DEFER for Led 3.0
000421	REPORT	DStrnad		FontTable::GetFontSpec () - add code for parameterized FONT_NAME_MAPPING! - like
		(0741)			in my phone converstaion.
						Mac code does a decent job - and PC code does almost ntohing. Make BOTH always use new algorithm. Put
						algorithm in Led_GDI - so re-usable elsewhere- use map<string,string> ? Or take into account other stuff
						> -----Original Message-----
						> From: Dan Strnad [mailto:DStrnad@intellitools.com]
						> Sent: Friday, April 21, 2000 6:40 PM
						> To: 'Lewis Gordon Pringle, Jr.'
						> Cc: Dan Strnad
						> Subject: recap 4/21 font mapping discussion
						> 
						> 
						> Lewis,
						> 
						> Again, thank you for the consideration toward our IntelliTalk font mapping
						> implementation within Led.
						> 
						> My memory of the discussion today is summarized below:
						> 
						> 1. The existing Led 2.3 (rtf) font map mechanism is limited, and some Led
						> 3.x users and users of Led 3.x-based products would benefit from 
						> an enhanced
						> mechanism.
						> 
						> 2. By revising the Led 2.3 font map mechanism, IntelliTools hopes 
						> to output
						> documents whose font mapping behaviors are for the most part forward
						> compatable with Led 3.x. The most important point for 
						> compatability is which
						> font mappings occur. Appearance to the user of font names is a secondary
						> issue.
						> 
						> 3. The mapping implementation, for our use, is best devised as a 
						> data-driven
						> facility. This provides for customization per platform. Also, this leaves
						> the door open both for disclosure to clients of how to customize the
						> mapping, and for localization.
						> 
						> 4. IntelliTools may proceed with an enhanced Led 2.3 font map 
						> algorithm and
						> later adapt it using Led 3. Your recommendation is to limit the 
						> font mapping
						> enhancements to be within FontTable::GetFontSpec. The revised algorithm
						> would refer to a data driven, name-oriented mapping when an exact match is
						> not available, and then proceed with the existing Led 2.3 mapping
						> architecture failing that. Possibly, if not already complete, 
						> this 2nd-tier
						> mapping might be refined especially on Windows to be more 
						> symmetric with the
						> Mac mappings.
						> 
						> 5. In Led 3, the font map facilties might be usable for programs or parts
						> thereof that are not Led-based. For example, a single application 
						> displaying
						> text in either of two views only one of which was Led-based, might be able
						> to repurpose the Led font mapping code for text in the non-Led-oriented
						> view. Likewise the font mapping code might be reusable, in 
						> IntelliTools case
						> at least, for programmatic setting of control's font appearance.
						> 
						> 6. In Led 3, the 2nd-tier font mappings might be configurable. So, a Led
						> application developer could configure or enable the user to 
						> designate which
						> font is, for instance, the default FF_DECORATIVE font.
						> 
						> 7. Some of the font mappings we're considering (Win to Mac case) follow
						> below, and I'll update you as our investigation of which mappings we
						> identify proceeds.
						> 
						> Windows				Macintosh
						> ----------------			---------------------
						> Arial					Helvetica
						> Arial Narrow			N Helvetica Narrow
						> Avantegarde			Avant Garde
						> Book Antiqua			Palatino
						> Bookman Old Style		Bookman 
						> Century Gothic		Avant Garde
						> Century Schoolbook	New Century Schlbk
						> Courier New			Courier 
						> Dutch PS				Times
						> Dutch SWA				Times
						> Helv					Helvetica
						> Helvetica-Narrow		N Helvetica Narrow
						> ITC Zapf Dingbats SWA	Zapf Dingbats 
						> ITCZAPFDNGBATSWA		Zapf Dingbats 
						> MS Sans Serif			Helvetica
						> MS Serif				Times
						> MT Symbol				Symbol
						> MT Symbol Italic		Symbol
						> Modern				Monoco
						> Monotype Corsiva		Zapf Chancery
						> Monotype Sorts		Zapf Dingbats 
						> NEWCENTURYSCHLBK		New Century Schlbk
						> Roman					Times
						> SWA Dutch 			Times
						> SWA Dutch 801			Times
						> SWA ITC ZAPF Dingbats ZAPF Dingbats 
						> SWA Swiss				Helvetica
						> SWA Swiss721			Helvetica
						> SWAITCZAPFDINGBAT		Zapf Dingbats 
						> Script				Zapf Chancery
						> Swiss PS				Helvetica
						> Swiss SWA				Helvetica
						> Terminal				Courier 
						> Times New Roman		Times
						> Times-Roman			Times
						> TMS RMN				Times
						> ZAPFCHANCERY			Zapf Chancery
						> ZAPFDINGBATS			Zapf Dingbats 
						> 
						> and
						> 
						> Forte					Textile
						> Bell MT				Minion Web
						> Brush Script MT		Brush Script
						> Eras Bold ITC			Revue
						> Berlin Sans FB Demi	Gadget
						> Papyrus				Palatino
						> 
						> etc. ...
						> 
						> The discussion is very helpful for providing an even more effective
						> cross-platform document experience. Thank you!

010830	DEFER	LGP			DEFER for Led 3.0
000531	REPORT	LGP			Support WordProcessor paragraph spacing other than 'multipleOfSingle' - where flag \slmulti0.
		(0761)			Based on SPR#0760. Right now - that data is preserved - but never used in display cuz I cannot
						figure out from the RTF 1.5 docs how to interpret it.

010830	DEFER	LGP			DEFER for Led 3.0
000429	REPORT	LGP			Consider support for the RTF \ansicpgN tag.
		(0753)

011107	DEFER				DEFER for 3.0, and MEDIUM priority for 3.1
011107	REPORT	LGP			Text with a mixture of tabs and centered justification displays
		(1073)			incorrectly. I'm not sure what is correct for that case - but what Led does
						clearly is NOT correct.

010924	DEFER				DEFER for Led 3.0.
010924	REPORT	LGP			On Win32 - GetClip/SetClip use DEVICE coordinates, rather than
		(1043)			logical coordinates. That makes some basicly logical things todo - esp in
						ClipNarrowAndRestore not work right. Consider using ExtCreateRegion ()
						and OffsetRgn () to map to/from device/logical coordinates with clip regions.
							Maybe thats too costly. Perhaps come up with some other strategy???

011020	DEFER				DEFER for Led 3.0 - but med-pri for next release.
011020	REPORT	LGP			Do more DocComments for next major Led release. This is a
		(1069)			placeholder for the next release. See also SPR#1067,0461 (prev SPRS
						where I did updates in the past).

010830	DEFER	LGP			DEFER for Led 3.0
000429	REPORT	LGP			\upr \ud support. This is part of UNICODE support. But it doesn't seem THAT critical right now.
		(0751)			I'm not sure just what it would be affecting - except if any font names were in UNICODE, or something like that?
						Doesn't sound too hard. Just doesn't seem too important. Rougly related to SPR#0750 - which is much more important.

010830	DEFER	LGP			DEFER for Led 3.0
000429	REPORT	LGP			Look more closely into changes in the RTF FontTable spec. There is a \cpg flag there I don't think we're
		(0752)			taking advantage of, and that might help with reading/writing OLD (non-UNICODE) RTF.

010830	DEFER	LGP			DEFER for Led 3.0
991228	REPORT	LGP		WordProcessor class does a poor job with centered text and tabstops. Not really sure what
		(0686)			it SHOULD do (which is probably why its so broken now). (MEDPRI)


010830	DEFER	LGP			DEFER for Led 3.0 (really must rewrite HTML reader/writer - not likely for 3.1)
010509	REPORT	LGP			HTML reader doesn't properly handle input font tags which are not nested properly. See the 
		(0911)			sample file (SPR_911.htm). Based loosely on SPR#0910. LOWPRI - and probably DEFERED for Led 3.0.

010830	DEFER	LGP			DEFER for Led 3.0 (SEE SPR#0865)
991223	REPORT	LGP			See spr#0680. Redo the Ruler code so that it can be more easily shared. ESP cuz we want to put
		(0681)			it into ActiveLedIt!. But I also want it cleaned up, and make easier to do that sort of thing without
						cloning lots of code. It would be nice to be usable from Win32 as well (important so can be used
						from ATL-based ActiveLedIt!).

010830	DEFER	LGP			DEFER for Led 3.0 (for Led 3.1 - rewrite ruler support to be portable, and THEN take care of
						stuff like this).  (SEE SPR#0681)
010102	REPORT	LGP		> From: Karl Pentzlin [mailto:pentzlin@acssoft.de]
		(0865)			> Sent: Tuesday, January 02, 2001 4:34 AM
						> To: info-led@sophists.com
						> Subject: LedIt! - Errors (regarding internationalization)
						> 
						> 
						> Sirs,
						> I have evaluated LedIt 2.3 because I need a text editing component for
						> a C++ application for plain Unicode (UTF8) text (as you promise to
						> support Unicode in your next application).
						> Nevertheless, I found the following errors in your demo:
						...
						> 2.) You show an inch ruler on a non-USA windows version, instead of a cm
						> or mm ruler. You even do not indicate that the ruler shows inches.

010830	DEFER	LGP			DEFER for Led 3.0
991113	NOTE	LGP		Look into using EXTTEXTOUT as a hack to implement full justication support for windows
990324	DEFER	LGP		Defer, and probably do AFTER Led 2.3.
990324	NOTE			Added comments to docs saying what was not implemented.
990220	REPORT	LGP	 	Consider doing a primitive version of FULL-JUSTIFICATION - if not too hard.
		(0627)			Current UI/API will lead to confusion otherwise. If I do NOT, then at least update
						API docs, etc...

010830	DEFER	LGP			DEFER for Led 3.0
991113	REPORT	SSW		in the trivial text out wrapper class - make it easy to get the same
		(0626)			draw behavior you do with textout - Led draws on baseline - not top-justified 

010830	DEFER	LGP			DEFER for Led 3.0
991113	REPORT	SSW		Fix default font algorithm
		(0624)			Sterl requests that you can set the DEFAULT PROC for TextImager::GetStaticDefaultFOnt(XXX) - so that all places that call
						that vector thbrough replaced routine. Maybe this fits into new work replacing text output
						detauls throug a template? FOr xwindows/
						Also - incorporate changes from LEC version of that routine into mine - since it will then work better bydefualt.

011006	DEFER				DEFER - Medium priority for Led 3.1.
011006	REPORT	LGP			URLs are stored in MSWord2k using \field directives. We don't support
		(1056)			that right now in our RTF reader/writer. It would be too big a change
						to consider for so late in the 3.0 development cycle, and doesn't appear
						to be a regression. Can be defered.
							Based on SPR#1054.

011006	DEFER				DEFER - Medium-low priority for Led 3.1.
011006	REPORT	LGP			LedItApplication is constructed at file scope (before main) for
		(1055)			MFC. For the sake of simplifying the code, and making more code common
						it would make sense to move the EmbeddedObjectCreatorRegistry::Get ().AddStandardTypes ();
						call into the CTOR. But - this occasionally causes trouble because
						it indirectly uses constants in the StyledTextEmbeddedObjects.cpp module
						which have not yet been constructed.
							I've worked around this (SPR#1054) for now - by just not calling
						AddStandardTypes () on MFC in the CTOR. But I'd like to find a better, less
						error-prone solution. Consider. DEFER, and medium-low priority for
						Led 3.1.
							Based on SPR#1054.

010830	DEFER	LGP			DEFER for Led 3.0
990416	DEFER
990325	REPORT	LGP		Open Led Readme.rtf. SelectAll. RightJustify. You get AssertionErrors
		(0565)			in WordProcessor::CalcSpaceToEat (), unless you have the hack
						(labeled "HACK WORKAROUND FOR SPR#0565") in that routine.
							The "hack" maybe really a fix. But invesigate carefully, and understand
						why this is needed, and appropriate.
							See spr#0566 - maybe related.

010830	DEFER	LGP			DEFER for Led 3.0 (really must rewrite HTML support from scatch - probably NOT for 3.1 - but who knows)
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
961205	DEFER	LGP		Defer, and probably do in Led 2.2.
961015	Working	LGP		Trouble is tricky. I write things out as if they are not stack-based
						(which should be OK). Eg. <font face=x> <b><font size=x></b>.
						Then in my font interp code (reader), I ASSUME they are stack based
						and assume the </b> must correspond to a preceeding <b> so I just
						pop the stack. Tricky to solve. But I really should before shipping!
961015	REPORT	LGP		HTML writer appears a bit flaky in its font handling.
						Open AboutLed.html and save a copy. Then open the copy
						(in Led or Netscape) and you get the bold/font size going too far.

010830	DEFER	LGP			DEFER for Led 3.0 (Would be a nice cleanup to fix this for Led 3.1)
990914	COMMENT	LGP		Yes. That is correct.
						I never much thought of it before. But I suppose it is peculiar that you must
						get all the text interactor functionality in order to get text justified.
						This is something I will consider rectifying in my next (3.0) Led release
						(breaking the WordProcessor functionality out into an Imager part and an
						Interactor part which can be mixed together).
990914	REPORT	DGarret	>-----Original Message-----
		(0630)			From: Dennis Garrett [mailto:Dennis.Garrett@home.net]
						>Sent: Tuesday, September 14, 1999 9:15 PM
						>To: Lewis Gordon Pringle Jr.
						>Subject: Paragraph database in WordProcessor only?
						>
						>
						>Lewis,
						>
						>I have styles working, but am I correct in that WordProcessor is the only
						>class that knows about a paragraph database?  If so, I assume it means that
						>I must use WordProcessor to draw to a graph port(?)

010830	DEFER	LGP			DEFER for Led 3.0
010108	REPORT	LGP			Add VCL class library support - a class wrapper - TLedEditor - for VCL (and a package).
		(0850)			This would be a good weeks work - I would guess. Almost certainly not for Led 3.0 (unless someone hires
						me to do this). Based on SPR#0849. See also SPR#0851.

010830	DEFER	LGP			DEFER for Led 3.0
010108	REPORT	LGP			Cleanup and improve BorlandCPPBuilderTest app. At least get copy/paste and menu bar working.
		(0851)			Based on SPR#0849. Closely related to SPR#0850.

010830	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
950608	DEFER
950608	REPORT	LGP		Cleanup/document Led_MFC_::SubclassWindow (HWND hWnd) -
		(0329)			especially WS_BORDER crap!!!

010830	DEFER	LGP			DEFER for Led 3.0
990415	DEFER
971223	REPORT	LGP		Consider revising TextImager::GetStaticDefaultFont() to use
						"DEFAULT_GUI_FONT".

010830	DEFER	LGP			DEFER for Led 3.0 (re-examine for Led 3.1 - probably already covered elsewhere in SPR list
						or done).
990415	DEFER
990415	NOTE			Also see spr#0571/#0572
980422	REPORT	LGP		See SPR#0536. 
		(0538)				Fixup / clarify the word-selection and line-break code. See if there is a generic Win32
						(or other) mechanism for this. At least cleanup the existing code. Consider dropping MBYTE char
						support from Led (once UNICODE stuff solid).

010830	DEFER	LGP			DEFER for Led 3.0
990415	DEFER
971020	REPORT	LGP		See spr#0496. If possible, try a led-private-format-embedding format such that 
		(0497)			MSWord will still keep & preserve the embedding. See also spr# 0498.

010830	DEFER	LGP			DEFER for Led 3.0
990415	DEFER
970911	REPORT	LGP		Fix Pict/URL/DIB/Object read/write for RTF (so #0484) works out well.
		(0500)

010830	DEFER	LGP			DEFER for Led 3.0
990415	DEFER
971018	REPORT	LGP		Revise the RTF writer code so that the WriteTag and WriteTagNValue
						code are smart enuf to not write the extra space, when not needed.
						Closely related, is automating the output of the CRLF when we've
						done 80 columns, or so.
							Achieve both by having a layer of writing code between where we currently
						write, and the 'write' call, which keeps track of chars emitted since list
						break. Have this new layer API take a 'can-break-now' param, to prevent
						breaking at bad time (say between nibbles of an HEX_BYTE).
							Low priority.

010830	DEFER	LGP			DEFER for Led 3.0
960520	DEFER	LGP		I implemented this (see qGrabStyleMarkersOneAtATimeTweek).
						But I left it OFF by default since it didn't seem to
						help, and may have slowed things down slightly. Re-examine
						at some future date.
960520	REPORT	LGP		rewrite CollectAllStandardStyleMarkersInRange () to do
						one at a time, and simulate following next ptrs. More calls
						to collect, but text-store collect fewer guys. Might help?
						In place of hwat i had left of 339.

010830	DEFER	LGP			DEFER for Led 3.0
960520	DEFER			Its been a week since I posted to the net asking for how todo this,
						and I've gotten only one response - "Don't bother". OK - I give
						up. Maybe after 2.0...
960514	REPORT			PC bug with hilight color.
						I've gone through hell trying to find a combination of ROPs etc todo
						the equivilent of the Mac LMSetHilightMode/InvertRect() for Windows.
						I'll eventually find some way. But note this is broken in MSWord/MSWordPad.
						This is a GOOD candidate for DEFERAL. I posted to the net for hints. See
						what they have to say first...

010830	DEFER	LGP			DEFER for Led 3.0
960520	DEFER
950601	DEFER			1.0RC1
950521	WORKING			Some progress. See 0275
950506	REPORT	LGP		Set a breakpoint in WordWrappedTextImager::FillCache () first line.
		(0233)			Then do a NEW-DOC command. You will see you hit the breakpoint
						THREE TIMES. Probably worse for reads of docs! This should ideally
						only happen once. Not obvious how to rework things so this happens.
						But STRIVE to at some point!

010830	DEFER	LGP			DEFER for Led 3.0
960520	DEFER
960520	REPORT	LGP		MRTI::GetIthRowRef ()... Can probably be tweeked alot. Wait til
						we see it come up in profiling before worrying, however.

010830	DEFER	LGP			DEFER for Led 3.0
95????	REPORT	LGP		ADD qSkrunchDataSizeByImposingLimits support

010830	DEFER	LGP			DEFER for Led 3.0
960531	DEFER	LGP		
960531	REPORT	LGP		Cleanup Undo/BreakInGroupCommand code.
		(0366)			Awkward how we call break in group so often. Find cleaner, less error-prone
						way. See #0364, #0365.

010830	DEFER	LGP			DEFER for Led 3.0
990416	DEFER
971020	REPORT	LGP		OLE object size bug. fSize, scaleX, scaleY. PostCreateSp... should take
						scaleX, scaleY, and not just munge fSize field. Must analyze and understand
						the object size stuff better. Right now, its very fuzzy.
							Try creating objects in MSWord and copy/paste them into LedIt!. Try resizing
						the before copy. And when copied back? Use this to reverse engineer.

010830	DEFER	LGP			DEFER for Led 3.0
990416	DEFER
971020	REPORT	LGP		Debug SetShownSize() for unknown embeddings on WIndows. Trouble is just that
						the icon should be drawn bigger, and stretched. Wrong args to stretchblt somewhere.

010830	DEFER	LGP			DEFER for Led 3.0
990719	DEFER	LGP
990719	REPORT	LGP		Implement soft page breaks in Led, as described in detail in FAQ (Recipies) #22
		(0607)			See also historical (closed) sprs#0477, #0465. And current spr#0608,0609

010830	DEFER	LGP			DEFER for Led 3.0
990719	DEFER	LGP
990719	REPORT	LGP		Implement hard page breaks in Led, as described in detail in FAQ (Recipies) #23
		(0609)			See also historical (closed) sprs#0477, #0465. And current spr#0608,0606

010830	DEFER	LGP			DEFER for Led 3.0
990409	DEFER
990409	REPORT	LGP		Utilize GetStringTypeW () to improve the I18N support for word breaks etc, line breaks,
		(0572)			smart cut and paste, and so on. (Thanx to Alec's suggesion I looked at this routine).

010830	DEFER	LGP			DEFER for Led 3.0 (Med PRI for Led 3.1 - along with ruler)
990503	DEFER
990220	REPORT	LGP	 	Add some MacUI for Margins, First Indents, and tabstops (or maybe a subset of those?)
		(0549)			Ruler? Probably defer for 2.3.

010830	DEFER	LGP			DEFER for Led 3.0
990428	DEFER
990428	REPORT	LGP		Add XML support to Leds HTML Reader/Writer (maybe rename it to XML reader/writer)
		(0575)			

010830	DEFER	LGP			DEFER for Led 3.0
990416	DEFER
990325	NOTE	LGP		See See spr#0565 - maybe related.
990324	REPORT	LGP		Tabs don't work reasonably with Right and Center justification (though perhaps they shouldn't).
		(0566)			Must think about how this should work, and test other apps.

010830	DEFER	LGP			DEFER for Led 3.0
990415	DEFER
990415	NOTE	LGP		I'm not sure what this means. I've spent 15 minutes looking at what MSWord97 does.
						And I'm still unclear. Right now, I pay attention to \cf, but I ignore \cb. Contrary
						to the RTF 4.1 docs, MSWord97 seems to also INGORE \cb. I can find not RTF tag for
						setting the background color of the window. Nor could I find any such UI in MSWord.
980310	NOTE	LGP		I think this just means pay attention to RTF spec for background color
						in LedIt! (and ActiveLedIt?).
980310	REPORT	PalMikl	I would like this feature controlled by Rich Text. I have
		(0525)			tried a file containing background colors created with Word 8,
						but colors had disappeared in your app. (format / borders and shading
						 / shading -- cannot be done with simple character formatting in Word).

010830	DEFER	LGP			DEFER for Led 3.0
990415	DEFER
990415	NOTE	LGP		I added a Led_IME::NotifyOfFontChange () method, but the natural place to call it is in
						StandardStyledTextInteractor::InteractiveSetFont (). The trouble is - to talk to the IME - I need
						to know the HWND. Currently that information is only contained in Led_MFC.
						I can see no good way to address this problem without drasticly breaking modularity.
						Revisit this later. Its not THAT important (and pretty easy for a user of Led to work around by
						overiding StandardStyledTextInteractor::InteractiveSetFont () to call Led_IME::NotifyOfFontChange ())
980825	REPORT	BobSwer	FROM BOB-Swerdlow-980825
		(0573)				Lewis - 4189 complained that the font was not reset after changing translation engines.
						The REAL problem was that the IME was not getting reset to correspond to the new font.
						You get into a state where the IME isstill on (because the previous font was Japanese)
						but the new (and correctly installed) font is English.  Typing in this state causes
						garbage to appear on the screen since the English font cannot display Japanese characters.
							I fixed this in NotifyOfPrefsChange() for each of the views by checking if the view is in focus
						and if so adding a call to KeyScript after the call to SetDefaultFont.  For example:
						    SetDefaultFont (Led_FontSpecification (fOwner.GetController ().GetSrcLOGFONT ()));
						    if (GetFocus( ) == this) { // IME may be set wrong if font changed - RWS 8/25/98
						     KeyScript (this, fOwner.GetController ().GetSrcLangName ());
						    } 
							However, it seems to me that Led should really be doing this. Whenever Led changes fonts it
						should check if the view is in focus and if so it should set the IME as appropriate for the selection.
						My change works for TA for now (with only one font per view) but doing it in Led will make it more
						robust as the system changes. 

010830	DEFER	LGP			DEFER for Led 3.0
990415	DEFER
990415	NOTE			I think MSWord97 does something similar (when saved as rtf).
990302	REPORT	LGP	 	Open 'spanishprop.rtf' from VPG. Then examine the pictures (OLE embeddings). They look fine.
		(0555)			Then save. File goes from 2MB to 26MB. And when you read the 26MB file, the pictures
						(OLEControls/big pictures) are screwed up (size?) in MSWord (though they look fine in LedIt!
						and WordPad). See spr#0554 for the original report.

010830	DEFER	LGP			DEFER for Led 3.0
990415	DEFER
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
961021	NOTE	LGP		I do think I should support "RTF drawings", and I
						will add that to my list for 2.2.
961021	REPORT	LGP		At 1:41 PM 10/21/96, Rob Mitchell wrote:
		(0398)			>Hi,
						>        I'd love to see more drag-and-drop support for
						>        PICTs, TIFFs, BMPs, etc. as well as RTF drawings
						>        (don't know what the format is called).

010830	DEFER	LGP			DEFER for Led 3.0
990325	DEFER	LGP		Defer, and probably do AFTER Led 2.3.
990325	REPORT	LGP		Related to #0563. Redo the code for preserving UNDO information when user does
		(0564)			an InteractiveSetDefaultFont() call (either to change font name, size etc).
						Right now, this causes ALL the text to be copied, which is slow an inefficient.
						Instead - try more like what we do with ParagraphInfoChangeTextRep. Just keep the vector
						of info records.
							This is low priority, since it should effect nothing but memory use and speed of font changes
						(so they compute their undo info faster).

010830	DEFER	LGP			DEFER for Led 3.0
990322	DEFER	LGP		Defer, and probably do AFTER Led 2.3.
990301	REPORT	LGP	 	Fix validation tabstop reading code (or whatever is wrong with tabstops, otehr than display
						which is covered in another spr).

010830	DEFER	LGP			DEFER for Led 3.0
990322	DEFER	LGP		Defer, and probably do AFTER Led 2.3.
990221	REPORT	LGP	 	Fix validation code on reading RTF. Currently asserts out if given bad values (\ri too big, etc).
		(0547)

010830	DEFER	LGP			DEFER for Led 3.0
990321	DEFER	LGP		Defer, and probably do AFTER Led 2.3.
971020	REPORT	LGP		Bug with display of MacPictures on Windows using QTW. Sometimes (like when I create
						mac pict using paste of 'Socrates/Earth icon' into Led document on mac), gets
						displayed screwed up on windows. Maybe nothing i can do about this. Maybe just
						drop QTW support? Anyhow, LOW PRIORITY. But look into it sometime.

010830	DEFER	LGP			DEFER for Led 3.0
990321	DEFER	LGP		Defer, and probably do AFTER Led 2.3.
980406	Report	LGP		See #414, #0492.
		(0530)			MultiRowTextImager should be fixed to support and ABITRARY Partition object.
						Most importantly - this implies making it keep track of row information in a separate
						object (like a MarkerCover), or perhaps only cached for the displayed rows (speed/memory hack?).

010830	DEFER	LGP			DEFER for Led 3.0 (Med PRI for Led 3.1 - sb fixed as side effect of more fully using
						Led_GDI wrappers and abstractions - and not counting on GetMacPort() stuff anymore).
990321	DEFER	LGP		Defer
990221	REPORT	LGP	 	Led_PPView::AcquireTablet () has a commented out assert that
		(0551) 			Led_Assert (qd.thePort == GetMacPort ()). The reason this fails to be true
						is because of the use of offscreen tablets in MultiRowTextImager::Draw (). I believe the best
						TRUE FIX is to do something akin to what we do in Led_MFC with the fUpdateTablet. But for now,
						this seems to be working OK, and PowerPlant isn't my top priority. I'll just document and
						ignore this for now (commenting out the assert).
 
010830	DEFER	LGP			DEFER for Led 3.0
990321	DEFER	LGP		Defer, and probably do AFTER Led 2.3.
971018	REPORT	LGP		StandardStyledTextInteractor::ExternalizeFlavors () should support
						'promises'. Not sure what they are called under NT. But basic ideas is
						don't write out the actual format. Just tell OS its avialable, and be able
						to reconstruct the format from just one (namely the RTF one) we really
						use to save.
							Low priority. Should make stuff like "Cliboard Copy" faster. And D&D. Thats
						about it.

010830	DEFER	LGP			DEFER for Led 3.0 (HIGH PRIORITY for Led 3.1)
990310	DEFER	LGP		Defer, and probably do AFTER Led 2.3.
990304	REPORT	ArtPoll	In email back and forth between me and Art Pollard (in Led-Discussion mailbox), he requested
						support for tables and columns, and suggested some ideas about how to approach implementing them.
							I came out of it thinking the central enhancement needed for Led is to have a first-class
						"Page" object, into whcih you could attach pictures, and exclusion areas, and quirky layouts (multicolumns).
							Tables - I'm less sure of. He suggested doing multiple little sub-editors in each cell. But my
						sense is this isn't what is generally done. Must review various apps to see. And think some more.
							But when I get to trying to support tables/columns/pictures wrapped around page locations, etc, review
						his email from 990303 (and more there abouts).

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970224	REPORT	DSeller	Move .h file so you can open resource fork on MSVC, and browse the resources. dseller says
						that moving one .h file is all that is needed, and he thinks this is important.

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970623	REPORT	LGP		Quicktime/Windows use to display Mac picts sometimes fails. When it does
		(0473)			do a better job. See if I can detect this. And display 'error' pict
						of appropriate size.

010830	DEFER	LGP			DEFER for Led 3.0 (probbaly NOT for Led 3.1 (too big and too many other priorities) - but good for Led 4.0)
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970715	REPORT	LGP		LedIt! needs StyleSheet support to be a useable word processor.
						At least for me, and how I write documents.

010830	DEFER	LGP			DEFER for Led 3.0
000617	NOTE	LGP			Because of the work I did in SPR#0778 - this is NOT very important (LOWPRI). But it would be nice - someday -
						to have code that fully and properly implements the UNICODE SPEC algorithms.
991209	REPORT	LGP		Need complete UNICODE Line/Wordbreak code. Right now - we have US stuff and Japanese rules in place.
		(0649)			But from the UNICODE.org web site, I found info on generic tables for all UNICODE languages.

010830	DEFER	LGP			DEFER for Led 3.0 (HIGH PRIORITY FOR Led 3.1 - related to doing scaling and improved printing support)
000613	REPORT	LGP			Based on SPR#0781. Go through remaining code which calls Led_CvtScreenPixelsFrom/To/TWIPS? Most of it
		(0786)			and maybe all of it - should be eliminated. Very little left. But whats there probably won't work right with
						scaling.
							LOW PRIORITY. Related to SPR#0783.

010830	DEFER	LGP			DEFER for Led 3.0
010716	REPORT				Rewrite Led HTML support. Support XHTML/stylesheets. Be interoperable with reading/
		(0958)			writing MSWord2k XHTML / MSOFFICE support. Maybe also see if possible to handle embeded images?
						LONGTERM project for post-Led 3.0 (maybe 3.1?). MAIN new feature here is to properly support
						nesting of tags, and style sheets.

010830	DEFER	LGP			DEFER for Led 3.0
010816	REPORT	LGP			Fix Embedding/command support to properly handle multiple commands associated with
		(0966)			the embedding (now just does zero or one). Based on SPR#0818. LOWPRI - DEFER for 3.0.

010830	DEFER	LGP			DEFER for Led 3.0
010817	REPORT	LGP			Open Selection/GetInfo commands for X-Windows (gtk).
		(0967)			Based on SPR#0959. Need todo dialogs, add menu items, and make various embeddings display properly
						on X-Windows. DEFER for 3.0.

010830	DEFER	LGP			DEFER for Led 3.0
010821	NOTE				Doesn't seem too bad. Can probably DEFER for 3.0.
010821	NOTE				Also must fix \listtext support (now hardwired to one bullet)
010713	REPORT				RTF bullet support doesn't support second or deeper levels of nesting on WRITE RTF for MSWord2k.
		(0957)			This is closely related to SPR#0956.

010830	DEFER	LGP			DEFER for Led 3.0
010821	NOTE				Doesn't seem too bad. Can probably DEFER for 3.0.
010713	NOTE				See SPR#0957.
010713	REPORT				Improve reading/writing \\listtable etc support. Right now - filled with tmp/hacks
		(0956)			just barely good enough to limp along.

010830	DEFER	LGP			DEFER for Led 3.0 (MED TO HIGH PRI for Led 3.1)
010823	REPORT	LGP			Revise the API for SetDefaultFont () / InteractiveSetDefaultFont (). I THINK the InteractiveSetDefaultFont ()
		(0970)			API is fine - and I just want to make THAT guy be what you call to change the font of the currently selected text, and
						make SetDefaultFont () - for a word-processor - set ALL the font styles to that given style (or maybe something else - not sure).
							Maybe instead - add new API for WP class.
							Read up carefully on SPR#0559 to see original problem, and also reference SPR#0969.
							DEFER for Led 3.0.

010830	DEFER	LGP			DEFER for Led 3.0 (MEDIUM PRIORITY FOR Led 3.1 - must get help from 'the net')
010827	REPORT	LGP			Fix SetUseBitmapScrollingOptimization optimization for X-Windows.
		(0976)			Right now (due to SPR#0975) it is turned off. See if I can figure out how todo
						an UPDATE () method call - so all the pending update messages are handled.
							Then this can be turned back on.

010830	DEFER	LGP			DEFER for Led 3.0
010522	REPORT	LGP			XWindows color problem - sometimes colors (like green) not displayed as
		(0930)			 green on console (not a problem with Win32based X-Server)

010830	DEFER	LGP			DEFER for Led 3.0
010522	REPORT	LGP			XWindows- Implement Led_Gtk_TmpCmdUpdater::SetText () so that text is
		(0925)			 revised to say Undo "XXX" instead of just Undo.

010830	DEFER	LGP			DEFER for Led 3.0
010522	REPORT	LGP			XWindows/LedIt- for <Separator> items - call
						gtk_widget_set_sensitive (GTK_WIDGET (m), false); break;
		(0933)			Not a biggie - but makes keyboard (arrow key) nav of menus work better.

010830	DEFER	LGP			DEFER for Led 3.0
010501	REPORT	LGP			X-Windows - test/debug & make default UNICODE builds.
		(0897)

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970115	REPORT	LGP		TextIteractor::ScrollSoShowing() needs todo a better
						job of hscrolling (esp for case of both h & v scrolling at
						same time).

010830	DEFER	LGP			DEFER for Led 3.0 (very low priority - fast enough now - and because of logical clipping
						constraints - scrollbits might not even help).
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970115	REPORT	LGP		TextInteractor_::PostScrollHelper () should do scrollbits
						in horizontal scrolling case as well.

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970613	NOTE	LGP		See SPR#0433,431
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
961030	NOTE	LGP		Use STL.
960516	DEFER	LGP		
960516	REPORT	LGP		LineBasedTextImager::fMarkersToBeDeleted SB a linked list, so 
		(0432)			we don't need todo any mem allocations and don't need to worry
						about failing to allocate memory in
						LineBasedTextImager::AccumulateMarkerForDeletion ().

010912	DEFER	LGP			DEFER for Led 3.0
010912	REPORT	LGP			Implement 'secondary hilight' for X-Windows (few trivial fixes, but mainly add
		(1024)			Led_Region support, and Led_Tablet::FrameRgn()). Based on SPR#0987.

030310	NOTE					Improved in Led 3.1a4 (SPR#1286). Still not great - but SB better.
010919	DEFER				DEFER for 3.0, and low-priority for later releases.
010919	REPORT	LGP			Consider rewriting the SmartCutAndPaste code. There aren't exactly
		(1040)			any known problems with it (which of course makes this low priority),
						but it is fairly ill-designed, and sloppily defined. See SPR#1031
						for some details and complaints. Nothing too bad - but I'd feel much
						better with a design I could state clearly and whose implementation
						reflected that design.

011019	DEFER	LGP			Defer - and LOW priority for the future. I'm (now) pretty happy
						with the docs produced by my little AutoDoc tool. Its hard to see
						what could be worth the effort to change.
990722	DEFER	LGP
980406	REPORT	LGP		hi lewis,
		(0612)			thanks for the good news about shared markers...
						I see that you make a own tool for your html-documentation. i think your tool
						is very usefull. 
						But i don't know whether you know about the "AUTODUCK". I found this program on:
						http://ftp.sunet.se/ftp/pub/vendor/microsoft/developr/MSDN/UnSup-ed/
						ftp://ftp.accessone.com/pub/ericartzt/
						http://www.hal9k.com/cug/v400d.htm#cug466
						http://www.lab1033.berlin.ptb.de/8/83/831/swq/TOOLS2.html
						This tool support html and rtf.
						Greetings from 
						Remo

021024	REPORT	LGP			Implement a "Page View" mode for Led (really for WPs like LedIt and ActiveLedIt).
		(1145)			This implies having first class page objects, and support for page break commands and
						display of pages. Probably a new scrolling scheme is needed as well. Think about this
						for 3.2. Inspired by (partly) SPR#1107 and SPR#0680.

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960530	DEFER	LGP		
960530	REPORT	LGP		Do a more efficient version of the undo-command support for font
		(0362)			style changes. Also, I'm not sure the current code does a good job
						of case of empty selection. See SPR#0361 for original bug.

031127	REPORT	LGP			Optimization/speed-up/tweek opportunity.
		(1571)				As a future further optimization - consider doing
						something similar to the MeasureTextCache (or re-using it)
						to cache values from PartitioningTextImager::GetTextLayoutBlock ();
							Based on SPR#1566 (and that SPR contains test files to
						see if it would help).



&&&&&&&&&&&&&&&&&& MACOS LEDCLASSLIB SPECIFIC BUGS

030320	REPORT	LGP			Revise the Led_MacOS_Helper<> code to get rid of
		(1367)			HandleIdleEvent () and use IdleManager to blink cursor
						instead.
							Existing code is OK - so this is LOWPRI.








&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& APPLIES TO ALL APPS &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&




&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& ActiveLedIt! OCX &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&




040207	NOTE		LGP			Based on SPR#1639 - and likely to be defered for 3.1.
040207	REPORT	LGP			Add FileBar to list of pre-existing toolbars, and add
		(1638)			Open File (with dialog), Save to file (with dialog), commands.
						Bind them to the standard save and open icons. Similarly for
						New Document command (and icon). They will NOT do what is generally
						desired as far as docuemnt saving is concerned - but maybe
						pretty close - and a good basis to start adding web-based content
						saving funcitonality (at least the icons being there).


021101	WORKING	LGP			One trouble was that I had to change change calls to LPtoDP, GetWindowOrgEx and GetViewportOrgEx from
						using m_hDC to using m_hAttribDC in Led_Tablet_. That god rid of the
						assert erorrs - but STILL - ntohing is dispalying in the metafile
						window. I tried another OCX, and that worked fine (in ActiveX container app).
						Almost certainly my bug somehow? Maybe wrong default assumptions about
						TEXTMODE, or BACKCOLOR or something? DUNNO?
							Anyhow - we can debug the rest later as I don't think this
						is a regression. Just test a bit that this CHANGE didnt cause
						any PRINT regressions.
021101	REPORT	LGP			DRAWMETAFILE BUG WITH ACTIVELEDIT.
		(1169)			Run ActiveX Test Container. Put in an ActiveLedIt OCX (do under debugger). Select
						"Draw MetaFile" command. CRASH (Assert Error).





020504	DEFER	LGP			DEFER for 3.0.1
020422	REPORT	JTerando>-----Original Message-----
		(1088)			>From: Jason Terando [mailto:jterando@rapidtext.com] 
						>Sent: Monday, April 22, 2002 6:39 PM
						>To: 'Lewis G. Pringle, Jr.'
						>Subject: RE: ActiveLed Questions
						>
						>Hi,
						> 
						>I was thinking more along the line of the functionality of 
						>the EM_LINEFROMCHAR and EM_LINEINDEX messages. 
						> 
						>As a simple example, let's say we had the text "LINE #1"<cr>"LINE #2".
						>The EM_LINEFROMCHAR message, if passed character index 10, would return 1,
						>which is the zero-based line number of the position passed.  Conversely,
						>the EM_LINEINDEX would return the character index of the line number passed to it.
						> 
						>[LGP] Thanks for clarifying your suggestion. I’ll try to get some 
						>methods into a future release of ActiveLedIt! I assume this isn’t
						>something you need immediately? I guess not – since as a workaround 
						>you can walk the text yourself (using the Text attribute) and looking 
						>for \n characters in that text.
						>
						>
						>FYI, there's a minor annoyance and I'm fairly sure it's 
						>Delphi specific. I've run into is that the control appears 
						>to "gobble-up" control-key combinations.  For example, CTRL-A 
						>is the hotkey for a Select All menu item.  When the edit control 
						>has focus, CTRL-based hotkey don't work in my app.  ALT-based hotkeys seem 
						>fine, and the behavior isn't affected by the SupportContextMenu setting.
						>There is an easy to implement workaroud as follows:
						> 
						>procedure TRealtimeForm.Form1KeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
						>begin
						>if ActiveControl = LEdit1 then
						>    SendMessage(application.handle, CM_APPKEYDOWN, key, 0);
						>end;
						>Regards,
						>
						>[LGP] Thanks. I’ll look into this a bit later on. It sounds like 
						>its low priority for you since you have a workaround.



010830	DEFER	LGP			DEFER for Led 3.0
991222	REPORT	LGP		Make it easy to clone ActiveLedIt! (by trying it once myself and clearly documenting what clsids etc need changing).
		(0674)			

010830	DEFER	LGP			DEFER for Led 3.0
990722	DEFER	LGP
990306	NOTE	BRusk	>-----Original Message-----
						>From: Bruce Rusk [mailto:homais@ucla.edu]
						>Sent: Saturday, March 06, 1999 4:04 PM
						>To: Lewis Gordon Pringle, Jr.
						>Subject: RE: ActiveLedIt
						>
						>
						>One final detail: If the application containing the control is 
						>minimized and
						>redrawn, it looks right again, with the text starting at the top left
						>corner. But once you start to edit the text, it goes out of whack again.
990306	REPORT	BRusk	>-----Original Message-----
		(0613)			>From: Bruce Rusk [mailto:homais@ucla.edu]
						>Sent: Saturday, March 06, 1999 3:40 PM
						>To: Lewis Gordon Pringle, Jr.
						>Subject: RE: ActiveLedIt
						>
						>
						>One more detail:
						>
						>In Access, in designing the form, one of the options on the ActiveLedIt
						>control is "Edit". This pulls up a blank control in a separate modal window
						>on which text can be entered. The box is always about the same size as the
						>control on the form, so it's "getting" that information properly. If you
						>type any text in control in this mode, it appears on the form (unless
						>otherwise modified by code), starting at the top left corner, as it should.
						>But when you actually input the text, either in this edit mode or in the
						>form, the cursor starts off a little lower down and slightly to 
						>the right of
						>the top left corner. The area to the left of and above this area isn't
						>redrawn, leaving bits of the old text on the screen. This may also have
						>somethign to do with the text running off the end of the lines.

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
980803	REPORT	Jack Ni	I have found what appears to be a bug.  The following code in VB:
		(0543)			Private Sub Command1_Click()
						With editBox
						        .SelColor = vbBlue
						        .SelText = "<B>"
						        .SelColor = vbBlack
						        .SelText = "Bold"
						        .SelColor = vbBlue
						        .SelText = "</B>"
						        .SelColor = vbBlack
						End With					
						End Sub
						Should yield <B>Bold</B>, with the HTML tags colored blue.  Instead, the
						entire string shows up black.
						Jack Nichols
						jack@webaurora.com
						http://www.webaurora.com

010830	DEFER	LGP			DEFER for Led 3.0. This should be pretty easy for 3.1 since I now know
						about the OLEPicture API (and use it elsewhere in ActiveLedIt). HIGHPRI for 3.1.
990715	DEFER	LGP	
980109	REPORT	Jack Nic> As for the
						> picture thing, I could work with that, although I know of no way to
						convert
						> a picture to RTF, unless you embed it (then I can do it).  It would just
						be
						> more convenient to put Editor1.SelPicture = LoadPicture("c:\mygif.gif")
						than
						> mess around w/ RTF code.
							Led contains no code to render GIFs. And to the best of my knowlege,
						neither does the Win32SDK.
							BMPs are supported by the SDK, and it is because of this that Led makes
						supporting them so easy.
							Right now I cannot think of an elegant way to solve your problem, and I'm
						reluctant to add a blatant hack to the IDL for ActiveLedIt! (which I'll need
						to support backward compatably). I don't know your situation, so I don't
						know if this is practical - but for a limited set of .gifs (or whatever),
						you can easily manually covert them to RTF format using MS-Word.
						>I don't know how familiar you are with VB, but
						> LoadPicture takes care of loading most types of pictures, and converts it
						to
						> one format (bitmap, I think), so you wouldn't have to write input filters
						> for Gif, JPEG, and the like.
							Oh... well, thats diffent. If it creates a DIB, then I can pretty easily do
						what you want. I'm just not convinced its terribly elegant.
							If you can think of a more elegant (general) API, I'd love to hear it.
						Otherwise, I'll try to think of one which will accomodate your needs, and
						not appear too kludgy.

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
980303	WORK	LGP		I did a pretty decent job of this for ActiveLedIt! Nothing as of yet for
						LedIt! and LedLineIt! (less demand there). Lets first see the reaction to the
						ActiveLedIt! OLEAUT stuff. See SPR#0513.
971223	REPORT	LGP		Do more elaborate OLE/Aut API for ActiveLedIt! and LedIt! and LedLineIt!.
		(0506) 			Consider doing elaborate stuff like in MSWord 97. See SPR# 0505.

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
990629	NOTE	LGP		More data on this. Resizing the control (when inactive) from within MSWord causes it to display
						properly. BUT ONLY IF YOU RESIZE VERTICALLY. NOT for Horizontal resizes!
990629	NOTE	LGP		I tried to trace this down. I have little idea what is going on. It seems MSWord somehow forms
						a picture, and save it? Maybe? Most other controls seem to work fine...
980303	REPORT	LGP		ActiveLedIt! has (metafile related?) problems with intial image display. Doens't happen
		(0516)			with all containers. But does with MSWord 7.0. Comes up blank, til activated. I think trouble
						is draw when not yet activated? And just created, or restored from file?

010830	DEFER	LGP			DEFER for Led 3.0 (Medium to HIGH priority - part of 'PAGE SUPPORT' package of changes)
990715	DEFER	LGP		(see spr#0607)
990510	REPORT	LGP		>-----Original Message-----
		(0608)			>From: Richard Kennard [mailto:rkennard@firstam.com]
						>Sent: Sunday, May 09, 1999 5:01 PM
						>To: info-led@sophists.com
						>Subject: ActiveX Wordprocessor Control
						>
						>
						>Dear Sir/Madam,
						>
						>My company and I would be very interested in using your ActiveX
						>Wordprocessor Control in our upcoming Visual Basic projects. However, of
						>primary concern to us would be its ability to handle 'soft' page breaks -
						>that is to say, the dotted line in Microsoft Word that moves dynamically
						>relative to where the printer will cut the pages.

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
980625	REPORT	FLaurnt	Fix problem in AcitveLedIt where (for some containers) it doesn't let you
						type CR/LF characters (MSIE? - I forget which ones)

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
971223	REPORT	LGP		Update ActiveLedIt! - at least to use same font/color algorothm as
						LedIt! - and maybe even add same toolbar, if possible...

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
980304	REPORT	LGP		ActiveLedIt! focus support still not working right. SPR#0515 and #0512 not quite
		(0524)			fixed. Works much of the time. But I think trouble has todo with which window -
						control or LedItView window gets messages. I think - not sure...

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
980304	NOTE	LGP		Not sure this is strictly needed anymore. See if I can do the sfget/put file dialogs from
						a scripting language, and we already have file read/write methods.
971021	REPORT	LGP		ActiveLedIt! should have menu options to read/write files.
		(0518)

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
971021	REPORT	LGP		ActiveLedIt! should have Property "LoadFrom" which is URL it will load contents
		(0514)			from. And one called "SaveTo" which is URL it will dump to. Maybe not easy.
						So not first IO approach to take.

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
980304	NOTE	LGP		See qDisableEditorWhenNotActive in ActiveLedItControl.cpp. Not sure this is a good idea.
980303	NOTE	LGP		Somewhere in Led we need the notion of readonly text(whole buffer). Make it easy to
						make whole buffer readonly, so easier in ActiveLedIt!
						Then MAYBE hook this into COleControl::AddFrameUI/RemoveFrameUI (best place I've found
						so far).
980303	REPORT	LGP		ActiveLedIt! in MSIE doesn't seem to activate control (which is why we don't get right
		(0521)			delete behavior. And we allow editing when not activated. Fix both problems.

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
980304	REPORT	LGP		ActiveLedIt! should call 'abouttodomodaldialog'/didmodaldialog calls which are
		(0522)			part of OLECOntrol spec. Do for find dialog and about. Not currnetly done.

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
980303	REPORT	LGP		ActiveLedIt! doesn't deal with sizes properly.
		(0517)	

010830	DEFER	LGP			DEFER for Led 3.0
990628	DEFER	LGP
990628	REPORT	LGP	 	Consider removing LoadFile/SaveFileAs... methods from IDL, as they maybe security holes for over
		(0597)			the internet. Now sure how best to handle this?







&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& LedIt!/LedLineIt! Applications &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&


030325	NOTE		LGP			I will add this suggestion to my list of features for a future release.
030325	REPORT	R.Mast	> -----Original Message-----
		(1377)			> From: Ryan Mast [mailto:cmastfamily-ryan@redrose.net]
						> Sent: Monday, March 24, 2003 7:41 PM
						> To: info-led@sophists.com
						> Subject: Excellent work
						> 
						> I just downloaded LedLineIt today.  I've been looking for a decent
						> alternative to SimpleText for quite some time now -- the 32k limit has
						> been getting really annoying, since I often use it for editing Perl
						> scripts and the like, and I'm too poor to get BBEdit. ;-)  LedLineIt
						> does the job quite nicely.  Small, fast, efficient, it's perfect for
						> what I need!
						> 
						> In the future, could you add an option for displaying line numbers along
						> the left-hand side of the document?  It'd be helpful for what I need.
						> 
						> -Ryan
						> 
						> --
						> http://www.RyanMast.com

020504	DEFER	LGP			This appears to NOT be a Led-bug - but some sort of other
						problem with my machine (WinXP). It appears to be affecting ALL
						applications: and the real problem is that accelerators are not
						being processed. When that happens - the control key gets sent to the
						Led window - and it rightly and reasonably rejects it.
							DEFER.
020504	REPORT	LGP			Transient bug with getting 'unknown error' on command key equivs -
		(1083)			DEBUG NOW - HIHG PRI SINCE I'M NOW REPRODUCING IT.

010830	DEFER	LGP			DEFER for Led 3.0
010604	REPORT	LGP			LedIt! XWindows should have dirty doc flag, and are you sure alerts on close doc
		(0948)			(e.g from new/open command or close command or from quitting app). Based on SPR#0932.
						LOWPRI.

010909	DEFER				Defer the remaining work for after Led 3.0.
010909	WORKING				I just implemented a very similar fix to LedLineItMFC (SPR#0697). And as a side-effect of
						SPR#1021 I improved things slightly for LedIt! - in case of D&D of text files. But leave the bulk of this
						for a future release. Not that important (esp in LedIt!).
							Also - I fixed StyledTextIOReader_PlainText to use the new CodePage stuff to guess
						an input codepage and convert using it.
000117	REPORT	LGP			Add popup to LedItMFC's FileOpen/Save dialogs to select the character set to save in/read in.
		(0698)			For Read - make Automatic the default. For save - make the opened one default. This should all work
						regardless of Win95/98/NT5, and regardless of whether you have built UNICODE etc version of LedLineIt!.
							See SPR# 0697. Note this only applies when saving as TEXT.

010830	DEFER	LGP			DEFER for Led 3.0
010507	REPORT	LGP			X-Windows. Improve Find dialog for LedIt! (XWin). Add checkboxes for options (case match etc).
		(0951)			Now its pretty sloppy. Based on SPR#0950. LOWPRI.

010830	DEFER	LGP			DEFER for Led 3.0
000619	REPORT	LGP			Add Java to the list of predefined syntax coloring tables (trivial - like C++ - but with System and a few others added?)
		(0804)			Exception (capitalized?) Others? ask Simone.

010830	DEFER	LGP			DEFER for Led 3.0
010426	REPORT	LGP			LedTestWin32 - reimplement its commandhandling using TextInteractorCommonCommandHelper
		(0889)

010830	DEFER	LGP			DEFER for Led 3.0
000812	REPORT	LGP			consider making LedLineIt! default destributed version be SINGLE-BYTE?
		(0823)			

010830	DEFER	LGP			DEFER for Led 3.0
010719	REPORT	LGP			Led MacOS/Carbon support in LedIt! sample application has a small bug. The new NavServices
		(0962)			dialog needs to be updated to take into account new file types list (like we did with old SFGetFile dialogs).
							I did a lot of the investigation. Look at http://developer.apple.com/techpubs/macos8/Files/NavigationServices/Navigation_Services/index.html
						and search for "Customizing Type Pop-up Menus".

010830	DEFER	LGP			DEFER for Led 3.0
990722	DEFER	LGP
990722	REPORT	SLP		When you have a file and you select Save As... and you change the extension
		(0615)			(eg. from rtf from html), it should automatically rename the file to the proper new extension.

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
970811	REPORT	Ville	At 4:57 AM 8/11/97, Viktor MÅ’rtensson wrote:
		(0475)			>Feature suggestion:
						>
						>startup switch -line:4324
						>
						>start viewing a file at the given line.
						>
						>/Ville
						>------------------------------------------------------
						>Viktor MÅ’rtensson         House 5 Software Technology
						>viktor@house5.se          info@house5.se 
						>tel: +46 (0)457-10692     http://www.house5.se

010830	DEFER	LGP			DEFER for Led 3.0
990503	DEFER
970911	REPORT	LGP		Open New Window (fire up another LedIt!) and Open IN NEW Window
						checkbox in open dialog feature to add to LedIt! windows (cuz its
						SDI)

010830	DEFER	LGP			DEFER for Led 3.0
960628	DEFER	LGP		Too many implications if I start doing this piecemiel now. Think out
						for next release...
960628	REPORT	LGP		add emacs cursor editing keys as a futureoption
						for LedIt! - I just find my fingers keep typing
						CTRL-E etc for curosring. I wish it worked!

010830	DEFER	LGP			DEFER for Led 3.0
960702	DEFER	LGP		
960702	REPORT	LGP		Do nice busy cursor support for LedIt! - see SPR# 0367.
		(0368)

010830	DEFER	LGP			DEFER for Led 3.0
991013	REPORT	LouLesko>-----Original Message-----
		(0625)			>From: Lou Lesko [mailto:loulou@louislesko.com]
						>Sent: Wednesday, October 13, 1999 2:05 PM
						>To: info-led@sophists.com
						>Subject: Default Font
						>
						>
						>Dear Sophist Folks,
						>
						>I just happened upon Ledit and am giving it a whirl.  Coming from a Unix
						>"vi" background I find the simple elegance of your product fantastic.  I
						>have a question which may be a request - is there any way to set a default
						>font for new documents?  Also are there any plans to have keyboard
						>shortcuts for the "Justification" menu?

010830	DEFER	LGP			DEFER for Led 3.0
990715	DEFER	LGP	
971213	REPORT	LGP		The ColorMenu in LedItMFC should display a checkmark for the selected
						color, if any.

010830	DEFER	LGP			DEFER for Led 3.0
990415	DEFER
971020	REPORT	LGP		Add "Paste Special" to LedIt! - or something quite similar. See spr#0493.
		(0494)			Trouble is that sometimes if there are are multiple reps on the clipboard (or d&d package)
						you may want to pick which to use, and you may want to interpret how to use them (e.g.
						for HTML text do you interpret the HTML, or just paste the plain text).

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970604	REPORT	LGP		Provide ll.bat file, or some easy way to launch LedLineIt from the command
						line.

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970715	REPORT	LGP		Look at Newspad application. See what I can copy that is simple (at least command key
						choices, like for indent/unindent etc).
						Add this program to list of comptetitors.

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970315	NOTE	LGP		Low Priority
970305	REPORT	SLP		At 2:09 PM 3/5/97, Simone Pringle wrote:
						>If I undo my changes all the way to the beginning...
						>
						>Here's what I did:
						>
						>        Typed text.  Then Ctrl-Z (undo).
						>
						>I expected the save button to go grey.  It didn't...

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970707	REPORT	LGP		Drop multiple files on the LedLineIt! application object in the explorer.
						Only one is actually opened. No errors. Just others ignored.

010830	DEFER	LGP			DEFER for Led 3.0
991224	REPORT	LGP		Remember prefs (like syntax coloring, autoindent) in prefs file in LedLineItPP.
		(0683)

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970613	NOTE	LGP		My first two inclinations are to try to deal with this via
						OLE/Aut and integration into someone elses existing search technology.
						Or trying maybe I'll integrate some public domain code todo grep pattern
						matching stuff into a Led module. Dunno. But either way this isn't trivial.
						And I don't see it making it into 2.2.
970613	REPORT	Remo	>It would be interested me whether you implement a Patternsearch while
		(0427)			>search.

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970304	Report	LGP		Script Menu.
		(411)			Look in special folder, and add all .bat, .exe etc files to the menu.
						Perhaps add some renaming/command key assoc facility as well.
						Idea is that this will fit together well with OLE Aut (#412).

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970304	Report	LGP		OLE Automation. At least simple support with access/updating text.
		(412)			Enuf to demo script menu (#411)

010830	DEFER	LGP			DEFER for Led 3.0
960527	DEFER	LGP		Tried it, but it didn't really help. We must
						fix BlockAllocation to return its stuff to malloc
						freepool before returning malloc freepool to OS will really
						help.
960430	REPORT	LGP		Reclaim memory on Mac and see if we can return some to TMP mem pool?
		(0351)

010830	DEFER	LGP			DEFER for Led 3.0
960530	DEFER	LGP		Very low priority. This is just about how to report a 'dunno what happened'
						error dialog. I think I beep for now, which is adequate.
960430	REPORT	LGP		Drag of large picture from Netscape to Led fail w/ bad-format excpetion but
						no alert. Part of this was the picSize bug I fixed. But even so, should
						have been an alert saying bad format. Now sure how to deal with this -
						Notification Manager?

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970315	REPORT	LGP		RETURN and TAB should cause lose-focus on LedLineIt goto-line edit-text in status bar.

010830	DEFER	LGP			DEFER for Led 3.0
960518	DEFER	LGP		
960510	REPORT	DougSt	In alerts (in particular, the do-you-want-to-save alert when quitting)
						you should be able to use command key equivs - like ESC, CMD-., and 
						%D for doing the button that starts with D, etc...
						Probably will defer this puppy (Mac only - I think all the above is
						already OK on PC).

010830	DEFER	LGP			DEFER for Led 3.0
991228	REPORT	LGP		Save/Restore preferences code for Mac LedIt! / LedLineIt! (LOWPRI)
		(0689)

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970707	REPORT	Simone	When you have files open in LedLineIt, you should update the "Window"
						menu entry to have an indication of the file's dirty read status.
						eg.  File1 * 

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970707	REPORT	Simone	Improve file/open default directory logic.  Try and use NextStep's
						model: default to the directory of the active MDI document.

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970707	REPORT	Simone	If you don't find a string, you may want to display a dialog box.


010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970305	REPORT	SLP		At 2:50 PM 3/5/97, Simone Pringle wrote:
						>If you open a file based on the most recent file list, and THEN you  
						>do file open, the default directory still is where LedLineIt is  
						>installed...

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970305	REPORT	SLP		SIMONE SAYS VERY ANOYING - EVEN THOUGH MFC BUG
						At 2:50 PM 3/5/97, Simone Pringle wrote:
						>Also, if you open multiple copies of LedLineIt!, you "lose" some of  
						>the recently opened files...

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970315	REPORT	LGP		drag of a selection to the desktop doesn't work. Presumable this is
						cuz I don't put in the FILE/FSSPEC package type (only tested on windows,
						but probably true on both - actually mac does some magic so it works - only a windows problem)

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970707	NOTE	LGP		Perhaps do separate ActiveX control for this? And make LedLineIt! etc know about the
						OCX? And use it? Callbacks between control and LedIt/LedLineIt?
970707	REPORT	Simone	Find in files... Especailly for LedLineIt!


010830	DEFER	LGP			DEFER for Led 3.0
000617	NOTE	LGP			Note - already done in LedIt! - and Led - should be trivial to add to LedLineIt!
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
960430	DEFER			Reviewed
941107	DEFER			Mostly useful for a programming tool. Not needed for LEC.
941024	REPORT	LGP		Add the ability to "show invisibles".
		(0042)

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970613	NOTE	LGP		"Revert to Saved" would be really handy on both LedIt! and LedLineIt! (windows).
961104	DEFER	LGP		Defer, and probably do in Led 2.2.
961104	NOTE	LGP		Already done for Mac. Just add to Windows (easy).
961104	REPORT	Simone	At 2:23 PM 11/4/96, Simone Pringle wrote:
		(0406)			>2. Add to the File menu the Revert action (revert to last saved version)

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970708	REPORT	LGP		LedLineIt! Windows open of a file which is already open opens a second copy. 
						It should merely select the window, and bring it to front.

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970317	REPORT	LGP		In LedIt! - Windows. Use new-LedIt! document command in explorer.
						Creates zero length .led file. Open it in LedIt!. Type stuff.
						Save and close. Try to re-open. Still zero length.





&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& DOCUMENTATION &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

011106	DEFER	LGP			Little point in this. The LedIt/LedLineIt! docs aren't very good, but
						aren't important either. DEFER and LOW PRI for 3.1.
010926	REPORT	LGP			Further revise LedIt/LedLineIt docs.
		(1048)

011106	DEFER	LGP			Little point in this. The LedIt/LedLineIt! docs aren't very good, but
						aren't important either. DEFER and LOW PRI for 3.1.
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970304	Report	LGP		Add "Using LedIt! as a URL Bookmarking utility" section to LedIt!
						docs.

011106	DEFER	LGP			
011106	REPORT	LGP			Some customer (I forget who) asked for info/tutorial on
		(1070)			how to use the Led_MFC stuff with a CWnd. I guess what I told him
						was good enough, since I haven't heard back (yet). But I should do
						some better docs on this. Maybe a tutorial or at least an FAQ
						item.





&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& BUILD SUPPORT / SCRIPTS / ETC &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

010830	DEFER	LGP			DEFER for Led 3.0
000619	REPORT	LGP			BuildFinalStageDir can use the same quiet hack from DoExport (devnull)
		(0799)			

010830	DEFER	LGP			DEFER for Led 3.0
000619	REPORT	LGP			Copy and Mak scripts should take 3.0b2 arg - instead of just b2 as arg. Maybe - maybe not.
		(0800)			Review one more time the various scripts for simplicity and clarity. Now much simpler build release process already.

010830	DEFER	LGP			DEFER for Led 3.0
000619	REPORT	LGP			Update notes on release procedure about deleting extra old files in ftp dir (maybe script more of that stuff)
		(0801)			

010830	DEFER	LGP			DEFER for Led 3.0
000619	REPORT	LGP			Add readme to the WrapperSetup project (or maybe just above it - in Auxilary files) to roughly summarize what is there
		(0802)			and why (and where its from).


&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& UNGROUPED SO FAR--- &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

 
010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
961230	REPORT	LGP		Make it so LedItPP compiles with qMimicLTextEditAPI set to FALSE.
						If not the applet, then at least get class Led_PP working that way.

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
970303	REPORT	LGP		Status bar on LedIt! Windows should show current font, size, etc (not
						crap about capslock, etc).

010830	DEFER	LGP			DEFER for Led 3.0
970723	DEFER	LGP		Defer, and probably do in Led 2.3.
961223	REPORT	PenHelm	SUMMARY: In LedIt! Mac, dbl click on file in Finder, and opens extra copy
						of file, instead of selecting already open document:
						At 3:07 AM 12/21/96, Pen Helm wrote:
						>>> two instances
						>I meant, another instance of the same data file, within LedIt.
						>(The second instance was blank by the way, since I hadn't saved the
						>first.)
						        Ah yes. THIS is a bug (though I'd say somewhat low priority).
						        Anyhow, I've added it to my SPR list. And I'll probably drop
						        you a note when its fixed.

010830	DEFER	LGP			DEFER for Led 3.0
961205	DEFER	LGP		Defer, and probably do in Led 2.2.
961015	Working	LGP		Got InternetConfig 1.3. No improvements. Still haven't checked on
						new QTW.
960901	REPORT	LGP		Check Net for new InternetConfig (IC), and new version of QT For
						Windows, so I can avoid existing compiler / linker warnings.

010830	DEFER	LGP			DEFER for Led 3.0
961101	DEFER	LGP		Defer, and probably do in Led 2.2.
961101	Note	LGP		CF other idea about doing what MSIE etc do and alert of change in
						registry at startup for html files, and ask if you want them
						autoregistered to LedIt! - and checkbox about whether to keep asking.
						See SPR#0380.
961101	REPORT	LGP		At 2:31 PM 11/1/96, Simone Pringle wrote:
		(0405)			>I don't care if you use Inc or not...  Just  pick one...
						>
						>I register LedIt for .txt and .ini files.
						>
						>What I meant was that I think you can find out what all the  
						>registrations for LedIt! are and replace them with the new one...
						>
						>I suppose what you could try is to have a link called LedIt! which  
						>points to the actual .exe that's currently in use and so you don't  
						>need to ever change the registration...

010830	DEFER	LGP			DEFER for Led 3.0
961104	DEFER	LGP		Defer, and probably do in Led 2.2.
961104	NOTE	LGP		Another good idea. On the mac, a likely way to handle this
						is to add an underline to the item in the windows menu
						(other apps do this). And - maybe adding a * or
						"modified" text in the status bar? Or maybe as
						you say munging the file name in the titlebar?
961104	REPORT	Simone	At 2:23 PM 11/4/96, Simone Pringle wrote:
		(0407)			>3. Add some indicator that the file has been modified (Maybe you  
						>put a * after the file name in the title...)

010830	DEFER	LGP			DEFER for Led 3.0
961104	DEFER	LGP		Defer, and MAYBE do in Led 2.2.
961104	REPORT	Simone	At 2:37 PM 11/4/96, Simone Pringle wrote:
		(0408)			>MSVC warns you if a file you're viewing has been updated by another  
						>app while MSVC did not have the focus, and it prompts the user if  
						>he/she wants to refresh the text.
						>
						>It would be nice if LedIt! would notice changes too...

010830	DEFER	LGP			DEFER for Led 3.0
961031	DEFER	LGP		Defer, and probably do in Led 2.2.
961031	REPORT	LGP		When cursor is over URL object (either in about box or
						embedding), change cursor to some sort of navigate, or
						at least finger pointing cursor.

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960829	REPORT	LGP		// We probably should be able to get the TextStore_ (and StandardStyledTextImager::SharedStyleDatabase?)
						// info directly from the SinkStream - or even better - the SinkStream should have an API for adding
						// Markers directly. But alas both of these are missing from Led 2.0, so we must provide them here.
						// This is a good candidate for cleanup in Led 2.1.

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
961014	Update	LGP		Redo QuickLookAppearsToBeRightFormat() code to return a PROBABILITY
						and then try ALL formats and use the one with the greatest probability.
						Use this together with the suffix to compute resultant probability!
960906	REPORT	LGP		Should enhance the unknown/format reading code in LedIt! Mac/Windows
						to take into account file suffix in our guess. Also (MACONLY)
						should take into account FINDER File-Type info. Shouldn't prohinit trying
						all the types, but should guide our ORDER, and prefrence if we match
						multiply.

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960902	REPORT	SLP		Simones - PC, open file dialog, say *.txt and autoswitches popup to say text
						and then select a text file, and hit open button. Get an error about bad format.
						Presumably its still trying to read it as Led format for some reason.

010830	DEFER	LGP			DEFER for Led 3.0
010830	NOTE				Some of this already done for Led 3.0 (prefs utility classes).
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960910	COMMENT	LGP		See #0378-#0381
						First write Prefs class. Maybe part of Led, or maybe just specific to
						LedIt! Mac and PC. Probably portable and part of Led (maybe in LedSupport?).
						Then use this class for all the refered to prefs ideas/purposes.
960910	REPORT	LGP		SAVE 'SearchParameters' in prefs.
		(0381)			Make new prefs class.

010830	DEFER	LGP			DEFER for Led 3.0
010830	NOTE				Some of this already done for Led 3.0 (prefs utility classes).
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960910	COMMENT	LGP		See #0378-#0381
960820	REPORT	LGP		On PC, add prefs saving, and user-configurable auto-setting of registry
		(0380)			for opening of known file types. (like what MSIE does for .html).

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960901	NOTE	LGP		I'd really like to get this into Led 2.1. Instead of bring up a dialog, my workaround
						for the D&D problem is to use a POPUP MENU!!!! That should work on both Mac and PC.
960518	DEFER	LGP		Sad, but no time.
960501	DUP-REP	LGP		Support PasteAs/DropAs on Mac and PC (maybe will have to defer). Pay attention
						both to declared types, and infered types (like for TEXT, it could be MIME,
						RTF, HTML, etc - must use our reader/GuessFormat code - kinda like I did for
						OpenDoc - only use Notification MGR not Alert).
960305	REPORT	LGP		Support PasteAs/DropAs dialogs so we can convert text into URLs (may defer
						til after 2.0)

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960518	DEFER	LGP		
960518	REPORT	LGP		Consider updating LedItView::FindCommandStatus_Font() to do
						OUTLINE around font sizes for which we have ::RealFont () -
						bitmap font avialable...(MacOnly)

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960521	DEFER	LGP		
960501	REPORT	LGP		Do better handling of PRIORITY ORDER of CLIPBOARD contents. On MS Word text
						being pasted into Led we grab the EMBEDDING, not the text (maybe right, maybe not?)
						But we SHOULD first go through the embeddings really on the clipboard and give
						them priority where possible. Or something like that...

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960524	DEFER	LGP
960515	REPORT	LGP		on scrollbits set background color for selection so we dont
		(0388)			get scollbits flicker
						See #0389

010830	DEFER	LGP			DEFER for Led 3.0 (Medium Priority for Led 3.1)
010830	NOTE	LGP			Fix must go in FlavorPackageInternalizer::InternalizeFlavor_FILE ().
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
961015	NOTE	LGP		Would be very nice if I could fix the DropFIle support to take into
						account file suffixes in guess, and to use the approprioate format
						converter (integrate with rest of file reading).
960523	DEFER	LGP		
960523	REPORT	LGP		See #0346. Drop of files into open Led text window (on mac and pc)
		(0347)			always interpret the file as containing text. Should at least support
						.led format files. And really should support DropAs stuff so user can
						specify/chose file format. Also see #0348.

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960523	DEFER	LGP		
960523	REPORT	LGP		See #0347. Drop of files on Mac and PC only pays attention to the
		(0348)			first file.

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
961029	REPORT	LGP		A PICT object should be able to externalize itself as DIB, and vice-versa.
						ESPECIALLY (perhaps only) important on appropriate platforms (ie PICT->DIB on
						win, and DIB->PICT on Mac). But perhaps - if/where easy - do everywhere?

010830	DEFER	LGP			DEFER for Led 3.0
010830	NOTE				Already did something similar to this - but not quite fully there.
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
961030	NOTE	LGP		Part of context menu stuff. One item might be OpenURL. See #0404.
960521	DEFER
960305	REPORT	LGP		support command-click on plain text to open URL (mac only, using IC).
						(may defer til after 2.0)

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960522	DEFER	LGP		
960523	DEFER	LGP		
960522	REPORT	LGP		Should get resize handles, and allow resizing of Embeddings on PC.

010830	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
961004	DEFER	LGP		No time now.
960924	REPORT	LGP		PC DIB display bug.
						display of DIBs should do funky pallet manips - try about.bmp with
						funny gold stuff from LEC about box in pasted(in) ledit - windows.
						Looks funny. See ShowDib.cpp, SDK sample program for relevant pallet manips.

010829	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
961030	REPORT	LGP		Support reading/writing ttro (teach text read-only) files.
						These files (I believe) have the character "0xCA" inline
						in the text everywhere where a pict is expected to be inserted.
						The PICTS are stored in the resource fork, with numeric IDs
						starting at 1000. Each successive "0xCA" grabs the next PICT.
						Only makes sense to support this on the mac (since no resource
						fork on PC).

010829	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
961030	Note	LGP		Tried this on Windows and it made no apparent difference.
						(at least to scrolling speed). Perhaps I should try again?
						Or test on Mac? Or perhaps we must keep same tablet/offscreen
						/compateable DC around across draws (we don't draw many rows at
						a time when scrolling, so maybe thats why it doesn't help scroll
						speeds.
961015	REPORT	LGP		Speed TWEEK.
						(especially scrolling speed)
						Instead of resizing offscreen bitmap if line height changes,
						only resize if it gets smaller! This should reduce number of
						re-allocs of that offscreen buffer which I'm guessing from
						my profiling numbers may be a significant hit on both PC
						and Mac.

010829	DEFER	LGP			DEFER for Led 3.0
961030	DEFER	LGP		Defer, and probably do in Led 2.2.
960912	REPORT	LGP		RTF Speed Tweek (from profiling):
						In MultiRowTextImager::MultiRowPartitionMarker::InvalidateCache_ ():
						...
						/*
						 *	This invalidation is way more aggressive than it needs to be. Really all we need
						 *	todo is check if this was one of the rows in the window, and only invalidate then.
						 *	But that check would be at least somewhat costly. So this may be best for now.
						 *	Maybe later try walking the markers from the start of window by n (number of rows currently
						 *	set in total rows in window cache) and see if we are hit. Maybe that wouldn't be
						 *	too bad cuz we could do nothing in the common case where the row cache was already
						 *	invalid.
						 *		--LGP 960912
						 */
						owner->InvalidateTotalRowsInWindow ();

010829	DEFER	LGP			DEFER for Led 3.0 (very low priority)
960430	DEFER			Reviewed
941130	DEFER			I don't believe these are important, or used by LEC.
941130	REPORT	LGP		Don't support sending EN_CHANGE, EN_UPDATE, EN_ERRSPACE,
		(0103)			EN_MAXTEXT, EN_HSCROLL messages for Windows.

010829	DEFER	LGP			DEFER for Led 3.0 (very low priority - may do portable full UNICODE version)
000617	NOTE			Define no longer exists - now its calss TextBreaks_System
960430	DEFER			Reviewed
950126	DEFER			Not entirely sure one is possible.
950126	REPORT	LGP		There is no qUseSystemWordBreakRoutine for qWindows.
		(0129)

010829	DEFER	LGP			DEFER for Led 3.0 (very low priority)
000617	NOTE			Define no longer exists - now its calss TextBreaks_System
960430	DEFER			Reviewed
950126	DEFER			We won't be using this anyhow - I'll be using my own
						portable implementation - at least for LEC.
950126	REPORT	LGP		qUseSystemWordBreakRoutine for the Mac is slightly
		(0130)			broken - we currently use isspace() on the first
						char to tell if we got a REAL word - or a space word.

010829	DEFER	LGP			DEFER for Led 3.0
010829	NOTE	LGP			Low priority. Commneted details in the code referring to this SPR.
						We DO eliminate zero-length blocks - and thats whats most important. The
						coalescing part is much less important.
960430	DEFER			Reviewed
950601	DEFER			1.0RC1
941019	REPORT	LGP		ChunkedArray implementation doesn't coalesce adjacent blocks.
		(0012)			Only splits.

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
950601	DEFER			1.0RC1
941201	REPORT	LGP		Redo the markers for ChunkedArray as being position relative to parent.
		(0114)			This will save quite a bit of time on update of all the markers
						as the user types (though it will cost in lookup of marker absolute
						value).
						Most of the infrastructure work is done for this. Based on #0014.

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
950601	DEFER			1.0RC1
950129	REPORT	LGP		Condider not using BlockAllocation in cases where the blocks
		(0134)			are fairly large (like current partiionmarkers. Do experimentation,
						and see how much speed/size difference it makes.

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
950601	DEFER			1.0RC1
941201	REPORT	LGP		Work on HackMarker code to make balancing better, speed better
		(0115)			and perhaps memory utilization. Based on #0013.
950417	WORKING			Still don't gaurantee balance, but did some improvements to
						this code (see SPR #0202 - though that is only a part of what
						I did).

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
950601	DEFER			1.0RC1
950418	REPORT			The way Led updates markers is inadvisable. First it handles the
		(0212)			deletion and then the insert (for a replace). This has the effect of
						first collapsing markers to zero width, and then not re-inflating them
						if the operation was really a replacement. A simple fix for this
						is to handle insertion first, then deletion.
950419	Working			This rationale is WRONG. Insert then delete does NOT fix this
						because we then must insert on the RIGHT-EDGE of the from/to in
						Replace(). I'm not 100% clear on what is right/wrong definition here
						anyhow. For now, just leave things as they are. Perhaps discuss
						with others (EditorReview mailing list?).

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
950603	DEFER	LGP
950603	REPORT	LGP		Consider emacs-style 'gap' concept for keeping marker list values
		(0318)			up-to-date instead of hierarchical. Any markers past 'gap' get
						single global var added in. So when typing at one spot, we can accumulate
						many changes. And when that spot moves, we force updating all markers
						after all at once. Unclear if this is better or worse than heirarchical
						idea.

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
950603	DEFER	LGP
950603	REPORT	LGP		Led should support partially wrapped lines. It should adjust computations
		(0316)			to only wrap as much as is needed of a line, and we should only invalidate
						as much as needed when typing. Since word-wrap is now so fast, this really
						mostly matters for bizare cases like 1Meg long paragrpaphs etc. But it can help
						in lesser cases too, and should be done.

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
960423	Note			Could use this as part of changes to save space in MRPM::ParitionMarker.
						But would need to find other flag variable for cache-valid.
950519	DEFER
950519	REPORT			Then make GetPixelHeight() a loop adding up row heights.
		(0268)			AFTER THIS - GO AND DO SPR#0258 (do 0267 first)

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
960430	DEFER
951105	REPORT	LGP		Improve RFC MIME detection code so if there is crap
						(like from/to headers) in front of the text, we still
						detect as MIME (just do a Scan rather than LookFor for the
						content marker first!!!)

010829	DEFER	LGP			DEFER for Led 3.0
960917	NOTE			We DO support qAllowRowsThatAreLongerThan255 for RowHeight_
						Don't yet support packed RowStart_ ONLY because we keep array of starts,
						not nChars in row.
						If we switch to that - then we can use unsigned char for this
						as with the rowHeight guy!!!
960430	DEFER			Reviewed
950519	DEFER
950519	REPORT			Fix qAllowRowsThatAreLongerThan255 for RowStarts
		(0258)

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
960430	DEFER
960430	REPORT	LGP		ChunckedArrayTextStore::PossiblyAddHackMarkers () can leak memory
						and maybe worse when adding hack-markers fails.

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
950601	DEFER			1.0RC1
950417	REPORT	LGP		Doing lots of pastes til you run out of memory produces
		(0209)			assertion errors - and in nodebug version produces funny
						boxes in text where newlines are supposed to be.
						
						Really we must to preflighting before inserting the text.
						This is a son of #0070, and others. But we no longer get
						crash. So this might be deferable. Anyhow, because of
						#0202 the crash is gone, and it should be MUCH easier todo
						the preflighting.

010829	DEFER	LGP			DEFER for Led 3.0
960430	DEFER			Reviewed
960430	NOTE			To be clear, this just refers to how to deal with WinSDK routines
						like WM_SETSEL and WM_SETTEXT.
950601	DEFER			1.0RC1
941019	REPORT	LGP		Unclear how to deal with CRLF issue. At least we need to
		(0018)			implement a PC version of NLToFromNative(). But then it
						would be too costly to use this all the time for all
						calls having todo with coordinates. But perhaps I must.
						I think I will define all Windows/MFC API routines as
						using the funny coords- and all MY API routines as using
						simple LF notation. Ask LEC... Maybe best to have a #define
						control var for how we interpret the characters (LF vs CRLF)
						in windows compatability routines.

010829	DEFER	LGP			DEFER for Led 3.0
960502	DEFER			Too late to worry about this
960502	REPORT	LGP		Find some way to flush out and return to OS wholly unused block-allocation
						structures when low on memory. For each major BLOCK, keep a linked list of
						these so I can reconstruct start addresses. Then sweep freepool, and see if
						any of the blocks has been WHOLLY freed, and if so, return the ENTIRE block
						to the common memory pool (which might eventually go back to the OS).
						This CAN happen sometimes, like if you open and then close a large doc, we
						probably DO get a chance to return whole huge chunks like this.
						Biggest trouble is just WHEN todo this. One posability is just when we
						get the lowmem/purgemem application call. But at that time, there is more chance of
						fragmenation of that freepool, so less likely large blocks can be found. Somewhat
						more likely after close of large document or delete of huge amount of text. But
						that may take too long to try then. Will need to experiment...

010829	DEFER	LGP			DEFER for Led 3.0
960503	DEFER	LGP		Way too much work at this point, and not widely supported by competitors.
960503	REPORT	LGP		The caret and the shape of the selection region should reflect a tilt
						when editing italic text. Apples TE doesn't do this. Microslops WordPad
						doesn't do this. WASTE/Style doesn't do this. So I don't feel TOO bad.
						But MSWord 7.0 on windows (at least) does. And it makes editing italic
						text much easier.

010829	DEFER	LGP			DEFER for Led 3.0 (maybe even close soon - since may not make sense with Carbon)
960518	DEFER	LGP		Release Note and Defer.
960518	REPORT	LGP		LedIt! Mac doesn't use temporary memory for Cut/Paste.
						Even though the handle I alloc and use for
						GetScrap() is a TempMemHandle, GetScrap () still returns
						memFullErr when my app partition size is set low, and
						I copy a large amount of text. For PutScrap () - there
						is no explicit handle anyplace. But I have the same
						problem. PutScrap () of a large entity fails with memFullErr
						when there is plenty of TmpMem, but little App partition mem.


// For gnuemacs:
// Local Variables: ***
// mode:text ***
// tab-width:4 ***
// End: ***
