/* Copyright(c) Lewis Gordon Pringle, Jr. 1994-1998.  All rights reserved */

/*
 * $Header: /cygdrive/k/CVSRoot/(Unsupported)/LedItPP/Headers/PreComp.pch,v 2.15 1999/12/15 01:12:07 lewis Exp $
 *
 * Description:
 *
 *
 * TODO:
 *
 * Notes:
 *
 *
 * Changes:
 *	$Log: PreComp.pch,v $
 *	Revision 2.15  1999/12/15 01:12:07  lewis
 *	*** empty log message ***
 *	
 *	Revision 2.14  1999/12/14 21:54:06  lewis
 *	#define qHeavyDebugging 1
 *	
 *	Revision 2.13  1999/07/13 14:15:17  lewis
 *	now debugmem check code works better, and can work with tmp-mem, so leave tmpmem to default on, even for DEBUG mode
 *	
 *	Revision 2.12  1998/07/24 01:31:37  lewis
 *	*** empty log message ***
 *	
 *	Revision 2.11  1997/12/24  04:41:36  lewis
 *	*** empty log message ***
 *
 *	Revision 2.10  1997/07/27  16:01:58  lewis
 *	<===== Led 2.2 Released =====>
 *
 *	Revision 2.9  1997/07/23  23:12:16  lewis
 *	*** empty log message ***
 *
 *	Revision 2.8  1997/06/18  03:30:20  lewis
 *	Cleanup PreComp for CWPro1
 *
 *	Revision 2.7  1997/03/04  20:35:56  lewis
 *	*** empty log message ***
 *
 *	Revision 2.6  1996/12/13  18:11:04  lewis
 *	<========== Led 21 Released ==========>
 *
 *	Revision 2.5  1996/09/30  15:08:19  lewis
 *	Revised DEBUG_NEW support in Precomp.
 *
 *	Revision 2.4  1996/09/01  15:45:23  lewis
 *	***Led 20 Released***
 *
 *	Revision 2.3  1996/07/03  01:38:38  lewis
 *	Lose qIncludeAWINotebookHacks stuff. Now separate.
 *	Updatge STRICT_ for CW9.
 *
 *	Revision 2.2  1996/06/01  02:53:25  lewis
 *	added OLDROUTINENAMES/STRICT_ defines.
 *
 *	Revision 2.1  1996/03/16  19:17:20  lewis
 *	Added qUseMacTmpMemForAllocs define
 *
 *	Revision 2.0  1996/02/26  23:29:06  lewis
 *	*** empty log message ***
 *
 *
 *
 *
 *
 */


// retail ability to build no-style-run version of Led
#define	qStyledTextEdit	1

// Led specific defines
//#define	qLed_CharacterSet		qASCII_CharacterSet
//#define	qLed_CharacterSet		qSJIS_CharacterSet



#ifdef	rez
	#define	qRez		1
#else
	#define	qRez		0
#endif


// You can manually specify qDebug flag, but I now let it default to the
// 'dont_inline' flag since that almost always tracks if we are doing debug
// builds or not... That way, I don't have to change the precomp file...
#ifndef	qDebug
	#if		qRez
		#define	qDebug	0
	#else
		#if		__option (dont_inline)
			#define	qDebug	1
		#else
			#define	qDebug	0
		#endif
	#endif
#endif

// ignored if qDebug=0, and defaults OFF (so we must turn on) cuz most customers don't want these
// warnings
#define	qHeavyDebugging	1


#ifndef	DEBUG_NEW
	#if		qDebug
		//#define DEBUG_NEW	DEBUG_NEW_BASIC	DEBUG_NEW_LEAKS
		//#define DEBUG_NEW	1		//	DEBUG_NEW_BASIC
		#define DEBUG_NEW	2		//	DEBUG_NEW_LEAKS
	#else
		#define DEBUG_NEW	0
	#endif
#endif





// Define some attributes for Universal Headers. Helpful so we can make sure we will
// work with Copeland, etc...
#define	OLDROUTINENAMES		0
#define	OLDROUTINELOCATIONS	0
#define	CGLUESUPPORTED		0
#define	SystemSevenOrLater	1



// Predefine a few symbols for CW12 (PowerPlant 1.7) to help assure we aren't using obsolete PP features.
// Only needed for this CW release. Lose defines later.
// LGP 970612
#define PP_Obsolete_Constants			0
#define PP_Obsolete_Stream_Creators		0
#define PP_Obsolete_Array_API			0



#define qMacOS 		1
#define	qWindows	0

#if		qDebug
	#undef	NDEBUG
#else
	#define NDEBUG	1
#endif


#if		qDebug
	#define Debug_Throw
	#define Debug_Signal
#endif






#if		!qRez

	// Needed to assure __PowerPlant__ define is defined for Led.h
	#include	"PP_Prefix.h"

	// use Metrowerks’ standard precompiled header file
	//#include <PP_ClassHeaders.cp>	

#endif
