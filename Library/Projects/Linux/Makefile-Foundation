include ../Configuration.mk
include	../SharedMakeVariables.mk
include	../SharedBuildRules.mk

RelPathToStroikaDevRoot	=	../../../../
SrcDir					=	$(RelPathToStroikaDevRoot)Library/Sources/Stroika/Foundation/


VPATH		=	$(SrcDir) $(StroikaLibDir)

SubDirs=				\
	Cache				\
	Characters			\
	Common				\
	Configuration		\
	Containers			\
	Cryptography		\
	Database			\
	DataExchangeFormat	\
	Debug				\
	Execution			\
	IO					\
	Linguistics			\
	Math				\
	Memory				\
	Streams				\
	Time				\
	Traversal			\


ALL_OBJS := $(foreach dir, $(SubDirs), $(addprefix "$(dir)/", $(shell make --directory $(dir) -s list-objs)))


all-objs:
	@echo $(ALL_OBJS)


# In order to get the make dependency rule for $(StroikaFoundationLib) to work for all objs,
# and yet to not re-run the make subdir objs rule too many times, this was the best trick
# I could come up with to just run the submakefiles once...
ALL_OBJS_DONE_HACK=0
$(ALL_OBJS):
	@if [ $(ALL_OBJS_DONE_HACK) -eq 0 ]; then\
	    echo "Building Stroika Foundation Objs...";\
	    (for i in $(SubDirs); do $(MAKE) --directory $$i --no-print-directory -s all; done;);\
	fi
	@$(eval ALL_OBJS_DONE_HACK := 1)


$(StroikaFoundationLib):	$(ALL_OBJS)
	@mkdir -p $(StroikaLibDir)
	@echo Creating $(StroikaFoundationLib)...
	@rm -f $(StroikaFoundationLib)
	@$(AR) cq $(StroikaFoundationLib) $(ALL_OBJS)
	@$(RANLIB) $(StroikaFoundationLib)


all:	$(StroikaFoundationLib)


clean::
	@for i in $(SubDirs);\
	do\
	    $(MAKE) --directory $$i --no-print-directory -s clean;\
	done


clobber::
	@rm -f $(StroikaFoundationLib)


Build:	all


