#!/bin/bash
#
# EXAMPLES:
#		./ScriptsLib/GetConfigurations
#		./ScriptsLib/GetConfigurations --config-tags "Windows"
#		./ScriptsLib/GetConfigurations --config-tags "Windows 32"
#
get_script_dir () {
     #https://www.ostricher.com/2014/10/the-right-way-to-get-the-directory-of-a-bash-script/
     SOURCE="${BASH_SOURCE[0]}"
     # While $SOURCE is a symlink, resolve it
     while [ -h "$SOURCE" ]; do
          DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
          SOURCE="$( readlink "$SOURCE" )"
          # If $SOURCE was a relative symlink (so no "/" as prefix, need to resolve it relative to the symlink base directory
          [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
     done
     DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
     echo "$DIR"
}
MY_PATH=$(get_script_dir)

CONFIG_TAG_RESTRICTION=""
while [[ $# -gt 0 ]]; do
  case "$1" in
    --config-tags)
	  if [[ $# -eq 1 ]]; then
		echo Expected another argument
		exit 1;
	  fi
      CONFIG_TAG_RESTRICTION=$2
      shift 2
      ;;
    --help)
      echo "GetConfigurations returns all configurations; GetConfigurations --config-tags 'abc def' returns all configurations with BOTH the abc and def tags"
      exit 0
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
  esac
done

SORT=/usr/bin/sort
if [ ! -e $SORT ]; then
	SORT=sort
fi
#NB: need full path top find cuz of winDoze
if [ -e "$MY_PATH/../ConfigurationFiles/" ] ; then
	#/usr/bin/find "$MY_PATH/../ConfigurationFiles/" -mindepth 1 -maxdepth 1 -type f -print0 | xargs -0 -I {} basename "{}" .xml | tr '\n' ' '
	RAW_CONFIGS=`/usr/bin/find "$MY_PATH/../ConfigurationFiles/" -type f -exec basename \{} .xml \; | $SORT | tr '\n' ' '`
fi
if [ "$CONFIG_TAG_RESTRICTION" == "" ] ; then
	echo $RAW_CONFIGS
else
	NEW_CONFIGS=""
	for c in $RAW_CONFIGS ; do
		ITS_TAGS=`$MY_PATH/../ScriptsLib/GetConfigurationParameter $c ConfigTags`
		#echo c=$c, and itsTAGS = $ITS_TAGS
		allMatch=1
		for t in $CONFIG_TAG_RESTRICTION ; do
			if [[ $ITS_TAGS = *"$t"* ]]; then
				true;
			else
				allMatch=0
			fi
		done
		if [ $allMatch -eq 1 ]; then
			NEW_CONFIGS="$NEW_CONFIGS $c"
		fi
	done
	echo $NEW_CONFIGS
fi
