#!/bin/bash
#       GetClangVersion CC [-i]
#       Outputs string with version string (e.g.) and exit 0
#       If argument compiler NOT clang, outputs "" and exit non-zero
#       -i means return integer version#
CC=$1
INTEGERONLY=0
for i in "$@" ; do
    if [[ $i == "-i" ]] ; then
        INTEGERONLY=1
        break
    fi
done

### @todo better than this check is to CC --version | grep clang
if [[ "$CC" =~ clang.* ]]; then
    true;
elif [[ "$CC" =~ clang\+\+.* ]]; then
    true;
else
    exit 1;
fi
VER_=`($CC --version 2>/dev/null) | head -1 | awk '{print \$4;}'`
if [ "$VER_" == "" ] ; then
    exit 1;
fi
if [ $INTEGERONLY ] ; then
    echo $VER_ | awk  '{printf("%d\n", $1)}'
else
    echo $VER_
fi
exit 0

# sub     GetClangVersion_
# {
# 	my $x = trim(shift(@_));
# 	my $firstLine = trim (`($x --version 2>/dev/null) | head -1`);
# 	if (not defined($firstLine)) {
# 		return 0;
# 	}
# 	no warnings 'numeric';
# 	if (index($firstLine, "Apple ") == 0) {
# 		my $ver = trim(`echo "$firstLine" | awk '{print \$4}'`);
# 		$ver = $ver * 1;
# 		return $ver;
# 	}
# 	else {
# 		my $ver = trim (`echo "$firstLine" |  sed 's/.*LLVM/x/' | sed 's/)//' |  awk '{print \$3;}'`);
# 		# Starting in ubuntu 20.10, they switched to the format used by crapple
# 		if ($ver == "version") {
# 			$ver = trim(`echo "$firstLine" | awk '{print \$4}'`);
# 		}
# 		$ver = $ver * 1;
# 		return $ver;
# 	}
# }
