#!/bin/bash

#
# Call from $StroikaRoot
#
#	Examples:
#		ScriptsLib/RunPerformanceRegressionTests
#		EXE=Builds/my-gcc-6.1.0-release-c++17/Tests/Test49 ScriptsLib/RunPerformanceRegressionTests
#		EXE=Builds/Release/Tests/Test49 USE_TEST_BASENAME=FRED ScriptsLib/RunPerformanceRegressionTests
#		MULTIPLIER=1 ScriptsLib/RunPerformanceRegressionTests
#
VER=`ScriptsLib/ExtractVersionInformation STROIKA_VERSION FullVersionString`

: "${USE_TEST_BASENAME:=UNKNOWN}"
: "${PERF_TEST:=Test52}"

MULTIPLIER=${MULTIPLIER-15}
if [ "$(uname -s)" == "Darwin" ] ; then
    EXE=${EXE-"Builds/Release/Tests/$PERF_TEST"}
	if [ "$USE_TEST_BASENAME" == "UNKNOWN" ] ; then USE_TEST_BASENAME="MacOS-x86-XCode"; fi
    CMDRUN_PREFIX="nice -10 "
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ] ; then
    # Do something under GNU/Linux platform
    EXE=${EXE-"Builds/g++-optimized/Tests/$PERF_TEST"}
	if [ ! -e "$EXE" ] ; then EXE="Builds/Release/Tests/$PERF_TEST"; fi
	if [ ! -e "$EXE" ] ; then EXE="Builds/g++-8-release-c++17/Tests/$PERF_TEST"; fi
	if [ ! -e "$EXE" ] ; then EXE="Builds/g++-10-release-c++17/Tests/$PERF_TEST"; fi
	if [ "$USE_TEST_BASENAME" == "UNKNOWN" ] ; then USE_TEST_BASENAME="linux-g++-7.3-x64"; fi
    CMDRUN_PREFIX="nice -10 taskset -c 0 "
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ] ; then
    # Do something under Windows NT platform
    EXE=${EXE-"Builds/Release-x86/Tests/$PERF_TEST"}
	if [ "$USE_TEST_BASENAME" == "UNKNOWN" ] ; then USE_TEST_BASENAME="Windows-x86-vs2k19"; fi
    CMDRUN_PREFIX=""
elif [ "$(expr substr $(uname -s) 1 6)" == "CYGWIN" ] ; then
    # Do something under Windows NT platform
    EXE=${EXE-"Builds/Release-x86/Tests/$PERF_TEST"}
	if [ "$USE_TEST_BASENAME" == "UNKNOWN" ] ; then USE_TEST_BASENAME="Windows-x86-vs2k19"; fi
    CMDRUN_PREFIX=""
else
    echo "WARNING - unrecognized OS"
fi

if [ ! -e "$EXE" ] ; then echo "Warning: $EXE not found"; fi

echo -n "$CMDRUN_PREFIX" "$EXE --x $MULTIPLIER --show > Tests/HistoricalPerformanceRegressionTestResults/PerformanceDump-$USE_TEST_BASENAME-$VER.txt ... "
$CMDRUN_PREFIX $EXE --x $MULTIPLIER --show > Tests/HistoricalPerformanceRegressionTestResults/PerformanceDump-$USE_TEST_BASENAME-$VER.txt
echo "done"
