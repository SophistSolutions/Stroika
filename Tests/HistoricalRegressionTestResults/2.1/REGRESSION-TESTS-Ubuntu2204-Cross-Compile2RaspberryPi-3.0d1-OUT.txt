)))- Resetting all configurations to standard regression test set (output to Tests/HistoricalRegressionTestResults/REGRESSION-TESTS-Ubuntu2204-Cross-Compile2RaspberryPi-3.0d1-OUT.txt) - started at Tue Jul 11 13:39:28 EDT 2023
)))- REGRESSION TEST CONFIGURATION VARIABLES:
)))-     USE_TEST_BASENAME=Ubuntu2204-Cross-Compile2RaspberryPi
)))-     BUILD_CONFIGURATIONS_MAKEFILE_TARGET=raspberrypi-cross-compile-test-configurations
)))-     PARALELLMAKEFLAG=-j10
)))-     CONTINUE=0
)))-     BUILD_EXTRA_COMPILERS_IF_MISSING=0
)))-     RASPBERRYPI_REMOTE_WITH_LOGIN=lewis@192.168.244.52
)))-     ARM_TEST_MACHINE_AVAIL=1
)))-     DETECTED_HOST_OS=Linux
)))-     uname -a=Linux Ubuntu2204-Cross-Compile2RaspberryPi-regtest 5.15.0-76-generic #83-Ubuntu SMP Thu Jun 15 19:16:32 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux
)))-     GIT COMMIT: v2.1.13-1930-g7e80577c0d
)))-     DEBIAN-STYLE-RELEASE: Description:	Ubuntu 22.04.2 LTS
)))-     /etc/os-release: PRETTY_NAME="Ubuntu 22.04.2 LTS"
NAME="Ubuntu"
VERSION_ID="22.04"
VERSION="22.04.2 LTS (Jammy Jellyfish)"
VERSION_CODENAME=jammy
ID=ubuntu
ID_LIKE=debian
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
UBUNTU_CODENAME=jammy

Making raspberrypi-cross-compile-test-configurations:
   Skipping configuration raspberrypi-g++-8-release-sanitize_address because compiler arm-linux-gnueabihf-g++-8 not present and configuration invoked with --only-if-has-compiler
   Skipping configuration raspberrypi-g++-8-debug-sanitize_undefined because compiler arm-linux-gnueabihf-g++-8 not present and configuration invoked with --only-if-has-compiler
   Skipping configuration raspberrypi-g++-10-release-sanitize_address because compiler arm-linux-gnueabihf-g++-10 not present and configuration invoked with --only-if-has-compiler
   Skipping configuration raspberrypi-g++-10-debug-sanitize_undefined because compiler arm-linux-gnueabihf-g++-10 not present and configuration invoked with --only-if-has-compiler
   Writing "ConfigurationFiles/raspberrypi-g++-11-release-sanitize_address.xml" ... done
   Writing "ConfigurationFiles/raspberrypi-g++-11-debug-sanitize_undefined.xml" ... done
   Writing "ConfigurationFiles/raspberrypi-g++-12-release-sanitize_address.xml" ... done
   Writing "ConfigurationFiles/raspberrypi-g++-12-debug-sanitize_undefined.xml" ... done


)))- REGRESSION TEST CONFIGURATION VARIABLES(UPDATES):
)))-     NUM_REGTESTS=52
)))-     NUM_CONFIGURATIONS=4
)))-     NUM_PASSES_OF_REGTESTS_RUN=4
)))-     INCLUDE_VALGRIND_MEMCHECK_TESTS=1
)))-     INCLUDE_VALGRIND_HELGRIND_TESTS=1
)))-     INCLUDE_LOCAL_TESTS=0
)))-     INCLUDE_RASPBERRYPI_TESTS=1
)))-     RASPBERRYPICONFIGS=raspberrypi-g++-11-debug-sanitize_undefined raspberrypi-g++-11-release-sanitize_address raspberrypi-g++-12-debug-sanitize_undefined raspberrypi-g++-12-release-sanitize_address
)))-     RASPBERRYPIVALGRINDCONFIGS=
)))-     LOCAL_CONFIGS=
)))-     LOCAL_VALGRIND_CONFIGS=
)))-     INCLUDE_PERFORMANCE_TESTS=0



)))- Building configurations (4):
   raspberrypi-g++-11-debug-sanitize_undefined
   raspberrypi-g++-11-release-sanitize_address
   raspberrypi-g++-12-debug-sanitize_undefined
   raspberrypi-g++-12-release-sanitize_address


)))- Configurations DETAILS (4):
   raspberrypi-g++-11-debug-sanitize_undefined:
      <!--This file autogenerated by the configure command: see Configure-Command-Line, modify it, and re-run-->
      
      <Configuration>
          <Configure-Command-Line>configure raspberrypi-g++-11-debug-sanitize_undefined --config-tag Unix --config-tag raspberrypi --apply-default-debug-flags --only-if-has-compiler --trace2file enable --sanitize none,undefined --compiler-driver arm-linux-gnueabihf-g++-11 --cross-compiling true</Configure-Command-Line>
          <ProjectPlatformSubdir>Unix</ProjectPlatformSubdir>
          <TARGET_PLATFORMS>Linux POSIX</TARGET_PLATFORMS>
          <ARCH>armhf</ARCH>
          <ConfigTags>Unix raspberrypi</ConfigTags>
          <BuildByDefault>always</BuildByDefault>
          <AS>arm-linux-gnueabihf-as</AS>
          <CMAKE>cmake</CMAKE>
          <CC>arm-linux-gnueabihf-gcc-11</CC>
          <CXX>arm-linux-gnueabihf-g++-11</CXX>
          <ExtraMakeDefines>
          </ExtraMakeDefines>
          <PkgConfigLinkLineAppendages>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs openssl</PkgConfigLinkLineAppendage>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs libcurl</PkgConfigLinkLineAppendage>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs zlib</PkgConfigLinkLineAppendage>
          </PkgConfigLinkLineAppendages>
          <ENABLE_ASSERTIONS>1</ENABLE_ASSERTIONS>
          <qFeatureFlag_StrawberryPerl>no</qFeatureFlag_StrawberryPerl>
          <qFeatureFlag_boost>use</qFeatureFlag_boost>
          <qFeatureFlag_LibCurl>use</qFeatureFlag_LibCurl>
          <qFeatureFlag_OpenSSL>use</qFeatureFlag_OpenSSL>
          <qFeatureFlag_WinHTTP>no</qFeatureFlag_WinHTTP>
          <qFeatureFlag_Xerces>use</qFeatureFlag_Xerces>
          <qFeatureFlag_ZLib>use</qFeatureFlag_ZLib>
          <qFeatureFlag_sqlite>use</qFeatureFlag_sqlite>
          <qFeatureFlag_LZMA>use</qFeatureFlag_LZMA>
          <qFeatureFlag_WIX>no</qFeatureFlag_WIX>
          <CPPFLAGS>-I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -D_GLIBCXX_DEBUG -DqDebug=1 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1</CPPFLAGS>
          <CFLAGS>-I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -fvisibility=hidden -g -D_GLIBCXX_DEBUG -DqDebug=1 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1  -fsanitize=undefined</CFLAGS>
          <CXXFLAGS>--std=c++20 -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -fvisibility=hidden -g -D_GLIBCXX_DEBUG -DqDebug=1 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1  -fsanitize=undefined</CXXFLAGS>
          <SanitizerFlags>undefined </SanitizerFlags>
          <INCLUDES_PATH>/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/include/:/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/:/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/</INCLUDES_PATH>
          <CrossCompiling>true</CrossCompiling>
          <IncludeDebugSymbolsInLibraries>1</IncludeDebugSymbolsInLibraries>
          <IncludeDebugSymbolsInExecutables>1</IncludeDebugSymbolsInExecutables>
          <TOOLS_PATH_ADDITIONS></TOOLS_PATH_ADDITIONS>
          <LIBS_PATH>/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/lib/</LIBS_PATH>
          <LIB_DEPENDENCIES>/usr/lib/gcc-cross/arm-linux-gnueabihf/11/libstdc++.a -lboost_filesystem -lboost_system -lboost_thread -lboost_chrono -lboost_json -lxerces-c -llzma -lsqlite -lpthread -lm -lrt </LIB_DEPENDENCIES>
          <EXTRA_PREFIX_LINKER_ARGS> -rdynamic -fsanitize=undefined -static-libubsan -static-libstdc++ -static-libgcc --std=c++20 -g</EXTRA_PREFIX_LINKER_ARGS>
          <EXTRA_SUFFIX_LINKER_ARGS></EXTRA_SUFFIX_LINKER_ARGS>
          <AR>arm-linux-gnueabihf-gcc-ar-11</AR>
          <LIBTOOL></LIBTOOL>
          <RANLIB>arm-linux-gnueabihf-gcc-ranlib-11</RANLIB>
          <Linker>arm-linux-gnueabihf-g++-11</Linker>
          <STRIP>arm-linux-gnueabihf-strip</STRIP>
          <RUN_PREFIX></RUN_PREFIX>
          <qCompiler_SanitizerDoubleLockWithConditionVariables_Buggy>1</qCompiler_SanitizerDoubleLockWithConditionVariables_Buggy>
          <qCompiler_HasNoMisleadingIndentation_Flag>1</qCompiler_HasNoMisleadingIndentation_Flag>
      </Configuration>

   raspberrypi-g++-11-release-sanitize_address:
      <!--This file autogenerated by the configure command: see Configure-Command-Line, modify it, and re-run-->
      
      <Configuration>
          <Configure-Command-Line>configure raspberrypi-g++-11-release-sanitize_address --config-tag Unix --config-tag raspberrypi --apply-default-release-flags --only-if-has-compiler --trace2file enable --compiler-driver arm-linux-gnueabihf-g++-11 --sanitize none,address --cross-compiling true</Configure-Command-Line>
          <ProjectPlatformSubdir>Unix</ProjectPlatformSubdir>
          <TARGET_PLATFORMS>Linux POSIX</TARGET_PLATFORMS>
          <ARCH>armhf</ARCH>
          <ConfigTags>Unix raspberrypi</ConfigTags>
          <BuildByDefault>always</BuildByDefault>
          <AS>arm-linux-gnueabihf-as</AS>
          <CMAKE>cmake</CMAKE>
          <CC>arm-linux-gnueabihf-gcc-11</CC>
          <CXX>arm-linux-gnueabihf-g++-11</CXX>
          <ExtraMakeDefines>
          </ExtraMakeDefines>
          <PkgConfigLinkLineAppendages>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs openssl</PkgConfigLinkLineAppendage>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs libcurl</PkgConfigLinkLineAppendage>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs zlib</PkgConfigLinkLineAppendage>
          </PkgConfigLinkLineAppendages>
          <ENABLE_ASSERTIONS>0</ENABLE_ASSERTIONS>
          <qFeatureFlag_StrawberryPerl>no</qFeatureFlag_StrawberryPerl>
          <qFeatureFlag_boost>use</qFeatureFlag_boost>
          <qFeatureFlag_LibCurl>use</qFeatureFlag_LibCurl>
          <qFeatureFlag_OpenSSL>use</qFeatureFlag_OpenSSL>
          <qFeatureFlag_WinHTTP>no</qFeatureFlag_WinHTTP>
          <qFeatureFlag_Xerces>use</qFeatureFlag_Xerces>
          <qFeatureFlag_ZLib>use</qFeatureFlag_ZLib>
          <qFeatureFlag_sqlite>use</qFeatureFlag_sqlite>
          <qFeatureFlag_LZMA>use</qFeatureFlag_LZMA>
          <qFeatureFlag_WIX>no</qFeatureFlag_WIX>
          <CPPFLAGS>-I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -DqDebug=0 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1</CPPFLAGS>
          <CFLAGS>-I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -O3 -fvisibility=hidden -g -DqDebug=0 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1 -flto  -fsanitize=address</CFLAGS>
          <CXXFLAGS>--std=c++20 -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -O3 -fvisibility=hidden -g -DqDebug=0 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1 -flto  -fsanitize=address</CXXFLAGS>
          <SanitizerFlags>address </SanitizerFlags>
          <INCLUDES_PATH>/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/include/:/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/:/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/</INCLUDES_PATH>
          <CrossCompiling>true</CrossCompiling>
          <IncludeDebugSymbolsInLibraries>1</IncludeDebugSymbolsInLibraries>
          <IncludeDebugSymbolsInExecutables>0</IncludeDebugSymbolsInExecutables>
          <TOOLS_PATH_ADDITIONS></TOOLS_PATH_ADDITIONS>
          <LIBS_PATH>/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/lib/</LIBS_PATH>
          <LIB_DEPENDENCIES>/usr/lib/gcc-cross/arm-linux-gnueabihf/11/libstdc++.a -lboost_filesystem -lboost_system -lboost_thread -lboost_chrono -lboost_json -lxerces-c -llzma -lsqlite -lpthread -lm -lrt </LIB_DEPENDENCIES>
          <EXTRA_PREFIX_LINKER_ARGS> -flto -fsanitize=address -static-libasan -static-libstdc++ -static-libgcc --std=c++20</EXTRA_PREFIX_LINKER_ARGS>
          <EXTRA_SUFFIX_LINKER_ARGS></EXTRA_SUFFIX_LINKER_ARGS>
          <AR>arm-linux-gnueabihf-gcc-ar-11</AR>
          <LIBTOOL></LIBTOOL>
          <RANLIB>arm-linux-gnueabihf-gcc-ranlib-11</RANLIB>
          <Linker>arm-linux-gnueabihf-g++-11</Linker>
          <STRIP>arm-linux-gnueabihf-strip</STRIP>
          <RUN_PREFIX></RUN_PREFIX>
          <qCompiler_SanitizerDoubleLockWithConditionVariables_Buggy>1</qCompiler_SanitizerDoubleLockWithConditionVariables_Buggy>
          <qCompiler_HasNoMisleadingIndentation_Flag>1</qCompiler_HasNoMisleadingIndentation_Flag>
      </Configuration>

   raspberrypi-g++-12-debug-sanitize_undefined:
      <!--This file autogenerated by the configure command: see Configure-Command-Line, modify it, and re-run-->
      
      <Configuration>
          <Configure-Command-Line>configure raspberrypi-g++-12-debug-sanitize_undefined --config-tag Unix --config-tag raspberrypi --apply-default-debug-flags --only-if-has-compiler --trace2file enable --sanitize none,undefined --compiler-driver arm-linux-gnueabihf-g++-12 --cross-compiling true</Configure-Command-Line>
          <ProjectPlatformSubdir>Unix</ProjectPlatformSubdir>
          <TARGET_PLATFORMS>Linux POSIX</TARGET_PLATFORMS>
          <ARCH>armhf</ARCH>
          <ConfigTags>Unix raspberrypi</ConfigTags>
          <BuildByDefault>always</BuildByDefault>
          <AS>arm-linux-gnueabihf-as</AS>
          <CMAKE>cmake</CMAKE>
          <CC>arm-linux-gnueabihf-gcc-12</CC>
          <CXX>arm-linux-gnueabihf-g++-12</CXX>
          <ExtraMakeDefines>
          </ExtraMakeDefines>
          <PkgConfigLinkLineAppendages>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs openssl</PkgConfigLinkLineAppendage>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs libcurl</PkgConfigLinkLineAppendage>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs zlib</PkgConfigLinkLineAppendage>
          </PkgConfigLinkLineAppendages>
          <ENABLE_ASSERTIONS>1</ENABLE_ASSERTIONS>
          <qFeatureFlag_StrawberryPerl>no</qFeatureFlag_StrawberryPerl>
          <qFeatureFlag_boost>use</qFeatureFlag_boost>
          <qFeatureFlag_LibCurl>use</qFeatureFlag_LibCurl>
          <qFeatureFlag_OpenSSL>use</qFeatureFlag_OpenSSL>
          <qFeatureFlag_WinHTTP>no</qFeatureFlag_WinHTTP>
          <qFeatureFlag_Xerces>use</qFeatureFlag_Xerces>
          <qFeatureFlag_ZLib>use</qFeatureFlag_ZLib>
          <qFeatureFlag_sqlite>use</qFeatureFlag_sqlite>
          <qFeatureFlag_LZMA>use</qFeatureFlag_LZMA>
          <qFeatureFlag_WIX>no</qFeatureFlag_WIX>
          <CPPFLAGS>-I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -D_GLIBCXX_DEBUG -DqDebug=1 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1</CPPFLAGS>
          <CFLAGS>-I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -fvisibility=hidden -g -D_GLIBCXX_DEBUG -DqDebug=1 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1  -fsanitize=undefined</CFLAGS>
          <CXXFLAGS>--std=c++20 -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -fvisibility=hidden -g -D_GLIBCXX_DEBUG -DqDebug=1 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1  -fsanitize=undefined</CXXFLAGS>
          <SanitizerFlags>undefined </SanitizerFlags>
          <INCLUDES_PATH>/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/include/:/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/:/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/</INCLUDES_PATH>
          <CrossCompiling>true</CrossCompiling>
          <IncludeDebugSymbolsInLibraries>1</IncludeDebugSymbolsInLibraries>
          <IncludeDebugSymbolsInExecutables>1</IncludeDebugSymbolsInExecutables>
          <TOOLS_PATH_ADDITIONS></TOOLS_PATH_ADDITIONS>
          <LIBS_PATH>/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/lib/</LIBS_PATH>
          <LIB_DEPENDENCIES>/usr/lib/gcc-cross/arm-linux-gnueabihf/12/libstdc++.a -lboost_filesystem -lboost_system -lboost_thread -lboost_chrono -lboost_json -lxerces-c -llzma -lsqlite -lpthread -lm -lrt </LIB_DEPENDENCIES>
          <EXTRA_PREFIX_LINKER_ARGS> -rdynamic -fsanitize=undefined -static-libubsan -static-libstdc++ -static-libgcc --std=c++20 -g</EXTRA_PREFIX_LINKER_ARGS>
          <EXTRA_SUFFIX_LINKER_ARGS></EXTRA_SUFFIX_LINKER_ARGS>
          <AR>arm-linux-gnueabihf-gcc-ar-12</AR>
          <LIBTOOL></LIBTOOL>
          <RANLIB>arm-linux-gnueabihf-gcc-ranlib-12</RANLIB>
          <Linker>arm-linux-gnueabihf-g++-12</Linker>
          <STRIP>arm-linux-gnueabihf-strip</STRIP>
          <RUN_PREFIX></RUN_PREFIX>
          <qCompiler_SanitizerDoubleLockWithConditionVariables_Buggy>1</qCompiler_SanitizerDoubleLockWithConditionVariables_Buggy>
          <qCompiler_HasNoMisleadingIndentation_Flag>1</qCompiler_HasNoMisleadingIndentation_Flag>
      </Configuration>

   raspberrypi-g++-12-release-sanitize_address:
      <!--This file autogenerated by the configure command: see Configure-Command-Line, modify it, and re-run-->
      
      <Configuration>
          <Configure-Command-Line>configure raspberrypi-g++-12-release-sanitize_address --config-tag Unix --config-tag raspberrypi --apply-default-release-flags --only-if-has-compiler --trace2file enable --compiler-driver arm-linux-gnueabihf-g++-12 --sanitize none,address --cross-compiling true</Configure-Command-Line>
          <ProjectPlatformSubdir>Unix</ProjectPlatformSubdir>
          <TARGET_PLATFORMS>Linux POSIX</TARGET_PLATFORMS>
          <ARCH>armhf</ARCH>
          <ConfigTags>Unix raspberrypi</ConfigTags>
          <BuildByDefault>always</BuildByDefault>
          <AS>arm-linux-gnueabihf-as</AS>
          <CMAKE>cmake</CMAKE>
          <CC>arm-linux-gnueabihf-gcc-12</CC>
          <CXX>arm-linux-gnueabihf-g++-12</CXX>
          <ExtraMakeDefines>
          </ExtraMakeDefines>
          <PkgConfigLinkLineAppendages>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs openssl</PkgConfigLinkLineAppendage>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs libcurl</PkgConfigLinkLineAppendage>
             <PkgConfigLinkLineAppendage>PKG_CONFIG_PATH=$(shell realpath --canonicalize-missing ${StroikaRoot}Builds/$(CONFIGURATION)/ThirdPartyComponents/lib/pkgconfig) pkg-config --static --libs zlib</PkgConfigLinkLineAppendage>
          </PkgConfigLinkLineAppendages>
          <ENABLE_ASSERTIONS>0</ENABLE_ASSERTIONS>
          <qFeatureFlag_StrawberryPerl>no</qFeatureFlag_StrawberryPerl>
          <qFeatureFlag_boost>use</qFeatureFlag_boost>
          <qFeatureFlag_LibCurl>use</qFeatureFlag_LibCurl>
          <qFeatureFlag_OpenSSL>use</qFeatureFlag_OpenSSL>
          <qFeatureFlag_WinHTTP>no</qFeatureFlag_WinHTTP>
          <qFeatureFlag_Xerces>use</qFeatureFlag_Xerces>
          <qFeatureFlag_ZLib>use</qFeatureFlag_ZLib>
          <qFeatureFlag_sqlite>use</qFeatureFlag_sqlite>
          <qFeatureFlag_LZMA>use</qFeatureFlag_LZMA>
          <qFeatureFlag_WIX>no</qFeatureFlag_WIX>
          <CPPFLAGS>-I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -DqDebug=0 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1</CPPFLAGS>
          <CFLAGS>-I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -O3 -fvisibility=hidden -g -DqDebug=0 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1 -flto  -fsanitize=address</CFLAGS>
          <CXXFLAGS>--std=c++20 -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/include/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/ -I/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ -Wall -Wno-switch -Wno-sign-compare -Wno-unused-function -O3 -fvisibility=hidden -g -DqDebug=0 -DqHasFeature_LibCurl=1 -DqHasFeature_OpenSSL=1 -DqHasFeature_WinHTTP=0 -DqHasFeature_Xerces=1 -DqHasFeature_ZLib=1 -DqHasFeature_sqlite=1 -DqHasFeature_LZMA=1 -DqHasFeature_boost=1 -DqTraceToFile=1 -DqDefaultTracingOn=1 -DqCompiler_SanitizerDoubleLockWithConditionVariables_Buggy=1 -flto  -fsanitize=address</CXXFLAGS>
          <SanitizerFlags>address </SanitizerFlags>
          <INCLUDES_PATH>/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/include/:/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/:/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/</INCLUDES_PATH>
          <CrossCompiling>true</CrossCompiling>
          <IncludeDebugSymbolsInLibraries>1</IncludeDebugSymbolsInLibraries>
          <IncludeDebugSymbolsInExecutables>0</IncludeDebugSymbolsInExecutables>
          <TOOLS_PATH_ADDITIONS></TOOLS_PATH_ADDITIONS>
          <LIBS_PATH>/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Builds/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/lib/</LIBS_PATH>
          <LIB_DEPENDENCIES>/usr/lib/gcc-cross/arm-linux-gnueabihf/12/libstdc++.a -lboost_filesystem -lboost_system -lboost_thread -lboost_chrono -lboost_json -lxerces-c -llzma -lsqlite -lpthread -lm -lrt </LIB_DEPENDENCIES>
          <EXTRA_PREFIX_LINKER_ARGS> -flto -fsanitize=address -static-libasan -static-libstdc++ -static-libgcc --std=c++20</EXTRA_PREFIX_LINKER_ARGS>
          <EXTRA_SUFFIX_LINKER_ARGS></EXTRA_SUFFIX_LINKER_ARGS>
          <AR>arm-linux-gnueabihf-gcc-ar-12</AR>
          <LIBTOOL></LIBTOOL>
          <RANLIB>arm-linux-gnueabihf-gcc-ranlib-12</RANLIB>
          <Linker>arm-linux-gnueabihf-g++-12</Linker>
          <STRIP>arm-linux-gnueabihf-strip</STRIP>
          <RUN_PREFIX></RUN_PREFIX>
          <qCompiler_SanitizerDoubleLockWithConditionVariables_Buggy>1</qCompiler_SanitizerDoubleLockWithConditionVariables_Buggy>
          <qCompiler_HasNoMisleadingIndentation_Flag>1</qCompiler_HasNoMisleadingIndentation_Flag>
      </Configuration>



Make clobber
Stroika Clobber:
   Stroika/ThirdPartyComponents Clobber ... done
   Stroika Clobber {raspberrypi-g++-11-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents Clobber {raspberrypi-g++-11-debug-sanitize_undefined} ... done
      Stroika/Library Clobber {raspberrypi-g++-11-debug-sanitize_undefined} ... done
      Stroika/Samples Clobber {raspberrypi-g++-11-debug-sanitize_undefined} ... done
   Stroika Clobber {raspberrypi-g++-11-release-sanitize_address}:
      Stroika/ThirdPartyComponents Clobber {raspberrypi-g++-11-release-sanitize_address} ... done
      Stroika/Library Clobber {raspberrypi-g++-11-release-sanitize_address} ... done
      Stroika/Samples Clobber {raspberrypi-g++-11-release-sanitize_address} ... done
   Stroika Clobber {raspberrypi-g++-12-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents Clobber {raspberrypi-g++-12-debug-sanitize_undefined} ... done
      Stroika/Library Clobber {raspberrypi-g++-12-debug-sanitize_undefined} ... done
      Stroika/Samples Clobber {raspberrypi-g++-12-debug-sanitize_undefined} ... done
   Stroika Clobber {raspberrypi-g++-12-release-sanitize_address}:
      Stroika/ThirdPartyComponents Clobber {raspberrypi-g++-12-release-sanitize_address} ... done
      Stroika/Library Clobber {raspberrypi-g++-12-release-sanitize_address} ... done
      Stroika/Samples Clobber {raspberrypi-g++-12-release-sanitize_address} ... done


<Make all>
)))- Make all (-j10)...
Checking for installed tools:
   sed is /usr/bin/sed
   wget is /usr/bin/wget
   perl is /usr/bin/perl
   tar is /usr/bin/tar
   patch is /usr/bin/patch
   tr is /usr/bin/tr
   pkg-config is a tracked alias for /usr/bin/pkg-config
   realpath is /usr/bin/realpath
   jq is /usr/bin/jq
Checking Prerequisites for Stroika:
   Applying configuration {raspberrypi-g++-11-debug-sanitize_undefined}:
      Writing "IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/Configuration.mk" ... done
      Updating configuration raspberrypi-g++-11-debug-sanitize_undefined in ".vscode/c_cpp_properties.json" ... done
      Writing "IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/Stroika-Current-Version.h" ... done
   Applying configuration {raspberrypi-g++-11-release-sanitize_address}:
      Writing "IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/Configuration.mk" ... done
      Updating configuration raspberrypi-g++-11-release-sanitize_address in ".vscode/c_cpp_properties.json" ... done
      Writing "IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/Stroika-Current-Version.h" ... done
   Applying configuration {raspberrypi-g++-12-debug-sanitize_undefined}:
      Writing "IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/Configuration.mk" ... done
      Updating configuration raspberrypi-g++-12-debug-sanitize_undefined in ".vscode/c_cpp_properties.json" ... done
      Writing "IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/Stroika-Current-Version.h" ... done
   Applying configuration {raspberrypi-g++-12-release-sanitize_address}:
      Writing "IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/Configuration.mk" ... done
      Updating configuration raspberrypi-g++-12-release-sanitize_address in ".vscode/c_cpp_properties.json" ... done
      Writing "IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/Stroika-Current-Version.h" ... done
   Checking-Prerequisite Tools Stroika ThirdPartyComponents {raspberrypi-g++-11-debug-sanitize_undefined}:
      curl 8.1.2 - Checking Prerequisite tools ... done
      lzma 1604 - Checking Prerequisite tools ... done
      sqlite 3420000 - Checking Prerequisite tools ... done
      Xerces 3.2.4 - Checking Prerequisite tools ... done
   Checking-Prerequisite Tools Stroika ThirdPartyComponents {raspberrypi-g++-11-release-sanitize_address}:
      curl 8.1.2 - Checking Prerequisite tools ... done
      lzma 1604 - Checking Prerequisite tools ... done
      sqlite 3420000 - Checking Prerequisite tools ... done
      Xerces 3.2.4 - Checking Prerequisite tools ... done
   Checking-Prerequisite Tools Stroika ThirdPartyComponents {raspberrypi-g++-12-debug-sanitize_undefined}:
      curl 8.1.2 - Checking Prerequisite tools ... done
      lzma 1604 - Checking Prerequisite tools ... done
      sqlite 3420000 - Checking Prerequisite tools ... done
      Xerces 3.2.4 - Checking Prerequisite tools ... done
   Checking-Prerequisite Tools Stroika ThirdPartyComponents {raspberrypi-g++-12-release-sanitize_address}:
      curl 8.1.2 - Checking Prerequisite tools ... done
      lzma 1604 - Checking Prerequisite tools ... done
      sqlite 3420000 - Checking Prerequisite tools ... done
      Xerces 3.2.4 - Checking Prerequisite tools ... done
Building Stroika all {raspberrypi-g++-11-debug-sanitize_undefined}:
   Stroika ThirdPartyComponents Build {raspberrypi-g++-11-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents/sqlite Build 3420000 {raspberrypi-g++-11-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents/zlib Build 1.2.13 {raspberrypi-g++-11-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents/lzma Build 1604 {raspberrypi-g++-11-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents/xerces 3.2.4 Build {raspberrypi-g++-11-debug-sanitize_undefined}:
         wget --quiet --no-check-certificate --tries=2 -O ../Origs-Cache/lzma1604.7z http://www.7-zip.org/a/lzma1604.7z ... 
         wget --quiet --no-check-certificate --tries=2 -O ../Origs-Cache/sqlite-amalgamation-3420000.zip https://www.sqlite.org/2023/sqlite-amalgamation-3420000.zip ... 
         wget --quiet --no-check-certificate --tries=2 -O ../Origs-Cache/zlib-1.2.13.tar.gz https://github.com/madler/zlib/archive/v1.2.13.tar.gz ... 
         wget --quiet --no-check-certificate --tries=2 -O ../Origs-Cache/xerces-c-3.2.4.tar.gz http://archive.apache.org/dist/xerces/c/3/sources/xerces-c-3.2.4.tar.gz ... 
         zlib 1.2.13 - Extracting ../Origs-Cache/zlib-1.2.13.tar.gz to CURRENT ... 
         zlib 1.2.13 - Configure (see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/zlib/CONFIGURE-OUT.txt) ...
         sqlite 3420000 - Extracting ../Origs-Cache/sqlite-amalgamation-3420000.zip to CURRENT ... 
         sqlite 3420000 - Extracting ../Origs-Cache/sqlite-amalgamation-3420000.zip to IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/sqlite ... 
         sqlite 3420000 - Build (See IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/sqlite/BUILD-OUT.txt) ...
         lzma 1604 - Extracting ../Origs-Cache/lzma1604.7z to IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/lzma ... 
         lzma 1604 - Build: see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/lzma/BUILD-OUT.txt ...
         Xerces 3.2.4 - Extracting ../Origs-Cache/xerces-c-3.2.4.tar.gz to IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/Xerces ... 
         Xerces 3.2.4 - Patching ... 
         Xerces 3.2.4 - Configuring (See IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/Xerces/CONFIGURE-OUT.txt) ... 
         zlib 1.2.13 - Build (see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/zlib/BUILD-OUT.txt) ...
         lzma 1604 - Extracting ../Origs-Cache/lzma1604.7z to CURRENT ... 
         lzma 1604 - Checking ...  Stroika/ThirdPartyComponents/lzma -    [Succeeded]
         zlib 1.2.13 - Build (see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/zlib/INSTALL-OUT.txt) ...
         zlib 1.2.13 - Checking ...  Stroika/ThirdPartyComponents/zlib -    [Succeeded]
      Stroika/ThirdPartyComponents/boost Build 1_82_0 {raspberrypi-g++-11-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents/OpenSSL Build 3.1.0 {raspberrypi-g++-11-debug-sanitize_undefined}:
         wget --quiet --no-check-certificate --tries=2 -O ../Origs-Cache/openssl-3.1.0.tar.gz http://www.openssl.org/source/openssl-3.1.0.tar.gz ... 
         wget --quiet --no-check-certificate --tries=2 -O ../Origs-Cache/boost_1_82_0.tar.gz https://boostorg.jfrog.io/artifactory/main/release/1.82.0/source/boost_1_82_0.tar.gz ... 
         openssl 3.1.0 - Extracting ../Origs-Cache/openssl-3.1.0.tar.gz to IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/openssl ... 
         openssl 3.1.0 - Configure (see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/openssl/CONFIG-OUT.txt) ...  
         openssl 3.1.0 - Build (see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/openssl/BUILD-OUT.txt)  ... 
         boost 1_82_0 - Extracting ../Origs-Cache/boost_1_82_0.tar.gz to IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/boost ... 
         boost 1_82_0 - Bootstrapping - see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/boost/BOOTSTRAP-OUT.txt ... 
         Xerces 3.2.4 - Compiling (See IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/Xerces/BUILD-OUT.txt) ... 
         sqlite 3420000 - Checking ...  Stroika/ThirdPartyComponents/sqlite -  [Succeeded]
         boost 1_82_0 - Config+Build; see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/boost/ConfigureAndBuild-OUT.txt ...
         openssl 3.1.0 - Installing (see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/openssl/INSTALL-OUT.txt) ... 
         openssl 3.1.0 - Extracting ../Origs-Cache/openssl-3.1.0.tar.gz to CURRENT ... 
         openssl 3.1.0 - Checking ...  Stroika/ThirdPartyComponents/OpenSSL - [Succeeded]
      Stroika/ThirdPartyComponents/libcurl 8.1.2 Build {raspberrypi-g++-11-debug-sanitize_undefined}:
         wget --quiet --no-check-certificate --tries=2 -O ../Origs-Cache/curl-8.1.2.tar.gz https://curl.haxx.se/download/curl-8.1.2.tar.gz ... 
         curl 8.1.2 - Extracting ../Origs-Cache/curl-8.1.2.tar.gz to IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/curl ... 
         curl 8.1.2 - Build configure tools (see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/curl/BUILD-CONF-TOOLS-OUT.txt) ...
         curl 8.1.2 - Configure (see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/curl/CONFIGURE-OUT.txt) ...
         Xerces 3.2.4 - Copying builds (See IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/Xerces/INSTALL.OUT) ... 
         Xerces 3.2.4 - Extracting ../Origs-Cache/xerces-c-3.2.4.tar.gz to CURRENT ... 
         Xerces 3.2.4 - Patching ... 
         Xerces 3.2.4 - Checking ...  Stroika/ThirdPartyComponents/Xerces -  [Succeeded]
         boost 1_82_0 - Patching Builds/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/include/boost/config/user.hpp
         boost 1_82_0 - Extracting ../Origs-Cache/boost_1_82_0.tar.gz to CURRENT ... 
         boost 1_82_0 - Checking ...  Stroika/ThirdPartyComponents/boost -   [Succeeded]
         curl 8.1.2 - Compiling (see IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/ThirdPartyComponents/curl/BUILD-OUT.txt) ...
         curl 8.1.2 - Extracting ../Origs-Cache/curl-8.1.2.tar.gz to CURRENT ... 
         curl 8.1.2 - Checking ...  Stroika/ThirdPartyComponents/curl -    [Succeeded]
   Building Stroika Library {raspberrypi-g++-11-debug-sanitize_undefined}:
      Computing /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/Library/Foundation/cached-list-objs
      Building Stroika Foundation Objs:
         Compiling Library/Sources/Stroika/Foundation/Cache/Statistics.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Common/GUID.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Assertions.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Atom.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CString/Utilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/Locale.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/CRC32.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/DirectoryIterable.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ORM/Schema.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/SemWaitableEvent.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/Jenkins.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/Character.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/AssertExternallySynchronizedMutex.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/SignalBlock.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/BackTrace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/DirectoryIterator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/MD5.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Debugger.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CodeCvt.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/SystemConfiguration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CodePage.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/Users.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/SuperFastHash.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/BadFormatException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Demangle.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Fatal.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/MallocGuard.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/AbortableMutex.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/Disk.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/FloatConversion.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Activity.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ORM/Versioning.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/CheckedConverter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/AES.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/InternetMediaType.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Main.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Trace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/InternetMediaTypeRegistry.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/Format.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/CommandLine.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/Base64.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Linguistics/MessageUtilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/Version.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/RegularExpression.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileInputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/RC4.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/DLLSupport.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Linguistics/Words.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/CipherAlgorithm.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/CIDR.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionlessSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Exceptions.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/OpenSSLCryptoStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionOrientedMasterSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileOutputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/DigestAlgorithm.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ODBC.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileSystem.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/String.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/String2Int.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionOrientedStreamSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/ObjectVariantMapper.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/FeatureNotSupportedInThisVersionException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/DerivedKey.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/OptionsFile.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/SQLite.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileUtils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/IntervalTimer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Statement.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/LibraryContext.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/MemoryMappedFileReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Math/LinearAlgebra/Matrix.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/DNS.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Interface.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from ../Characters/../Debug/AssertExternallySynchronizedMutex.h:13,
                 from ../Characters/StringBuilder.h:9,
                 from IntervalTimer.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:502:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  502 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:502:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  502 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
         Compiling Library/Sources/Stroika/Foundation/Characters/ToString.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/set:41,
                 from /usr/arm-linux-gnueabihf/include/c++/11/set:67,
                 from ../Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../Characters/../Containers/Sequence.h:16,
                 from ../Characters/String.h:15,
                 from ../Characters/StringBuilder.h:12,
                 from IntervalTimer.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator std::__debug::set<_Key, _Cmp, _Allocator>::find(const key_type&) const [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:451:53: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  451 |       { return const_iterator(_Base::find(__x), this); }
      |                                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator std::__debug::set<_Key, _Cmp, _Allocator>::end() const [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:194:49: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  194 |       { return const_iterator(_Base::end(), this); }
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator std::__debug::set<_Key, _Cmp, _Allocator>::find(const _Kt&) const [with _Kt = Stroika::Foundation::Execution::Function<void()>; _Req = void; _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:466:43: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  466 |         { return { _Base::find(__x), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::set<_Key, _Compare, _Allocator>::iterator, std::__debug::set<_Key, _Cmp, _Allocator> >, bool> std::__debug::set<_Key, _Cmp, _Allocator>::insert(const value_type&) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:262:42: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  262 |         return std::pair<iterator, bool>(iterator(__res.first, this),
      |                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::iterator std::__debug::set<_Key, _Cmp, _Allocator>::erase(std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:357:56: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  357 |         return { _Base::erase(__position.base()), this };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:357:56: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::iterator std::__debug::set<_Key, _Cmp, _Allocator>::insert(std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator, const value_type&) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:279:68: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  279 |         return iterator(_Base::insert(__position.base(), __x), this);
      |                                                                    ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:279:68: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::iterator std::__debug::set<_Key, _Cmp, _Allocator>::find(const _Kt&) [with _Kt = Stroika::Foundation::Execution::Function<void()>; _Req = void; _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:459:43: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  459 |         { return { _Base::find(__x), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::iterator std::__debug::set<_Key, _Cmp, _Allocator>::end() [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:190:43: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  190 |       { return iterator(_Base::end(), this); }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator std::__debug::set<_Key, _Cmp, _Allocator>::begin() const [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:186:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  186 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/vector:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from IntervalTimer.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Sequence = std::__debug::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:530:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  530 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:532:30: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  532 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:61,
                 from ../Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../Characters/../Containers/Sequence.h:16,
                 from ../Characters/String.h:15,
                 from ../Characters/StringBuilder.h:12,
                 from IntervalTimer.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_set.h: In member function 'std::__cxx1998::set<_Key, _Compare, _Alloc>::iterator std::__cxx1998::set<_Key, _Compare, _Alloc>::erase(std::__cxx1998::set<_Key, _Compare, _Alloc>::const_iterator) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_set.h:654:7: note: parameter passing for argument of type 'std::__cxx1998::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' {aka 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator'} changed in GCC 7.1
  654 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_set.h:655:26: note: parameter passing for argument of type 'std::__cxx1998::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' {aka 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator'} changed in GCC 7.1
  655 |       { return _M_t.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_set.h: In member function 'std::__cxx1998::set<_Key, _Compare, _Alloc>::iterator std::__cxx1998::set<_Key, _Compare, _Alloc>::insert(std::__cxx1998::set<_Key, _Compare, _Alloc>::const_iterator, const value_type&) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_set.h:546:7: note: parameter passing for argument of type 'std::__cxx1998::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' {aka 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator'} changed in GCC 7.1
  546 |       insert(const_iterator __position, const value_type& __x)
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_set.h:547:38: note: parameter passing for argument of type 'std::__cxx1998::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' {aka 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator'} changed in GCC 7.1
  547 |       { return _M_t._M_insert_unique_(__position, __x); }
      |                ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/vector:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from IntervalTimer.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Sequence = std::__debug::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:60,
                 from ../Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../Characters/../Containers/Sequence.h:16,
                 from ../Characters/String.h:15,
                 from ../Characters/StringBuilder.h:12,
                 from IntervalTimer.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Val = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _KeyOfValue = std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1192:7: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 1192 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1197:21: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 1197 |         _M_erase_aux(__position);
      |         ~~~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, _Arg&&) [with _Arg = const Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&; _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Val = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _KeyOfValue = std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1058:9: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 1058 |         _M_insert_unique_(const_iterator __pos, _Arg&& __x)
      |         ^~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1061:35: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 1061 |           return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
      |                  ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/set:41,
                 from /usr/arm-linux-gnueabihf/include/c++/11/set:67,
                 from ../Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../Characters/../Containers/Sequence.h:16,
                 from ../Characters/String.h:15,
                 from ../Characters/StringBuilder.h:12,
                 from IntervalTimer.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator std::__debug::set<_Key, _Cmp, _Allocator>::cbegin() const [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/set.h:215:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  215 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:60,
                 from ../Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../Characters/../Containers/Sequence.h:16,
                 from ../Characters/String.h:15,
                 from ../Characters/StringBuilder.h:12,
                 from IntervalTimer.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase_aux(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Val = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _KeyOfValue = std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:2480:5: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 2480 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, _Arg&&, _NodeGen&) [with _Arg = const Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&; _NodeGen = std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::_Alloc_node; _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Val = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _KeyOfValue = std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:2224:7: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 2224 |       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from ../Characters/../Debug/AssertExternallySynchronizedMutex.h:13,
                 from ../Characters/StringBuilder.h:9,
                 from IntervalTimer.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:60,
                 from ../Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../Characters/../Containers/Sequence.h:16,
                 from ../Characters/String.h:15,
                 from ../Characters/StringBuilder.h:12,
                 from IntervalTimer.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const key_type&) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Val = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _KeyOfValue = std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:2163:5: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 2163 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from ../Characters/../Debug/AssertExternallySynchronizedMutex.h:13,
                 from ../Characters/StringBuilder.h:9,
                 from IntervalTimer.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Foundation/Math/LinearAlgebra/Vector.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Logger.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/MountedFilesystem.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/UTFConvert.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Module.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetAddress.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Utils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructFieldMetaInfo.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Format.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/LinkMonitor.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/OperationNotSupportedException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/VariantValue.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_set:52,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/../Concrete/KeyedCollection_stdhashset.h:7,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.inl:15,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.h:123,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.inl:14,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.h:581,
                 from ../../Characters/../Memory/../Containers/Adapters/Adder.h:14,
                 from ../../Characters/../Memory/Optional.h:16,
                 from ../../Characters/FloatConversion.inl:16,
                 from ../../Characters/FloatConversion.h:284,
                 from ../../Characters/ToString.inl:22,
                 from ../../Characters/ToString.h:125,
                 from Interface.cpp:39:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:444:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  444 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::end() const [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:235:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  235 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::find(const _Kt&) const [with _Kt = Stroika::Foundation::Characters::String; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:452:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  452 |         { return { _Base::find(__k), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_set<_Value1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::insert(const value_type&) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:334:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  334 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:517:46: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  517 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:517:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator, const value_type&) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:342:34: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  342 |         auto __it = _Base::insert(__hint.base(), __obj);
      |                     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:344:29: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  344 |         return { __it, this };
      |                             ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:510:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  510 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:510:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/Reader.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::find(const _Kt&) [with _Kt = Stroika::Foundation::Characters::String; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:439:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  439 |         { return { _Base::find(__k), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::end() [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:231:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  231 |       { return { _Base::end(), this }; }
      |                                     ^
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/7z/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Compression/Zip/Reader.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::begin() const [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:227:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  227 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/vector:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Interface.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>; _Sequence = std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>; _Sequence = std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_set:52,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/../Concrete/KeyedCollection_stdhashset.h:7,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.inl:15,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.h:123,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.inl:14,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.h:581,
                 from ../../Characters/../Memory/../Containers/Adapters/Adder.h:14,
                 from ../../Characters/../Memory/Optional.h:16,
                 from ../../Characters/FloatConversion.inl:16,
                 from ../../Characters/FloatConversion.h:284,
                 from ../../Characters/ToString.inl:22,
                 from ../../Characters/ToString.h:125,
                 from Interface.cpp:39:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:564:7: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  564 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:566:22: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  566 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:568:45: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  568 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_set:47,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/../Concrete/KeyedCollection_stdhashset.h:7,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.inl:15,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.h:123,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.inl:14,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.h:581,
                 from ../../Characters/../Memory/../Containers/Adapters/Adder.h:14,
                 from ../../Characters/../Memory/Optional.h:16,
                 from ../../Characters/FloatConversion.inl:16,
                 from ../../Characters/FloatConversion.h:284,
                 from ../../Characters/ToString.inl:22,
                 from ../../Characters/ToString.h:125,
                 from Interface.cpp:39:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_set.h: In member function 'std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::const_iterator, const value_type&) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_set.h:450:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  450 |       insert(const_iterator __hint, const value_type& __x)
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_set.h:451:27: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  451 |       { return _M_h.insert(__hint, __x); }
      |                ~~~~~~~~~~~^~~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/Zip/Reader.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../Characters/../Common/Compare.h:10,
                 from ../../Characters/String.h:14,
                 from ../../Characters/Format.h:15,
                 from Interface.cpp:37:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_set:52,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/../Concrete/KeyedCollection_stdhashset.h:7,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.inl:15,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.h:123,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.inl:14,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.h:581,
                 from ../../Characters/../Memory/../Containers/Adapters/Adder.h:14,
                 from ../../Characters/../Memory/Optional.h:16,
                 from ../../Characters/FloatConversion.inl:16,
                 from ../../Characters/FloatConversion.h:284,
                 from ../../Characters/ToString.inl:22,
                 from ../../Characters/ToString.h:125,
                 from Interface.cpp:39:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:557:11: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  557 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'void std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:554:7: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  554 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_set:47,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/../Concrete/KeyedCollection_stdhashset.h:7,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.inl:15,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.h:123,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.inl:14,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.h:581,
                 from ../../Characters/../Memory/../Containers/Adapters/Adder.h:14,
                 from ../../Characters/../Memory/Optional.h:16,
                 from ../../Characters/FloatConversion.inl:16,
                 from ../../Characters/FloatConversion.h:284,
                 from ../../Characters/ToString.inl:22,
                 from ../../Characters/ToString.h:125,
                 from Interface.cpp:39:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_set.h: In member function 'std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::const_iterator) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_set.h:523:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  523 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_set.h:524:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  524 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../Characters/../Common/Compare.h:10,
                 from ../../Characters/String.h:14,
                 from ../../Characters/Format.h:15,
                 from Interface.cpp:37:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::insert(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, const value_type&) [with _Key = Stroika::Foundation::IO::Network::Interface; _Value = Stroika::Foundation::IO::Network::Interface; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>; _ExtractKey = std::__detail::_Identity; _Equal = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:848:7: note: parameter passing for argument of type 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' changed in GCC 7.1
  848 |       insert(const_iterator __hint, const value_type& __v)
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:852:29: note: parameter passing for argument of type 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' changed in GCC 7.1
  852 |         return __h._M_insert(__hint, __v, __node_gen, __unique_keys{});
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_set:52,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/../Concrete/KeyedCollection_stdhashset.h:7,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.inl:15,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.h:123,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.inl:14,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.h:581,
                 from ../../Characters/../Memory/../Containers/Adapters/Adder.h:14,
                 from ../../Characters/../Memory/Optional.h:16,
                 from ../../Characters/FloatConversion.inl:16,
                 from ../../Characters/FloatConversion.h:284,
                 from ../../Characters/ToString.inl:22,
                 from ../../Characters/ToString.h:125,
                 from Interface.cpp:39:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::cbegin() const [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_set:239:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  239 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../Characters/../Common/Compare.h:10,
                 from ../../Characters/String.h:14,
                 from ../../Characters/Format.h:15,
                 from Interface.cpp:37:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>)>; _Container = std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_M_invalidate(std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator)::<lambda(std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator)>; _Container = std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../Characters/../Common/Compare.h:10,
                 from ../../Characters/String.h:14,
                 from ../../Characters/Format.h:15,
                 from Interface.cpp:37:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = Stroika::Foundation::IO::Network::Interface; _Value = Stroika::Foundation::IO::Network::Interface; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>; _ExtractKey = std::__detail::_Identity; _Equal = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const Stroika::Foundation::IO::Network::Interface&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Stroika::Foundation::IO::Network::Interface, false> > >; _Key = Stroika::Foundation::IO::Network::Interface; _Value = Stroika::Foundation::IO::Network::Interface; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>; _ExtractKey = std::__detail::_Identity; _Equal = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:888:9: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  888 |         _M_insert(const_iterator, _Arg&& __arg,
      |         ^~~~~~~~~
         Compiling Library/Sources/Stroika/Foundation/Memory/BLOB.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/PathName.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Listener.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Process.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/BlockAllocator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ProcessRunner.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ProgressMonitor.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/ThroughTmpFileWriter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Compression/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/WellKnownLocations.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/CommonInsertersAndExtractors.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/Common.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from ../Characters/../Common/Compare.h:11,
                 from ../Characters/String.h:14,
                 from ../Characters/FloatConversion.h:15,
                 from VariantValue.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; _Args = {signed char&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; _Args = {short int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; _Args = {int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; _Args = {long int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; _Args = {long long int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; _Args = {unsigned char&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; _Args = {short unsigned int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; _Args = {unsigned int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; _Args = {long unsigned int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; _Args = {long long unsigned int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; _Args = {float&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; _Args = {double&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; _Args = {long double&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {signed char&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {short int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {long int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {long long int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {unsigned char&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {short unsigned int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {unsigned int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {long unsigned int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {long long unsigned int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {float&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {double&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {long double&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/FStreamSupport.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:502:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  502 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:502:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:502:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
         Compiling Library/Sources/Stroika/Foundation/Memory/MemoryAllocator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/SerializeItemToBLOB.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Date.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/Utilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/RequiredComponentMissingException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/RequiredComponentVersionMismatchException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/CharacterDelimitedLines/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SharedStaticData.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Neighbors.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructuredStreamEvents/IConsumer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructuredStreamEvents/ObjectReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/EOFException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/InputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Profile.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/JSON/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/MemoryStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/DateTime.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/JSON/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/SharedMemoryStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/CharacterDelimitedLines/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Socket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/Namespace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SilentException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Signals.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Duration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/SAXReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/TextReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SignalHandlers.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SocketAddress.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SocketStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/TextToByteReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SystemFirewall.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Realtime.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/XML/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/TimeOfDay.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Timezone.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Sleep.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/SerializationConfiguration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/WriterUtils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/UniformResourceIdentification.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SpinLock.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Thread.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/XML/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/URI.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/ClientErrorException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ThreadPool.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/CacheControl.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Throw.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetProtocol/ICMP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Cookie.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/TimeOutException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/UserCanceledException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Users.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/WaitableEvent.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/WaitForIOReady.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Headers.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetProtocol/IP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/KeepAlive.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/MessageStartTextInputStreamBinaryAdapter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Request.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Response.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/TransferEncoding.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SOAP/Fault.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Cache.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection_libcurl.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection_WinHTTP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/ConnectionPool.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Request.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Response.cpp ... 
      Creating Builds/raspberrypi-g++-11-debug-sanitize_undefined/Stroika-Foundation.a ... 
      Computing /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/Library/Frameworks/cached-list-objs
      Building Stroika Frameworks Objs:
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/AllInstruments.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/ConnectionManager.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/Modbus/IModbusService.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/NetworkMonitor/Ping.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/Service/Main.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Capturer.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/CPU.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/CaptureSet.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Server/Basic.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/CachingListener.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/Modbus/Server.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/Listener.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/set:42,
                 from /usr/arm-linux-gnueabihf/include/c++/11/set:67,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../../Foundation/Characters/../Containers/Sequence.h:16,
                 from ../../Foundation/Characters/String.h:15,
                 from ../../Foundation/Characters/StringBuilder.h:12,
                 from Ping.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::const_iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::find(const key_type&) const [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h:439:53: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  439 |       { return const_iterator(_Base::find(__x), this); }
      |                                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::const_iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::end() const [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h:195:49: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  195 |       { return const_iterator(_Base::end(), this); }
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::insert(const value_type&) [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h:258:49: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  258 |       { return iterator(_Base::insert(__x), this); }
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::erase(std::__debug::multiset<_Key, _Cmp, _Allocator>::const_iterator) [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h:343:56: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  343 |         return { _Base::erase(__position.base()), this };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h:343:56: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::const_iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::begin() const [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h:187:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  187 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from ../../Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from ../../Foundation/Characters/StringBuilder.h:9,
                 from Ping.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<double>; _Sequence = std::__debug::multiset<double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:530:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  530 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:532:30: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  532 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:62,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../../Foundation/Characters/../Containers/Sequence.h:16,
                 from ../../Foundation/Characters/String.h:15,
                 from ../../Foundation/Characters/StringBuilder.h:12,
                 from Ping.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_multiset.h: In member function 'std::__cxx1998::multiset<_Key, _Compare, _Alloc>::iterator std::__cxx1998::multiset<_Key, _Compare, _Alloc>::erase(std::__cxx1998::multiset<_Key, _Compare, _Alloc>::const_iterator) [with _Key = double; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_multiset.h:639:7: note: parameter passing for argument of type 'std::__cxx1998::multiset<double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator' {aka 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator'} changed in GCC 7.1
  639 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_multiset.h:640:26: note: parameter passing for argument of type 'std::__cxx1998::multiset<double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator' {aka 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator'} changed in GCC 7.1
  640 |       { return _M_t.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from ../../Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from ../../Foundation/Characters/StringBuilder.h:9,
                 from Ping.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<double>; _Sequence = std::__debug::multiset<double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:60,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../../Foundation/Characters/../Containers/Sequence.h:16,
                 from ../../Foundation/Characters/String.h:15,
                 from ../../Foundation/Characters/StringBuilder.h:12,
                 from Ping.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator) [with _Key = double; _Val = double; _KeyOfValue = std::_Identity<double>; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1192:7: note: parameter passing for argument of type 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator' changed in GCC 7.1
 1192 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1197:21: note: parameter passing for argument of type 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator' changed in GCC 7.1
 1197 |         _M_erase_aux(__position);
      |         ~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/set:42,
                 from /usr/arm-linux-gnueabihf/include/c++/11/set:67,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../../Foundation/Characters/../Containers/Sequence.h:16,
                 from ../../Foundation/Characters/String.h:15,
                 from ../../Foundation/Characters/StringBuilder.h:12,
                 from Ping.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::const_iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::cbegin() const [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/multiset.h:216:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  216 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:60,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../../Foundation/Characters/../Containers/Sequence.h:16,
                 from ../../Foundation/Characters/String.h:15,
                 from ../../Foundation/Characters/StringBuilder.h:12,
                 from Ping.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase_aux(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator) [with _Key = double; _Val = double; _KeyOfValue = std::_Identity<double>; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:2480:5: note: parameter passing for argument of type 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator' changed in GCC 7.1
 2480 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Frameworks/NetworkMonitor/Traceroute.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/Search.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Server/VariantValue.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instrument.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Memory.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Basic.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/BasicServer.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Filesystem.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Network.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Measurement.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/CORS.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/DefaultFaultInterceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/FileSystemRequestHandler.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/PeriodicNotifier.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/SearchResponder.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Advertisement.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Interceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/InterceptorChain.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Common.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Message.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Process.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/LoggingInterceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Request.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = const {anonymous}::PerfStats_&; _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = const {anonymous}::Last&; _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
         Compiling Library/Sources/Stroika/Frameworks/WebServer/RequestHandler.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Response.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>; _Sequence = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>; _Sequence = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>; _Sequence = std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>; _Sequence = std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const Stroika::Foundation::Characters::String&; _Args = {const {anonymous}::Last&}; _Key = Stroika::Foundation::Characters::String; _Value = std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Stroika::Foundation::Characters::String>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:674:11: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_local_iterator' {aka 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_local_iterator'} changed in GCC 7.1
  674 |           [__victim](_Base_const_local_iterator __it)
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const long long unsigned int&; _Args = {const {anonymous}::PerfStats_&}; _Key = long long unsigned int; _Value = std::pair<const long long unsigned int, {anonymous}::PerfStats_>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<long long unsigned int>; _Hash = std::hash<long long unsigned int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Router.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = Stroika::Foundation::Characters::String; _Tp = {anonymous}::Last; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:71:17: note: parameter passing for argument of type 'std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   71 |                 [__local_end](__decltype(__local_end) __it)
      |                 ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_M_invalidate(std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = long long unsigned int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<long long unsigned int>; _Pred = std::equal_to<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_local_if(_Predicate) [with _Predicate = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_M_invalidate(std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_local_iterator)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:80:51: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_local_iterator' {aka 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_local_iterator'} changed in GCC 7.1
   80 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:91:51: note: parameter passing for argument of type 'const std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   91 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Value = std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Stroika::Foundation::Characters::String>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Value = std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Stroika::Foundation::Characters::String>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>)>; _Container = std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::_M_invalidate(std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = long long unsigned int; _Value = std::pair<const long long unsigned int, {anonymous}::PerfStats_>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<long long unsigned int>; _Hash = std::hash<long long unsigned int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = long long unsigned int; _Value = std::pair<const long long unsigned int, {anonymous}::PerfStats_>; _Alloc = std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<long long unsigned int>; _Hash = std::hash<long long unsigned int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<long long unsigned int, std::pair<const long long unsigned int, {anonymous}::PerfStats_>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<long long unsigned int>, std::hash<long long unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from Filesystem.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>; _Sequence = std::__debug::unordered_map<long long unsigned int, {anonymous}::PerfStats_, std::hash<long long unsigned int>, std::equal_to<long long unsigned int>, std::allocator<std::pair<const long long unsigned int, {anonymous}::PerfStats_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from ../../../Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from ../../../Foundation/Configuration/StroikaConfig.h:18,
                 from ../../../Foundation/StroikaPreComp.h:7,
                 from ../../StroikaPreComp.h:7,
                 from Filesystem.cpp:4:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  101 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const long long unsigned int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_local_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > > >::_M_invalidate_locals()::<lambda(std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:80:51: note: parameter passing for argument of type 'std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   80 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:91:51: note: parameter passing for argument of type 'const std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   91 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>; _Sequence = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Frameworks/UPnP/Device.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/DeviceDescription.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from ../../../Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from ../../../Foundation/Configuration/StroikaConfig.h:18,
                 from ../../../Foundation/StroikaPreComp.h:7,
                 from ../../StroikaPreComp.h:7,
                 from Network.cpp:4:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
  101 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, false, true>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = const {anonymous}::PerfStats_&; _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = const Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType&; _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>; _Sequence = std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>; _Sequence = std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const int&; _Args = {const {anonymous}::PerfStats_&}; _Key = int; _Value = std::pair<const int, {anonymous}::PerfStats_>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const int&; _Args = {const Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType&}; _Key = int; _Value = std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = int; _Tp = {anonymous}::PerfStats_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>)>; _Container = std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::_M_invalidate(std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = int; _Value = std::pair<const int, {anonymous}::PerfStats_>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = int; _Value = std::pair<const int, {anonymous}::PerfStats_>; _Alloc = std::allocator<std::pair<const int, {anonymous}::PerfStats_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, {anonymous}::PerfStats_>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>)>; _Container = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_M_invalidate(std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = int; _Value = std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = int; _Value = std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/String2Int.h:9,
                 from Process.cpp:19:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>; _Sequence = std::__debug::unordered_map<int, {anonymous}::PerfStats_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, {anonymous}::PerfStats_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from ../../../Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from ../../../Foundation/Configuration/StroikaConfig.h:18,
                 from ../../../Foundation/StroikaPreComp.h:7,
                 from ../../StroikaPreComp.h:7,
                 from Process.cpp:4:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
  101 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, {anonymous}::PerfStats_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
      Creating Builds/raspberrypi-g++-11-debug-sanitize_undefined/Stroika-Frameworks.a ... 
   Building Stroika Tools {raspberrypi-g++-11-debug-sanitize_undefined}:
            Compiling Tools/Sources/Stroika/Frameworks/WebServer/HTMLViewCompiler/HTMLViewCompiler.cpp ... 
      Linking  $StroikaRoot/Builds/raspberrypi-g++-11-debug-sanitize_undefined/HTMLViewCompiler...
   Building Stroika Tests {raspberrypi-g++-11-debug-sanitize_undefined}:
      Test 01: Foundation::Caching:
      Test 03: Foundation::Common:
      Test 04: Foundation::Configuration:
      Test 06: Foundation::Containers::DataStructures::LinkedList:
      Test 07: Foundation::Containers::DataStructures::LockFree:
      Test 05: Foundation::Containers::DataStructures::Array:
      Test 08: Foundation::Containers::DataStructures::DoublyLinkedList:
      Test 02: Foundation::Characters:
      Test 10: Foundation::Containers::DataStructures::SkipList:
      Test 09: Foundation::Containers::DataStructures::STLContainerWrapper:
         Compiling Tests/01/Test.cpp ... 
         Compiling Tests/07/Test.cpp ... 
         Compiling Tests/08/Test.cpp ... 
         Compiling Tests/03/Test.cpp ... 
         Compiling Tests/02/Test.cpp ... 
         Compiling Tests/06/Test.cpp ... 
         Compiling Tests/04/Test.cpp ... 
         Compiling Tests/09/Test.cpp ... 
         Compiling Tests/10/Test.cpp ... 
         Compiling Tests/05/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test09 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test10 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test05 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test08 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test06 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::iterator std::__debug::vector<_Tp, _Allocator>::begin() [with _Tp = Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement; _Allocator = std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector:309:45: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  309 |       { return iterator(_Base::begin(), this); }
      |                                             ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::iterator std::__debug::vector<_Tp, _Allocator>::end() [with _Tp = Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement; _Allocator = std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector:317:43: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  317 |       { return iterator(_Base::end(), this); }
      |                                           ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/vector:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:679:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  679 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:681:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  681 |       : _Safe_base(__i, __seq)
      |                              ^
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:72,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc: In member function 'std::__cxx1998::vector<_Tp, _Alloc>::reference std::__cxx1998::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement}; _Tp = Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement; _Alloc = std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc:121:28: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  121 |           _M_realloc_insert(end(), std::forward<_Args>(__args)...);
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/vector:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:530:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  530 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:532:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  532 |       : _Safe_base(__i, __seq)
      |                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In member function '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag> __gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::operator++(int) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:758:47: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  758 |                               _Attach_single());
      |                                               ^
               Test 11: Foundation::Containers::Association:
Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test07 ... 
         Compiling Tests/11/Test.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:72,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc: In member function 'void std::__cxx1998::vector<_Tp, _Alloc>::_M_realloc_insert(std::__cxx1998::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement}; _Tp = Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement; _Alloc = std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc:426:7: note: parameter passing for argument of type 'std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >::iterator' changed in GCC 7.1
  426 |       vector<_Tp, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/vector:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::_Safe_iterator(_Iterator, __gnu_debug::_Safe_sequence_base*, __gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::_Attach_single) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:660:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  660 |       _Safe_iterator(_Iterator __i, _Safe_sequence_base* __seq, _Attach_single)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:662:48: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  662 |       : _Safe_base(__i, __seq, _Attach_single())
      |                                                ^
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 12: Foundation::Containers::Bijection:
         Compiling Tests/12/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test03 ... 
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, __gnu_debug::_Safe_sequence_base*, __gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Attach_single) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:514:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  514 |       _Safe_iterator(_Iterator __i, _Safe_sequence_base* __seq, _Attach_single)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:516:48: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  516 |       : _Safe_base(__i, __seq, _Attach_single())
      |                                                ^
         Compiling Tests/TestHarness/TestHarness.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, __gnu_debug::_Safe_sequence_base*, __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Attach_single) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:135:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  135 |       _Safe_iterator(_Iterator __i, _Safe_sequence_base* __seq, _Attach_single)
      |       ^~~~~~~~~~~~~~
      Test 13: Foundation::Containers::Collection:
         Compiling Tests/13/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test04 ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:502:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  502 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
      Test 14: Foundation::Containers::DataHyperRectangle:
         Compiling Tests/14/Test.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = const Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_&; _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
      Test 15: Foundation::Containers::Deque:
         Compiling Tests/15/Test.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/vector:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const int&; _Args = {const Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_&}; _Key = int; _Value = std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>)>; _Container = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::_M_invalidate(std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = int; _Value = std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = int; _Value = std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/vector:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
  101 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, std::optional<int> >::myVal_>, false, false>' changed in GCC 7.1
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 16: Foundation::Containers::KeyedCollection:
         Compiling Tests/16/Test.cpp ... 
      Test 17: Foundation::Containers::Mapping:
         Compiling Tests/17/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test01 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test02 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 18: Foundation::Containers::MultiSet:
         Compiling Tests/18/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test15 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test12 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test14 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test16 ... 
      Test 19: Foundation::Containers::PriorityQueue:
         Compiling Tests/19/Test.cpp ... 
      Test 20: Foundation::Containers::Queue:
         Compiling Tests/20/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 21: Foundation::Containers::Sequence:
         Compiling Tests/21/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test13 ... 
      Test 22: Foundation::Containers::Set:
         Compiling Tests/22/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test19 ... 
      Test 23: Foundation::Containers::SortedAssociation:
         Compiling Tests/23/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test20 ... 
      Test 24: Foundation::Containers::SortedCollection:
         Compiling Tests/24/Test.cpp ... 
      Test 25: Foundation::Containers::SortedKeyedCollection:
         Compiling Tests/25/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 26: Foundation::Containers::SortedMapping:
         Compiling Tests/26/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test18 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 27: Foundation::Containers::SortedMultiSet:
         Compiling Tests/27/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test11 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test25 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 28: Foundation::Containers::SortedSet:
         Compiling Tests/28/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test24 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test22 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test17 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test23 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 29: Foundation::Containers::Stack:
         Compiling Tests/29/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test21 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 30: Foundation::Containers::STL:
         Compiling Tests/30/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 31: Foundation::Cryptography:
         Compiling Tests/31/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test26 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test27 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 32: Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip):
         Compiling Tests/32/Test.cpp ... 
      Test 33: Foundation::DataExchange::ObjectVariantMapper:
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/33/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test29 ... 
      Test 34: Foundation::DataExchange::XML::SaxParser:
         Compiling Tests/34/Test.cpp ... 
      Test 35: Foundation::DataExchange::Other:
         Compiling Tests/35/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test30 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 36: Foundation::Database:
         Compiling Tests/36/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test28 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 37: Foundation::Execution::Exceptions:
         Compiling Tests/37/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 38: Foundation::Execution::ProcessRunner:
         Compiling Tests/38/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test31 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 39: Foundation::Execution::Signals:
         Compiling Tests/39/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test37 ... 
      Test 40: Foundation::Execution::Threads:
         Compiling Tests/40/Test.cpp ... 
      Test 41: Foundation::Execution::ThreadSafetyBuiltinObject:
         Compiling Tests/41/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
                  Compiling Tests/TestHarness/TestHarness.cpp ... 
Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test32 ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:502:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  502 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
      Test 42: Foundation::Execution::Other:
         Compiling Tests/42/Test.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/algorithmfwd.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algo.h:60,
                 from /usr/arm-linux-gnueabihf/include/c++/11/string:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/locale_classes.h:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/ios_base.h:41,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:42,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/initializer_list: In function 'constexpr const _Tp* std::begin(std::initializer_list<_Tp>) [with _Tp = Stroika::Foundation::Common::KeyValuePair<double, double>]':
/usr/arm-linux-gnueabihf/include/c++/11/initializer_list:90:5: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Common::KeyValuePair<double, double> >' changed in GCC 7.1
   90 |     begin(initializer_list<_Tp> __ils) noexcept
      |     ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/initializer_list: In function 'constexpr const _Tp* std::end(std::initializer_list<_Tp>) [with _Tp = Stroika::Foundation::Common::KeyValuePair<double, double>]':
/usr/arm-linux-gnueabihf/include/c++/11/initializer_list:101:5: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Common::KeyValuePair<double, double> >' changed in GCC 7.1
  101 |     end(initializer_list<_Tp> __ils) noexcept
      |     ^~~
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test35 ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = double&; _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test39 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test38 ... 
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/vector:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>; _Sequence = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const double, double>, false, false>; _Sequence = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const double&; _Args = {double&}; _Key = double; _Value = std::pair<const double, double>; _Alloc = std::allocator<std::pair<const double, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<double>; _Hash = std::hash<double>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>)>; _Container = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_M_invalidate(std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = double; _Value = std::pair<const double, double>; _Alloc = std::allocator<std::pair<const double, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<double>; _Hash = std::hash<double>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = double; _Value = std::pair<const double, double>; _Alloc = std::allocator<std::pair<const double, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<double>; _Hash = std::hash<double>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/vector:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/11/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>; _Sequence = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  101 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
      Test 43: Foundation::IO::Network:
         Compiling Tests/43/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test36 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test33 ... 
      Test 44: Foundation::IO::Network::HTTP:
         Compiling Tests/44/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 45: Foundation::IO::Network::Transfer:
         Compiling Tests/45/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test40 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test42 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/map:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/map:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/regex:52,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.inl:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:1681,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::find(const key_type&) const [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:597:53: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  597 |       { return const_iterator(_Base::find(__x), this); }
      |                                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::end() const [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:198:49: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  198 |       { return const_iterator(_Base::end(), this); }
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::map<_Key, _Tp, _Compare, _Allocator>::iterator, std::__debug::map<_Key, _Tp, _Cmp, _Allocator> >, bool> std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = double&; _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:407:56: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  407 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::map<_Key, _Tp, _Compare, _Allocator>::iterator, std::__debug::map<_Key, _Tp, _Cmp, _Allocator> >, bool> std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::insert(std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::value_type&&) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:284:54: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  284 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::find(const key_type&) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:584:47: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  584 |       { return iterator(_Base::find(__x), this); }
      |                                               ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::end() [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:194:43: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  194 |       { return iterator(_Base::end(), this); }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::erase(std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:492:56: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  492 |         return { _Base::erase(__position.base()), this };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:492:56: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = const Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_&; _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = double&; _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_&; _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = double&; _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 46: Foundation::IO::Other:
         Compiling Tests/46/Test.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const int&; _Args = {const Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_&}; _Key = int; _Value = std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
         Compiling Tests/TestHarness/TestHarness.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/map:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/map:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/regex:52,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.inl:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:1681,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::begin() const [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:190:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  190 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<std::pair<const double, double> >; _Sequence = std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:530:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  530 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:532:30: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  532 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/map:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/regex:52,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.inl:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:1681,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h: In member function 'std::pair<typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename __gnu_cxx::__alloc_traits<_Allocator>::rebind<std::pair<const _Key, _Tp> >::other>::iterator, bool> std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = double&; _Key = double; _Tp = double; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h:923:33: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
  923 |               __i = emplace_hint(__i, std::piecewise_construct,
      |                     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  924 |                                  std::forward_as_tuple(__k),
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  925 |                                  std::forward_as_tuple(
      |                                  ~~~~~~~~~~~~~~~~~~~~~~
  926 |                                    std::forward<_Obj>(__obj)));
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_iterator<std::pair<const double, double> >; _Sequence = std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:530:7: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  530 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:532:30: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  532 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/map:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/regex:52,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.inl:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:1681,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h: In member function 'std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::iterator std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::erase(std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::const_iterator) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h:1031:7: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
 1031 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h:1032:26: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
 1032 |       { return _M_t.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/map:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/map:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/regex:52,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.inl:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:1681,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::erase(std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator, std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:540:68: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  540 |         return { _Base::erase(__first.base(), __last.base()), this };
      |                                                                    ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:540:68: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = int; _Tp = Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>)>; _Container = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::_M_invalidate(std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = int; _Value = std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = int; _Value = std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>; _Alloc = std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Containers/Mapping.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/CallerStalenessCache.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/SynchronizedCallerStalenessCache.h:12,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      Test 47: Foundation::Math:
         Compiling Tests/47/Test.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>; _Sequence = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const double, double>, false, false>; _Sequence = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
  101 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Foundation::Cache::CallerStalenessCache<int, int, Stroika::Foundation::Cache::CallerStalenessCache_Traits_DEFAULT>::myVal_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>; _Sequence = std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>; _Sequence = std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>; _Sequence = std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>; _Sequence = std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<std::pair<const double, double> >; _Sequence = std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/map:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/regex:52,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.inl:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:1681,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h: In member function 'std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::iterator std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::emplace_hint(std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::const_iterator, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const double&>, std::tuple<double&>}; _Key = double; _Tp = double; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h:606:9: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
  606 |         emplace_hint(const_iterator __pos, _Args&&... __args)
      |         ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h:608:45: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
  608 |           return _M_t._M_emplace_hint_unique(__pos,
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
  609 |                                              std::forward<_Args>(__args)...);
      |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_iterator<std::pair<const double, double> >; _Sequence = std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:60,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:16,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator) [with _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1192:7: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 1192 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1197:21: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 1197 |         _M_erase_aux(__position);
      |         ~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/map:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/regex:52,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.inl:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:1681,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h: In member function 'std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::iterator std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::erase(std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::const_iterator, std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::const_iterator) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h:1088:7: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
 1088 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h:1088:7: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_map.h:1089:26: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
 1089 |       { return _M_t.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test43 ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const double&; _Args = {double&}; _Key = double; _Value = std::pair<const double, double>; _Alloc = std::allocator<std::pair<const double, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<double>; _Hash = std::hash<double>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_&; _Args = {const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_&}; _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Value = std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_&; _Args = {double&}; _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Value = std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/map:43,
                 from /usr/arm-linux-gnueabihf/include/c++/11/map:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/regex:52,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.inl:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:1681,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::cbegin() const [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/map.h:219:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  219 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:60,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:16,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_emplace_hint_unique(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const double&>, std::tuple<double&>}; _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:2428:7: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 2428 |       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase_aux(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator) [with _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:2480:5: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 2480 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator) [with _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1236:7: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 1236 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1236:7: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:1238:21: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 1238 |         _M_erase_aux(__first, __last);
      |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = double; _Tp = double; _Hash = std::hash<double>; _Pred = std::equal_to<double>; _Alloc = std::allocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>)>; _Container = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_M_invalidate(std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = double; _Value = std::pair<const double, double>; _Alloc = std::allocator<std::pair<const double, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<double>; _Hash = std::hash<double>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = double; _Value = std::pair<const double, double>; _Alloc = std::allocator<std::pair<const double, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<double>; _Hash = std::hash<double>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<double, std::pair<const double, double>, std::allocator<std::pair<const double, double> >, std::__detail::_Select1st, std::equal_to<double>, std::hash<double>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Tp = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>)>; _Container = std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::_M_invalidate(std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Value = std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_; _Value = std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _Hash = std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Tp = double; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Pred = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>)>; _Container = std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::_M_invalidate(std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Value = std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_; _Value = std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>; _Alloc = std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _Hash = std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> >, std::__detail::_Select1st, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:60,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:16,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const key_type&) [with _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:2163:5: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 2163 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::_Rb_tree_const_iterator<std::pair<const double, double> >; _Sequence = std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/set:60,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:16,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h: In member function 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase_aux(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator) [with _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:2494:5: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 2494 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:2494:5: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_tree.h:2501:23: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
 2501 |           _M_erase_aux(__first++);
      |           ~~~~~~~~~~~~^~~~~~~~~~~
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11,
                 from Test.cpp:10:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>; _Sequence = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>; _Sequence = std::__debug::unordered_map<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_, std::hash<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::equal_to<{anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>; _Sequence = std::__debug::unordered_map<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double, std::hash<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::equal_to<{anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_>, std::allocator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::_Rb_tree_const_iterator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      Test 48: Foundation::Memory:
         Compiling Tests/48/Test.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::_Rb_tree_const_iterator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  101 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const double, double>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::TunerNumberType_, {anonymous}::T11_SAXObjectReader_BLKQCL_GetFactorySettings_Tuners_::PerTunerFactorySettingsType_>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const {anonymous}::T7_SAXObjectReader_BLKQCL_ReadSensors_::TunerNumberType_, double>, false, false>' changed in GCC 7.1
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test41 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
In file included from Test.cpp:20:
Test.cpp: In function 'void {anonymous}::Test6_Statistics_()':
Test.cpp:121:39: note: parameter passing for argument of type 'std::initializer_list<double>' changed in GCC 7.1
  121 |         VerifyTestResult (Math::Mean (vector<double> ({5, 3, 19, 1})) == 7);
      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../TestHarness/TestHarness.h:21:61: note: in definition of macro 'VerifyTestResult'
   21 | #define VerifyTestResult(c) Stroika::TestHarness::Test_ (!!(c), true, #c, __FILE__, __LINE__)
      |                                                             ^
Test.cpp:122:72: note: parameter passing for argument of type 'std::initializer_list<double>' changed in GCC 7.1
  122 |         VerifyTestResult (Math::NearlyEquals (Math::StandardDeviation (vector<double> ({5, 3, 19, 1})), 8.164966, .0001));
      |                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../TestHarness/TestHarness.h:21:61: note: in definition of macro 'VerifyTestResult'
   21 | #define VerifyTestResult(c) Stroika::TestHarness::Test_ (!!(c), true, #c, __FILE__, __LINE__)
      |                                                             ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector: In constructor 'std::__debug::vector<_Tp, _Allocator>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = double; _Allocator = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector:227:7: note: parameter passing for argument of type 'std::initializer_list<double>' changed in GCC 7.1
  227 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector:229:23: note: parameter passing for argument of type 'std::initializer_list<double>' changed in GCC 7.1
  229 |       : _Base(__l, __a) { }
      |                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_vector.h: In constructor 'std::__cxx1998::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = double; _Alloc = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_vector.h:625:7: note: parameter passing for argument of type 'std::initializer_list<double>' changed in GCC 7.1
  625 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Math/Optimization/DownhillSimplexMinimization.h:95,
                 from Test.cpp:15:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Math/Optimization/DownhillSimplexMinimization.inl: In function 'Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::Results<FLOAT_TYPE> Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<FLOAT_TYPE>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<T>&, FLOAT_TYPE, FLOAT_TYPE, unsigned int, unsigned int, FLOAT_TYPE, FLOAT_TYPE, FLOAT_TYPE, FLOAT_TYPE) [with FLOAT_TYPE = double]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Math/Optimization/DownhillSimplexMinimization.inl:87:40: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>' changed in GCC 7.1
   87 |             vector<PartialResultType_> res{PartialResultType_{x_start.GetItems (), prev_best}};
      |                                        ^~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:76,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::const_iterator std::__debug::vector<_Tp, _Allocator>::begin() const [with _Tp = double; _Allocator = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector:313:51: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  313 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::const_iterator std::__debug::vector<_Tp, _Allocator>::end() const [with _Tp = double; _Allocator = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector:321:49: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  321 |       { return const_iterator(_Base::end(), this); }
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector: In constructor 'std::__debug::vector<_Tp, _Allocator>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Allocator = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector:227:7: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>' changed in GCC 7.1
  227 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector:229:23: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>' changed in GCC 7.1
  229 |       : _Base(__l, __a) { }
      |                       ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::iterator std::__debug::vector<_Tp, _Allocator>::begin() [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Allocator = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector:309:45: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  309 |       { return iterator(_Base::begin(), this); }
      |                                             ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::iterator std::__debug::vector<_Tp, _Allocator>::end() [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Allocator = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/vector:317:43: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  317 |       { return iterator(_Base::end(), this); }
      |                                           ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In function '__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>::_Self __gnu_debug::operator+(const _Self&, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>::difference_type)':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:917:64: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  917 |         return _Safe_iterator(__x.base() + __n, __x._M_sequence);
      |                                                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_vector.h: In copy constructor 'std::__cxx1998::vector<_Tp, _Alloc>::vector(const std::__cxx1998::vector<_Tp, _Alloc>&) [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_vector.h:558:38: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  558 |           std::__uninitialized_copy_a(__x.begin(), __x.end(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  559 |                                       this->_M_impl._M_start,
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~
  560 |                                       _M_get_Tp_allocator());
      |                                       ~~~~~~~~~~~~~~~~~~~~~~
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test44 ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >; _Sequence = std::__debug::vector<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:679:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  679 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:681:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  681 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_vector.h: In constructor 'std::__cxx1998::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_vector.h:625:7: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>' changed in GCC 7.1
  625 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:679:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  679 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:681:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  681 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_vector.h: In member function 'void std::__cxx1998::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_vector.h:1198:28: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
 1198 |           _M_realloc_insert(end(), __x);
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:66,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h: In function '_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _ForwardIterator = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*; _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h:331:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  331 |     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h:331:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h:333:37: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  333 |     { return std::uninitialized_copy(__first, __last, __result); }
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >; _Sequence = std::__debug::vector<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:530:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  530 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:532:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  532 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:72,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc: In member function 'std::__cxx1998::vector<_Tp, _Alloc>::reference std::__cxx1998::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_}; _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc:121:28: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  121 |           _M_realloc_insert(end(), std::forward<_Args>(__args)...);
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:530:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  530 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:532:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  532 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_from_begin() const [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:52:25: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
   52 |         = __get_distance(_M_get_sequence()->_M_base().begin(), base());
      |           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to_end() const [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:76:25: note: parameter passing for argument of type 'const __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
   76 |         = __get_distance(base(), _M_get_sequence()->_M_base().end());
      |           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:72,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc: In member function 'void std::__cxx1998::vector<_Tp, _Alloc>::_M_realloc_insert(std::__cxx1998::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_&}; _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc:426:7: note: parameter passing for argument of type 'std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >::iterator' changed in GCC 7.1
  426 |       vector<_Tp, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:66,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h: In function '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _ForwardIterator = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h:126:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  126 |     uninitialized_copy(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h:126:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h:151:22: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  148 |       return std::__uninitialized_copy<__is_trivial(_ValueType1)
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |                                        && __is_trivial(_ValueType2)
      |                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |                                        && __assignable>::
      |                                        ~~~~~~~~~~~~~~~~~~
  151 |         __uninit_copy(__first, __last, __result);
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >; _Sequence = std::__debug::vector<double>; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:72,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc: In member function 'void std::__cxx1998::vector<_Tp, _Alloc>::_M_realloc_insert(std::__cxx1998::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_}; _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc:426:7: note: parameter passing for argument of type 'std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >::iterator' changed in GCC 7.1
  426 |       vector<_Tp, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:66,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h: In static member function 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _ForwardIterator = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*; bool _TrivialValueTypes = false]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h:85:9: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
   85 |         __uninit_copy(_InputIterator __first, _InputIterator __last,
      |         ^~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_uninitialized.h:85:9: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:72,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc: In member function 'std::__cxx1998::vector<_Tp, _Alloc>::reference std::__cxx1998::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {double}; _Tp = double; _Alloc = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc:121:28: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  121 |           _M_realloc_insert(end(), std::forward<_Args>(__args)...);
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h: In function 'constexpr _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*; _Container = std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:1257:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
 1257 |     __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
      |     ^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h: In function 'constexpr _From std::__niter_wrap(_From, _To) [with _From = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _To = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:328:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  328 |     __niter_wrap(_From __from, _To __res)
      |     ^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In function '__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>::_Self __gnu_debug::operator-(const _Self&, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>::difference_type)':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:935:64: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  935 |         return _Safe_iterator(__x.base() - __n, __x._M_sequence);
      |                                                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In function '__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat> std::__copy_move_backward_a(const __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&, const __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&, const __gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&) [with bool _IsMove = true; _IIte = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _ISeq = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _ICat = std::random_access_iterator_tag; _OIte = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _OSeq = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _OCat = std::random_access_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:370:35: note: parameter passing for argument of type 'const __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  370 |               __result._M_sequence);
      |                                   ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:370:35: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:373:52: note: parameter passing for argument of type 'const __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  373 |             __first.base(), __last.base(), __result);
      |                                                    ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::random_access_iterator_tag) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:94:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
   94 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:94:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/vector:72,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:62,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc: In member function 'void std::__cxx1998::vector<_Tp, _Alloc>::_M_realloc_insert(std::__cxx1998::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {double}; _Tp = double; _Alloc = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/vector.tcc:426:7: note: parameter passing for argument of type 'std::__cxx1998::vector<double, std::allocator<double> >::iterator' changed in GCC 7.1
  426 |       vector<_Tp, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h: In function 'constexpr _OI std::__copy_move_backward_a(_II, _II, _OI) [with bool _IsMove = true; _II = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _OI = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:796:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  796 |     __copy_move_backward_a(_II __first, _II __last, _OI __result)
      |     ^~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:796:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:796:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr bool __gnu_debug::__valid_range(_InputIterator, _InputIterator, typename __gnu_debug::_Distance_traits<_Iterator>::__type&) [with _InputIterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:239:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  239 |     __valid_range(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:239:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:243:31: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  243 |       return __valid_range_aux(__first, __last, __dist, _Integral());
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In function '__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat> std::__copy_move_backward_a(_II, _II, const __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&) [with bool _IsMove = true; _II = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Ite = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Seq = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _Cat = std::random_access_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:333:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  333 |     __copy_move_backward_a(_II __first, _II __last,
      |     ^~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:333:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/debug.h:90,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:69,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:337:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  337 |       __glibcxx_check_valid_range2(__first, __last, __dist);
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:345:37: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  345 |                 __result._M_sequence);
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:345:37: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:347:77: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  347 |       return std::__copy_move_backward_a1<_IsMove>(__first, __last, __result);
      |                                                                             ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr bool __gnu_debug::__valid_range_aux(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:171:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  171 |     __valid_range_aux(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:171:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr bool __gnu_debug::__valid_range_aux(_InputIterator, _InputIterator, typename __gnu_debug::_Distance_traits<_Iterator>::__type&, std::__false_type) [with _InputIterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:205:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  205 |     __valid_range_aux(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:205:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:209:29: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  209 |       if (!__valid_range_aux(__first, __last, std::input_iterator_tag()))
      |            ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:212:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  212 |       __dist = __get_distance(__first, __last);
      |                ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h: In function 'constexpr _BI2 std::__copy_move_backward_a1(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _BI2 = __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:768:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  768 |     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:768:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:769:77: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  769 |     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
      |                                                                             ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h: In function 'constexpr _BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _BI2 = __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:750:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  750 |     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:750:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:756:50: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  756 |           __copy_move_b(__first, __last, __result);
      |                                                  ^
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:762:74: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  762 |                                                                  __result);
      |                                                                          ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:502:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  502 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h: In static member function 'static constexpr _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _BI2 = __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:714:9: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  714 |         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
      |         ^~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:714:9: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
      Test 49: Foundation::Streams:
         Compiling Tests/49/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 50: Foundation::Time:
         Compiling Tests/50/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test45 ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> > >(const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 51: Foundation::Traversal:
         Compiling Tests/51/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test47 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test48 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 52: Foundation::PERFORMANCE:
         Compiling Tests/52/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test34 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test46 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test49 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test50 ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from Test.cpp:16:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::__debug::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test51 ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test52 ... 
   Building Stroika Samples {raspberrypi-g++-11-debug-sanitize_undefined}:
      Building Samples/AppSettings:
      Building Samples/ArchiveUtility:
      Building Samples/Serialization:
      Building Samples/Containers:
      Building Samples/Service:
      Building Samples/SSDPClient:
      Building Samples/SQL:
      Building Samples/SSDPServer:
      Building Samples/Traceroute:
      Building Samples/SystemPerformanceClient:
         Compiling Samples/Serialization/Sources/Main.cpp ... 
         Compiling Samples/AppSettings/Sources/Main.cpp ... 
         Compiling Samples/ArchiveUtility/Sources/ArchiveUtility.cpp ... 
         Compiling Samples/Containers/Sources/Main.cpp ... 
         Compiling Samples/SSDPClient/Sources/SSDPClient.cpp ... 
         Compiling Samples/SSDPServer/Sources/SSDPServer.cpp ... 
         Compiling Samples/SQL/Sources/Main.cpp ... 
         Compiling Samples/SystemPerformanceClient/Sources/SystemPerformanceClient.cpp ... 
         Compiling Samples/Traceroute/Sources/Traceroute.cpp ... 
         Compiling Samples/Service/Sources/Service.cpp ... 
         Compiling Samples/Serialization/Sources/ObjectVariantMapper.cpp ... 
         Compiling Samples/Containers/Sources/Collection.cpp ... 
         Compiling Samples/Service/Sources/Main.cpp ... 
         Compiling Samples/SQL/Sources/ComputerNetwork.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-Traceroute/Traceroute ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-ArchiveUtility/ArchiveUtility ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-SSDPClient/SSDPClient ... 
      Building Samples/WebServer:
      Building Samples/WebService:
         Compiling Samples/WebServer/Sources/WebServer.cpp ... 
         Compiling Samples/WebService/Sources/IWSAPI.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-Service/Service ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = const Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType&; _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
         Compiling Samples/Containers/Sources/Mapping.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-AppSettings/AppSettings ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const int&; _Args = {const Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType&}; _Key = int; _Value = std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = int; _Tp = Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>)>; _Container = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_M_invalidate(std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = int; _Value = std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = int; _Value = std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>; _Alloc = std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<int>; _Hash = std::hash<int>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<int, std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>; _Sequence = std::__debug::unordered_map<int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Frameworks/../Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Frameworks/../Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Frameworks/../Foundation/StroikaPreComp.h:7,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Frameworks/StroikaPreComp.h:7,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SystemPerformanceClient//Sources/SystemPerformanceClient.cpp:4:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
  101 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const int, Stroika::Frameworks::SystemPerformance::Instruments::Process::ProcessType>, false, false>' changed in GCC 7.1
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-Serialization/Serialization ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-SystemPerformanceClient/SystemPerformanceClient ... 
         Building Installers:
            Building DEB installer: 
               temp files: /tmp/tmp.MuLcNCMjbo/; log: IntermediateFiles/raspberrypi-g++-11-debug-sanitize_undefined/Samples-Service/DEB-Installer-Build.Out
         Compiling Samples/Containers/Sources/Sequence.cpp ... 
         Compiling Samples/WebService/Sources/Main.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-SSDPServer/SSDPServer ... 
         Compiling Samples/WebService/Sources/Model.cpp ... 
         Compiling Samples/Containers/Sources/Set.cpp ... 
         Compiling Samples/WebService/Sources/WebServer.cpp ... 
         Compiling Samples/SQL/Sources/DirectEmployeesDB.cpp ... 
         Compiling Samples/WebService/Sources/WSImpl.cpp ... 
         Compiling Samples/SQL/Sources/ORMEmployeesDB.cpp ... 
         Compiling Samples/SQL/Sources/ThreadTest.cpp ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-Containers/Containers ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-WebServer/WebServer ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SQL//Sources/DirectEmployeesDB.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:502:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  502 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:559:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  559 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() const [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:241:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = const std::complex<double>&; _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:472:56: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  472 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::insert(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::value_type&&) [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:351:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  351 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::find(const key_type&) [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:546:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  546 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::end() [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:237:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  237 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  632 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:632:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  625 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:625:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::begin() const [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:233:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  233 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>; _Sequence = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>; _Sequence = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:679:7: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  679 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:681:22: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  681 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:683:45: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  683 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::erase(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator, std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:645:26: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  645 |             _M_invalidate(__tmp);
      |             ~~~~~~~~~~~~~^~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:649:35: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  649 |         auto __next = _Base::erase(__first.base(), __last.base());
      |                       ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:651:31: note: parameter passing for argument of type 'std::__detail::_Node_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  651 |         return { __next, this };
      |                               ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h: In member function 'std::pair<std::__detail::_Node_iterator<_Value, typename _Traits::__constant_iterators::value, typename _Traits::__hash_cached::value>, bool> std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::try_emplace(std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, _KType&&, _Args&& ...) [with _KType = const Stroika::Foundation::Characters::String&; _Args = {const std::complex<double>&}; _Key = Stroika::Foundation::Characters::String; _Value = std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Stroika::Foundation::Characters::String>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable_policy.h:857:9: note: parameter passing for argument of type 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator' changed in GCC 7.1
  857 |         try_emplace(const_iterator, _KType&& __k, _Args&&... __args)
      |         ^~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:79:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
   79 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:672:11: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  672 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:674:11: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_local_iterator' {aka 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_local_iterator'} changed in GCC 7.1
  674 |           [__victim](_Base_const_local_iterator __it)
      |           ^
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'void std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_M_invalidate(std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::_Base_const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:669:7: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  669 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:47,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:740:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  740 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:741:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  741 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h: In member function 'std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::erase(std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator, std::__cxx1998::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  780 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:780:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/bits/unordered_map.h:781:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
  781 |       { return _M_h.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map: In member function 'std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_map<_Key, _Tp, _Hash, _Pred, _Allocator>::cbegin() const [with _Key = Stroika::Foundation::Characters::String; _Tp = std::complex<double>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _Pred = std::equal_to<Stroika::Foundation::Characters::String>; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:245:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  245 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:71:17: note: parameter passing for argument of type 'std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   71 |                 [__local_end](__decltype(__local_end) __it)
      |                 ^
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_M_invalidate(std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_iterator)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_local_if(_Predicate) [with _Predicate = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_M_invalidate(std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_iterator)::<lambda(std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_local_iterator)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:80:51: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_local_iterator' {aka 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_local_iterator'} changed in GCC 7.1
   80 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:91:51: note: parameter passing for argument of type 'const std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   91 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:46,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Value = std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Stroika::Foundation::Characters::String>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2146:5: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
 2146 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2147 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::const_iterator) [with _Key = Stroika::Foundation::Characters::String; _Value = std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >; _Alloc = std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Stroika::Foundation::Characters::String>; _Hash = std::hash<Stroika::Foundation::Characters::String>; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
 2269 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2270 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/hashtable.h:2269:5: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_iterator'} changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.h:102,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_local_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > > >::_M_invalidate_locals()::<lambda(std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:80:51: note: parameter passing for argument of type 'std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   80 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_unordered_container.tcc:91:51: note: parameter passing for argument of type 'const std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   91 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.h:999,
                 from /usr/arm-linux-gnueabihf/include/c++/11/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/11/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/11/functional:61,
                 from /usr/arm-linux-gnueabihf/include/c++/11/pstl/glue_algorithm_defs.h:13,
                 from /usr/arm-linux-gnueabihf/include/c++/11/algorithm:74,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>; _Sequence = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/11/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_iterator.h:2395,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/stl_algobase.h:67,
                 from /usr/arm-linux-gnueabihf/include/c++/11/bits/char_traits.h:39,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ios:40,
                 from /usr/arm-linux-gnueabihf/include/c++/11/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/11/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Frameworks/../Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Frameworks/../Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Frameworks/../Foundation/StroikaPreComp.h:7,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Frameworks/StroikaPreComp.h:7,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:4:
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>]':
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
  101 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, false, true>' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/11/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SQL//Sources/ORMEmployeesDB.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:502:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  502 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:650:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  650 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  651 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:514:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  514 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/11/bits/shared_ptr_base.h:515:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  515 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
               Built: Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-Service/stroika-sampleservice-3.0d1.Linux.armhf.deb
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-WebService/WebService ... 
         Linking Builds/raspberrypi-g++-11-debug-sanitize_undefined/Samples-SQL/SQL ... 
   Building Doxygen Documentation (Builds/Stroika-Doxygen-Help.tar.gz; see Documentation/Doxygen/BUILD.OUT)...done
Building Stroika all {raspberrypi-g++-11-release-sanitize_address}:
   Stroika ThirdPartyComponents Build {raspberrypi-g++-11-release-sanitize_address}:
      Stroika/ThirdPartyComponents/lzma Build 1604 {raspberrypi-g++-11-release-sanitize_address}:
      Stroika/ThirdPartyComponents/sqlite Build 3420000 {raspberrypi-g++-11-release-sanitize_address}:
      Stroika/ThirdPartyComponents/zlib Build 1.2.13 {raspberrypi-g++-11-release-sanitize_address}:
      Stroika/ThirdPartyComponents/xerces 3.2.4 Build {raspberrypi-g++-11-release-sanitize_address}:
         lzma 1604 - Extracting ../Origs-Cache/lzma1604.7z to IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/lzma ... 
         sqlite 3420000 - Extracting ../Origs-Cache/sqlite-amalgamation-3420000.zip to IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/sqlite ... 
         zlib 1.2.13 - Configure (see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/zlib/CONFIGURE-OUT.txt) ...
         Xerces 3.2.4 - Extracting ../Origs-Cache/xerces-c-3.2.4.tar.gz to IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/Xerces ... 
         sqlite 3420000 - Build (See IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/sqlite/BUILD-OUT.txt) ...
         lzma 1604 - Build: see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/lzma/BUILD-OUT.txt ...
         Xerces 3.2.4 - Patching ... 
         Xerces 3.2.4 - Configuring (See IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/Xerces/CONFIGURE-OUT.txt) ... 
         zlib 1.2.13 - Build (see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/zlib/BUILD-OUT.txt) ...
         lzma 1604 - Checking ...  Stroika/ThirdPartyComponents/lzma -    [Succeeded]
         zlib 1.2.13 - Build (see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/zlib/INSTALL-OUT.txt) ...
         zlib 1.2.13 - Checking ...  Stroika/ThirdPartyComponents/zlib -    [Succeeded]
      Stroika/ThirdPartyComponents/boost Build 1_82_0 {raspberrypi-g++-11-release-sanitize_address}:
      Stroika/ThirdPartyComponents/OpenSSL Build 3.1.0 {raspberrypi-g++-11-release-sanitize_address}:
         boost 1_82_0 - Extracting ../Origs-Cache/boost_1_82_0.tar.gz to IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/boost ... 
         openssl 3.1.0 - Extracting ../Origs-Cache/openssl-3.1.0.tar.gz to IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/openssl ... 
         openssl 3.1.0 - Configure (see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/openssl/CONFIG-OUT.txt) ...  
         boost 1_82_0 - Bootstrapping - see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/boost/BOOTSTRAP-OUT.txt ... 
         openssl 3.1.0 - Build (see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/openssl/BUILD-OUT.txt)  ... 
         Xerces 3.2.4 - Compiling (See IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/Xerces/BUILD-OUT.txt) ... 
         boost 1_82_0 - Config+Build; see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/boost/ConfigureAndBuild-OUT.txt ...
         openssl 3.1.0 - Installing (see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/openssl/INSTALL-OUT.txt) ... 
         boost 1_82_0 - Patching Builds/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/include/boost/config/user.hpp
         boost 1_82_0 - Checking ...  Stroika/ThirdPartyComponents/boost -   [Succeeded]
         openssl 3.1.0 - Checking ...  Stroika/ThirdPartyComponents/OpenSSL - [Succeeded]
      Stroika/ThirdPartyComponents/libcurl 8.1.2 Build {raspberrypi-g++-11-release-sanitize_address}:
         curl 8.1.2 - Extracting ../Origs-Cache/curl-8.1.2.tar.gz to IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/curl ... 
         curl 8.1.2 - Build configure tools (see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/curl/BUILD-CONF-TOOLS-OUT.txt) ...
         curl 8.1.2 - Configure (see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/curl/CONFIGURE-OUT.txt) ...
         Xerces 3.2.4 - Copying builds (See IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/Xerces/INSTALL.OUT) ... 
         Xerces 3.2.4 - Checking ...  Stroika/ThirdPartyComponents/Xerces -  [Succeeded]
         curl 8.1.2 - Compiling (see IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/ThirdPartyComponents/curl/BUILD-OUT.txt) ...
         sqlite 3420000 - Checking ...  Stroika/ThirdPartyComponents/sqlite -  [Succeeded]
         curl 8.1.2 - Checking ...  Stroika/ThirdPartyComponents/curl -    [Succeeded]
   Building Stroika Library {raspberrypi-g++-11-release-sanitize_address}:
      Computing /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/Library/Foundation/cached-list-objs
      Building Stroika Foundation Objs:
         Compiling Library/Sources/Stroika/Foundation/Cache/Statistics.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Assertions.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Common/GUID.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Atom.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CString/Utilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/Locale.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/CRC32.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/AES.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/SemWaitableEvent.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ORM/Schema.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/Jenkins.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/Character.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/AssertExternallySynchronizedMutex.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CodeCvt.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/SignalBlock.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/Base64.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/Users.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/SystemConfiguration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/MD5.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/SuperFastHash.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/BadFormatException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/Version.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CodePage.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/BackTrace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/AbortableMutex.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ORM/Versioning.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/RC4.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Debugger.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/CheckedConverter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Demangle.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Fatal.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/FloatConversion.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/Format.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Activity.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/InternetMediaType.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/OpenSSLCryptoStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/InternetMediaTypeRegistry.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/CommandLine.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/MallocGuard.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/DLLSupport.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/ObjectVariantMapper.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/RegularExpression.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Main.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Exceptions.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Trace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/CipherAlgorithm.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/DigestAlgorithm.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ODBC.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/DirectoryIterable.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/FeatureNotSupportedInThisVersionException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/String.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/IntervalTimer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/OptionsFile.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructFieldMetaInfo.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/DerivedKey.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/DirectoryIterator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/SQLite.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Linguistics/MessageUtilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Linguistics/Words.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/String2Int.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Logger.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/Disk.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Module.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/OperationNotSupportedException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Format.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/VariantValue.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/ToString.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/LibraryContext.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/7z/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/Zip/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/UTFConvert.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Statement.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Process.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ProcessRunner.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Compression/Zip/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileInputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileOutputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ProgressMonitor.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Math/LinearAlgebra/Matrix.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/RequiredComponentMissingException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Utils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/RequiredComponentVersionMismatchException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Math/LinearAlgebra/Vector.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/CIDR.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionlessSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileSystem.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Compression/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SharedStaticData.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/BLOB.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SilentException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Signals.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/CommonInsertersAndExtractors.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/BlockAllocator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/Common.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/FStreamSupport.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/SerializeItemToBLOB.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileUtils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SignalHandlers.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/MemoryAllocator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Sleep.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionOrientedMasterSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SpinLock.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/CharacterDelimitedLines/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Profile.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/JSON/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/CharacterDelimitedLines/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/Utilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/XML/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/MemoryMappedFileReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionOrientedStreamSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/EOFException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Thread.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/DNS.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/MountedFilesystem.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/JSON/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/InputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/XML/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/MemoryStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ThreadPool.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Throw.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/PathName.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/TimeOutException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/SharedMemoryStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Interface.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructuredStreamEvents/IConsumer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructuredStreamEvents/ObjectReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/ThroughTmpFileWriter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/WellKnownLocations.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/UserCanceledException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Users.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Date.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/TextReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/DateTime.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Duration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/WaitableEvent.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/WaitForIOReady.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/Namespace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/TextToByteReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Realtime.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/SAXReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/SerializationConfiguration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/WriterUtils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetAddress.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/TimeOfDay.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Timezone.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/LinkMonitor.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Listener.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Neighbors.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Socket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SocketAddress.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SocketStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SystemFirewall.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/UniformResourceIdentification.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/URI.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/ClientErrorException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetProtocol/ICMP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetProtocol/IP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SOAP/Fault.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Cache.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection_libcurl.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection_WinHTTP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/CacheControl.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/ConnectionPool.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Request.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Response.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Cookie.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Headers.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/KeepAlive.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/MessageStartTextInputStreamBinaryAdapter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Request.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Response.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/TransferEncoding.cpp ... 
      Creating Builds/raspberrypi-g++-11-release-sanitize_address/Stroika-Foundation.a ... 
      Computing /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/Library/Frameworks/cached-list-objs
      Building Stroika Frameworks Objs:
         Compiling Library/Sources/Stroika/Frameworks/Modbus/IModbusService.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/NetworkMonitor/Ping.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/Service/Main.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/ConnectionManager.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/NetworkMonitor/Traceroute.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/Modbus/Server.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/CPU.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Server/Basic.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/BasicServer.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/CachingListener.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/PeriodicNotifier.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/SearchResponder.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Server/VariantValue.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/Listener.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/CORS.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/AllInstruments.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Capturer.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Memory.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Basic.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/DefaultFaultInterceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/FileSystemRequestHandler.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Filesystem.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Interceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Network.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/InterceptorChain.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Message.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/Search.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/LoggingInterceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/CaptureSet.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Process.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Request.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/RequestHandler.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Response.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Router.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instrument.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Measurement.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Advertisement.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Common.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/Device.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/DeviceDescription.cpp ... 
      Creating Builds/raspberrypi-g++-11-release-sanitize_address/Stroika-Frameworks.a ... 
   Building Stroika Tools {raspberrypi-g++-11-release-sanitize_address}:
            Compiling Tools/Sources/Stroika/Frameworks/WebServer/HTMLViewCompiler/HTMLViewCompiler.cpp ... 
      Linking  $StroikaRoot/Builds/raspberrypi-g++-11-release-sanitize_address/HTMLViewCompiler...
   Building Stroika Tests {raspberrypi-g++-11-release-sanitize_address}:
      Test 05: Foundation::Containers::DataStructures::Array:
      Test 01: Foundation::Caching:
      Test 02: Foundation::Characters:
      Test 03: Foundation::Common:
      Test 04: Foundation::Configuration:
      Test 06: Foundation::Containers::DataStructures::LinkedList:
      Test 07: Foundation::Containers::DataStructures::LockFree:
      Test 08: Foundation::Containers::DataStructures::DoublyLinkedList:
      Test 09: Foundation::Containers::DataStructures::STLContainerWrapper:
      Test 10: Foundation::Containers::DataStructures::SkipList:
         Compiling Tests/05/Test.cpp ... 
         Compiling Tests/01/Test.cpp ... 
         Compiling Tests/02/Test.cpp ... 
         Compiling Tests/04/Test.cpp ... 
         Compiling Tests/03/Test.cpp ... 
         Compiling Tests/07/Test.cpp ... 
         Compiling Tests/09/Test.cpp ... 
         Compiling Tests/08/Test.cpp ... 
         Compiling Tests/06/Test.cpp ... 
         Compiling Tests/10/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test09 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test10 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test05 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test06 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test08 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test07 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test03 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test04 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test02 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test01 ... 
      Test 11: Foundation::Containers::Association:
         Compiling Tests/11/Test.cpp ... 
      Test 12: Foundation::Containers::Bijection:
         Compiling Tests/12/Test.cpp ... 
      Test 13: Foundation::Containers::Collection:
         Compiling Tests/13/Test.cpp ... 
      Test 14: Foundation::Containers::DataHyperRectangle:
         Compiling Tests/14/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 15: Foundation::Containers::Deque:
         Compiling Tests/15/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 16: Foundation::Containers::KeyedCollection:
         Compiling Tests/16/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 17: Foundation::Containers::Mapping:
         Compiling Tests/17/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test12 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test14 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test15 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test13 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test16 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test11 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test17 ... 
      Test 18: Foundation::Containers::MultiSet:
         Compiling Tests/18/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 19: Foundation::Containers::PriorityQueue:
         Compiling Tests/19/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test18 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 20: Foundation::Containers::Queue:
         Compiling Tests/20/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test19 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 21: Foundation::Containers::Sequence:
         Compiling Tests/21/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test20 ... 
      Test 22: Foundation::Containers::Set:
         Compiling Tests/22/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 23: Foundation::Containers::SortedAssociation:
         Compiling Tests/23/Test.cpp ... 
      Test 24: Foundation::Containers::SortedCollection:
         Compiling Tests/24/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test21 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test22 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test23 ... 
      Test 25: Foundation::Containers::SortedKeyedCollection:
         Compiling Tests/25/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test24 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test25 ... 
      Test 26: Foundation::Containers::SortedMapping:
         Compiling Tests/26/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test26 ... 
      Test 27: Foundation::Containers::SortedMultiSet:
         Compiling Tests/27/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test27 ... 
      Test 28: Foundation::Containers::SortedSet:
         Compiling Tests/28/Test.cpp ... 
      Test 29: Foundation::Containers::Stack:
         Compiling Tests/29/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 30: Foundation::Containers::STL:
         Compiling Tests/30/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test29 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test28 ... 
      Test 31: Foundation::Cryptography:
         Compiling Tests/31/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test30 ... 
      Test 32: Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip):
         Compiling Tests/32/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test31 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 33: Foundation::DataExchange::ObjectVariantMapper:
         Compiling Tests/33/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test32 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 34: Foundation::DataExchange::XML::SaxParser:
         Compiling Tests/34/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test33 ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      Test 35: Foundation::DataExchange::Other:
         Compiling Tests/35/Test.cpp ... 
      Test 36: Foundation::Database:
         Compiling Tests/36/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 37: Foundation::Execution::Exceptions:
         Compiling Tests/37/Test.cpp ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test34 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test37 ... 
      Test 38: Foundation::Execution::ProcessRunner:
         Compiling Tests/38/Test.cpp ... 
      Test 39: Foundation::Execution::Signals:
         Compiling Tests/39/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test35 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test36 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 40: Foundation::Execution::Threads:
         Compiling Tests/40/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test39 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test38 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test40 ... 
      Test 41: Foundation::Execution::ThreadSafetyBuiltinObject:
         Compiling Tests/41/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 42: Foundation::Execution::Other:
         Compiling Tests/42/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test41 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test42 ... 
      Test 43: Foundation::IO::Network:
         Compiling Tests/43/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test43 ... 
      Test 44: Foundation::IO::Network::HTTP:
         Compiling Tests/44/Test.cpp ... 
      Test 45: Foundation::IO::Network::Transfer:
         Compiling Tests/45/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 46: Foundation::IO::Other:
         Compiling Tests/46/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test44 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test45 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test46 ... 
      Test 47: Foundation::Math:
         Compiling Tests/47/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 48: Foundation::Memory:
         Compiling Tests/48/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test47 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test48 ... 
      Test 49: Foundation::Streams:
         Compiling Tests/49/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test49 ... 
      Test 50: Foundation::Time:
         Compiling Tests/50/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 51: Foundation::Traversal:
         Compiling Tests/51/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 52: Foundation::PERFORMANCE:
         Compiling Tests/52/Test.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test50 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from Test.cpp:16:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test51 ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test52 ... 
   Building Stroika Samples {raspberrypi-g++-11-release-sanitize_address}:
      Building Samples/AppSettings:
      Building Samples/ArchiveUtility:
      Building Samples/Containers:
      Building Samples/Serialization:
      Building Samples/Service:
      Building Samples/SSDPClient:
      Building Samples/SSDPServer:
      Building Samples/SQL:
      Building Samples/SystemPerformanceClient:
      Building Samples/Traceroute:
         Compiling Samples/AppSettings/Sources/Main.cpp ... 
         Compiling Samples/Containers/Sources/Main.cpp ... 
         Compiling Samples/ArchiveUtility/Sources/ArchiveUtility.cpp ... 
         Compiling Samples/Serialization/Sources/Main.cpp ... 
         Compiling Samples/SSDPServer/Sources/SSDPServer.cpp ... 
         Compiling Samples/SSDPClient/Sources/SSDPClient.cpp ... 
         Compiling Samples/SystemPerformanceClient/Sources/SystemPerformanceClient.cpp ... 
         Compiling Samples/SQL/Sources/Main.cpp ... 
         Compiling Samples/Traceroute/Sources/Traceroute.cpp ... 
         Compiling Samples/Service/Sources/Service.cpp ... 
         Compiling Samples/Serialization/Sources/ObjectVariantMapper.cpp ... 
         Compiling Samples/Containers/Sources/Collection.cpp ... 
         Compiling Samples/Service/Sources/Main.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-Traceroute/Traceroute ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-ArchiveUtility/ArchiveUtility ... 
         Compiling Samples/SQL/Sources/ComputerNetwork.cpp ... 
         Compiling Samples/Containers/Sources/Mapping.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-AppSettings/AppSettings ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-SSDPClient/SSDPClient ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-Serialization/Serialization ... 
         Compiling Samples/Containers/Sources/Sequence.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-Service/Service ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-SystemPerformanceClient/SystemPerformanceClient ... 
         Compiling Samples/Containers/Sources/Set.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-SSDPServer/SSDPServer ... 
         Compiling Samples/SQL/Sources/DirectEmployeesDB.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-Containers/Containers ... 
         Compiling Samples/SQL/Sources/ORMEmployeesDB.cpp ... 
         Compiling Samples/SQL/Sources/ThreadTest.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-SQL/SQL ... 
      Building Samples/WebServer:
         Compiling Samples/WebServer/Sources/WebServer.cpp ... 
      Building Samples/WebService:
         Compiling Samples/WebService/Sources/IWSAPI.cpp ... 
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-WebServer/WebServer ... 
         Compiling Samples/WebService/Sources/Main.cpp ... 
         Compiling Samples/WebService/Sources/Model.cpp ... 
         Compiling Samples/WebService/Sources/WebServer.cpp ... 
         Compiling Samples/WebService/Sources/WSImpl.cpp ... 
         Building Installers:
            Building DEB installer: 
               temp files: /tmp/tmp.qQo7KtN5mS/; log: IntermediateFiles/raspberrypi-g++-11-release-sanitize_address/Samples-Service/DEB-Installer-Build.Out
               Built: Builds/raspberrypi-g++-11-release-sanitize_address/Samples-Service/stroika-sampleservice-3.0d1.Linux.armhf.deb
         Linking Builds/raspberrypi-g++-11-release-sanitize_address/Samples-WebService/WebService ... 
Building Stroika all {raspberrypi-g++-12-debug-sanitize_undefined}:
   Stroika ThirdPartyComponents Build {raspberrypi-g++-12-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents/lzma Build 1604 {raspberrypi-g++-12-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents/sqlite Build 3420000 {raspberrypi-g++-12-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents/zlib Build 1.2.13 {raspberrypi-g++-12-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents/xerces 3.2.4 Build {raspberrypi-g++-12-debug-sanitize_undefined}:
         lzma 1604 - Extracting ../Origs-Cache/lzma1604.7z to IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/lzma ... 
         sqlite 3420000 - Extracting ../Origs-Cache/sqlite-amalgamation-3420000.zip to IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/sqlite ... 
         zlib 1.2.13 - Configure (see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/zlib/CONFIGURE-OUT.txt) ...
         Xerces 3.2.4 - Extracting ../Origs-Cache/xerces-c-3.2.4.tar.gz to IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/Xerces ... 
         sqlite 3420000 - Build (See IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/sqlite/BUILD-OUT.txt) ...
         lzma 1604 - Build: see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/lzma/BUILD-OUT.txt ...
         Xerces 3.2.4 - Patching ... 
         Xerces 3.2.4 - Configuring (See IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/Xerces/CONFIGURE-OUT.txt) ... 
         lzma 1604 - Checking ...  Stroika/ThirdPartyComponents/lzma -    [Succeeded]
         zlib 1.2.13 - Build (see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/zlib/BUILD-OUT.txt) ...
         zlib 1.2.13 - Build (see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/zlib/INSTALL-OUT.txt) ...
         zlib 1.2.13 - Checking ...  Stroika/ThirdPartyComponents/zlib -    [Succeeded]
      Stroika/ThirdPartyComponents/boost Build 1_82_0 {raspberrypi-g++-12-debug-sanitize_undefined}:
      Stroika/ThirdPartyComponents/OpenSSL Build 3.1.0 {raspberrypi-g++-12-debug-sanitize_undefined}:
         boost 1_82_0 - Extracting ../Origs-Cache/boost_1_82_0.tar.gz to IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/boost ... 
         openssl 3.1.0 - Extracting ../Origs-Cache/openssl-3.1.0.tar.gz to IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/openssl ... 
         openssl 3.1.0 - Configure (see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/openssl/CONFIG-OUT.txt) ...  
         boost 1_82_0 - Bootstrapping - see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/boost/BOOTSTRAP-OUT.txt ... 
         openssl 3.1.0 - Build (see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/openssl/BUILD-OUT.txt)  ... 
         Xerces 3.2.4 - Compiling (See IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/Xerces/BUILD-OUT.txt) ... 
         sqlite 3420000 - Checking ...  Stroika/ThirdPartyComponents/sqlite -  [Succeeded]
         boost 1_82_0 - Config+Build; see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/boost/ConfigureAndBuild-OUT.txt ...
         openssl 3.1.0 - Installing (see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/openssl/INSTALL-OUT.txt) ... 
         openssl 3.1.0 - Checking ...  Stroika/ThirdPartyComponents/OpenSSL - [Succeeded]
      Stroika/ThirdPartyComponents/libcurl 8.1.2 Build {raspberrypi-g++-12-debug-sanitize_undefined}:
         curl 8.1.2 - Extracting ../Origs-Cache/curl-8.1.2.tar.gz to IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/curl ... 
         curl 8.1.2 - Build configure tools (see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/curl/BUILD-CONF-TOOLS-OUT.txt) ...
         curl 8.1.2 - Configure (see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/curl/CONFIGURE-OUT.txt) ...
         boost 1_82_0 - Patching Builds/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/include/boost/config/user.hpp
         boost 1_82_0 - Checking ...  Stroika/ThirdPartyComponents/boost -   [Succeeded]
         Xerces 3.2.4 - Copying builds (See IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/Xerces/INSTALL.OUT) ... 
         Xerces 3.2.4 - Checking ...  Stroika/ThirdPartyComponents/Xerces -  [Succeeded]
         curl 8.1.2 - Compiling (see IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/ThirdPartyComponents/curl/BUILD-OUT.txt) ...
         curl 8.1.2 - Checking ...  Stroika/ThirdPartyComponents/curl -    [Succeeded]
   Building Stroika Library {raspberrypi-g++-12-debug-sanitize_undefined}:
      Computing /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/Library/Foundation/cached-list-objs
      Building Stroika Foundation Objs:
         Compiling Library/Sources/Stroika/Foundation/Debug/Assertions.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Atom.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cache/Statistics.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Common/GUID.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CString/Utilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/Locale.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/DirectoryIterable.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/SemWaitableEvent.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ORM/Schema.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/CRC32.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/Jenkins.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/Character.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/AssertExternallySynchronizedMutex.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CodeCvt.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/SignalBlock.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/DirectoryIterator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/MD5.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/SystemConfiguration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/BadFormatException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/CIDR.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/Users.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CodePage.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/BackTrace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Debugger.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/SuperFastHash.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ORM/Versioning.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/CheckedConverter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/Disk.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionlessSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/AbortableMutex.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Demangle.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Fatal.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/AES.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/FloatConversion.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/InternetMediaType.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Activity.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/Format.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/MallocGuard.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/Base64.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/unordered_set:52,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/../Concrete/KeyedCollection_stdhashset.h:7,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.inl:15,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.h:123,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.inl:14,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.h:581,
                 from ../../Characters/../Memory/../Containers/Adapters/Adder.h:14,
                 from ../../Characters/../Memory/Optional.h:16,
                 from ../../Characters/FloatConversion.inl:16,
                 from ../../Characters/FloatConversion.h:284,
                 from ../../Characters/ToString.inl:22,
                 from ../../Characters/ToString.h:125,
                 from Disk.cpp:14:
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:492:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  492 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::end() const [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:245:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  245 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::find(const _Kt&) const [with _Kt = std::filesystem::__cxx11::path; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:500:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  500 |         { return { _Base::find(__k), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_set<_Value1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::insert(const value_type&) [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:353:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  353 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::erase(iterator) [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:578:46: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  578 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:578:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::insert(const_iterator, const value_type&) [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:361:34: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  361 |         auto __it = _Base::insert(__hint.base(), __obj);
      |                     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:363:29: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  363 |         return { __it, this };
      |                             ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::erase(const_iterator) [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:564:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  564 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:564:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::find(const _Kt&) [with _Kt = std::filesystem::__cxx11::path; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:487:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  487 |         { return { _Base::find(__k), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::end() [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:241:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::begin() const [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:237:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  237 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/12/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/12/functional:61,
                 from ../../Characters/../Common/Compare.h:10,
                 from ../../Characters/String.h:14,
                 from ../../Characters/Format.h:15,
                 from Disk.cpp:11:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>; _Sequence = std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>; _Sequence = std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_M_erase(_Base_const_iterator) [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:625:7: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  625 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:627:22: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  627 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:629:45: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  629 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/unordered_set:47:
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h: In member function 'std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(const_iterator, const value_type&) [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h:450:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  450 |       insert(const_iterator __hint, const value_type& __x)
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h:451:27: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  451 |       { return _M_h.insert(__hint, __x); }
      |                ~~~~~~~~~~~^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_map:49:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h:169:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  169 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:618:11: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  618 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'void std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_M_invalidate(_Base_const_iterator) [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:615:7: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  615 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h: In member function 'std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::erase(const_iterator) [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h:523:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  523 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h:524:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  524 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/12/unordered_map:46:
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable_policy.h: In member function 'std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::insert(const_iterator, const value_type&) [with _Key = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>; _ExtractKey = std::__detail::_Identity; _Equal = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable_policy.h:895:7: note: parameter passing for argument of type 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' changed in GCC 7.1
  895 |       insert(const_iterator __hint, const value_type& __v)
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable_policy.h:899:29: note: parameter passing for argument of type 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' changed in GCC 7.1
  899 |         return __h._M_insert(__hint, __v, __node_gen, __unique_keys{});
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::cbegin() const [with _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:249:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
  249 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h:192:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>)>; _Container = std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::_M_invalidate(_Base_const_iterator)::<lambda(std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::_Base_const_iterator)>; _Container = std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::FileSystem::DiskInfoType, true, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(const_iterator) [with _Key = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>; _ExtractKey = std::__detail::_Identity; _Equal = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable.h:2290:5: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
 2290 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2291 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(const_iterator, _Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const Stroika::Foundation::IO::FileSystem::DiskInfoType&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Stroika::Foundation::IO::FileSystem::DiskInfoType, false> > >; _Key = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Value = Stroika::Foundation::IO::FileSystem::DiskInfoType; _Alloc = std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>; _ExtractKey = std::__detail::_Identity; _Equal = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable.h:921:9: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::FileSystem::DiskInfoType, Stroika::Foundation::IO::FileSystem::DiskInfoType, std::allocator<Stroika::Foundation::IO::FileSystem::DiskInfoType>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementEqualsComparer<std::equal_to<std::filesystem::__cxx11::path> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::FileSystem::DiskInfoType, std::filesystem::__cxx11::path, std::function<std::filesystem::__cxx11::path(const Stroika::Foundation::IO::FileSystem::DiskInfoType&)> > >::ElementHash<std::hash<std::filesystem::__cxx11::path> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  921 |         _M_insert(const_iterator, _Arg&& __arg,
      |         ^~~~~~~~~
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Main.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ODBC.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Trace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/Version.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionOrientedMasterSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/RegularExpression.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/CommandLine.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/RC4.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/DLLSupport.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/InternetMediaTypeRegistry.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileInputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionOrientedStreamSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileOutputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/SQLite.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/OpenSSLCryptoStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Linguistics/MessageUtilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Exceptions.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/DNS.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/String.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Interface.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Linguistics/Words.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileSystem.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/CipherAlgorithm.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/FeatureNotSupportedInThisVersionException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/DigestAlgorithm.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Statement.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Utils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/IntervalTimer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/ObjectVariantMapper.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileUtils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/DerivedKey.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/LibraryContext.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/unordered_set:52,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/../Concrete/KeyedCollection_stdhashset.h:7,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.inl:15,
                 from ../../Characters/../Memory/../Containers/Adapters/../Factory/KeyedCollection_Factory.h:123,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.inl:14,
                 from ../../Characters/../Memory/../Containers/Adapters/../KeyedCollection.h:581,
                 from ../../Characters/../Memory/../Containers/Adapters/Adder.h:14,
                 from ../../Characters/../Memory/Optional.h:16,
                 from ../../Characters/FloatConversion.inl:16,
                 from ../../Characters/FloatConversion.h:284,
                 from ../../Characters/ToString.inl:22,
                 from ../../Characters/ToString.h:125,
                 from Interface.cpp:39:
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::find(const key_type&) const [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:492:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  492 |       { return { _Base::find(__key), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::end() const [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:245:37: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  245 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::find(const _Kt&) const [with _Kt = Stroika::Foundation::Characters::String; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:500:43: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  500 |         { return { _Base::find(__k), this }; }
      |                                           ^
         Compiling Library/Sources/Stroika/Foundation/Characters/String2Int.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::unordered_set<_Value1, _Hash1, _Pred1, _Alloc1>::iterator, std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator> >, bool> std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::insert(const value_type&) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:353:54: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  353 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::erase(iterator) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:578:46: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  578 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:578:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::insert(const_iterator, const value_type&) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:361:34: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  361 |         auto __it = _Base::insert(__hint.base(), __obj);
      |                     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:363:29: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  363 |         return { __it, this };
      |                             ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::erase(const_iterator) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:564:46: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  564 |         return { _M_erase(__it.base()), this };
      |                                              ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:564:46: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::find(const _Kt&) [with _Kt = Stroika::Foundation::Characters::String; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:487:43: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  487 |         { return { _Base::find(__k), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::end() [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:241:37: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  241 |       { return { _Base::end(), this }; }
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::begin() const [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:237:39: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  237 |       { return { _Base::begin(), this }; }
      |                                       ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/vector:42,
                 from /usr/arm-linux-gnueabihf/include/c++/12/vector:74,
                 from /usr/arm-linux-gnueabihf/include/c++/12/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/12/random:49,
                 from Interface.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>; _Sequence = std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>; _Sequence = std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::__detail::_Node_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_Base_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_M_erase(_Base_const_iterator) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:625:7: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  625 |       _M_erase(_Base_const_iterator __victim)
      |       ^~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:627:22: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  627 |         _M_invalidate(__victim);
      |         ~~~~~~~~~~~~~^~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:629:45: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  629 |         _Base_iterator __next = _Base::erase(__victim);
      |                                 ~~~~~~~~~~~~^~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/unordered_set:47:
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h: In member function 'std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(const_iterator, const value_type&) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h:450:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  450 |       insert(const_iterator __hint, const value_type& __x)
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h:451:27: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  451 |       { return _M_h.insert(__hint, __x); }
      |                ~~~~~~~~~~~^~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/12/memory:77,
                 from ../Characters/../Debug/AssertExternallySynchronizedMutex.h:13,
                 from ../Characters/StringBuilder.h:9,
                 from IntervalTimer.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Foundation/Characters/ToString.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_map:49,
                 from /usr/arm-linux-gnueabihf/include/c++/12/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/12/functional:61,
                 from ../../Characters/../Common/Compare.h:10,
                 from ../../Characters/String.h:14,
                 from ../../Characters/Format.h:15,
                 from Interface.cpp:37:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h:169:32: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  169 |         this->_M_invalidate_if([__end](__decltype(__end) __it)
      |                                ^
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:587:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  587 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:618:11: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  618 |           [__victim](_Base_const_iterator __it) { return __it == __victim; });
      |           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'void std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::_M_invalidate(_Base_const_iterator) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:615:7: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  615 |       _M_invalidate(_Base_const_iterator __victim)
      |       ^~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h: In member function 'std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::__cxx1998::unordered_set<_Value, _Hash, _Pred, _Alloc>::erase(const_iterator) [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h:523:7: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  523 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/unordered_set.h:524:26: note: parameter passing for argument of type 'std::__cxx1998::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  524 |       { return _M_h.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable.h:35,
                 from /usr/arm-linux-gnueabihf/include/c++/12/unordered_map:46:
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable_policy.h: In member function 'std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::insert(const_iterator, const value_type&) [with _Key = Stroika::Foundation::IO::Network::Interface; _Value = Stroika::Foundation::IO::Network::Interface; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>; _ExtractKey = std::__detail::_Identity; _Equal = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable_policy.h:895:7: note: parameter passing for argument of type 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' changed in GCC 7.1
  895 |       insert(const_iterator __hint, const value_type& __v)
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable_policy.h:899:29: note: parameter passing for argument of type 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' changed in GCC 7.1
  899 |         return __h._M_insert(__hint, __v, __node_gen, __unique_keys{});
      |                ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:587:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  587 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set: In member function 'std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::const_iterator std::__debug::unordered_set<_Key, _Hash, _Pred, _Allocator>::cbegin() const [with _Value = Stroika::Foundation::IO::Network::Interface; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _Pred = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_set:249:40: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
  249 |       { return { _Base::cbegin(), this }; }
      |                                        ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h:192:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> > >::_M_invalidate_all()::<lambda(std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>)>; _Container = std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_if(_Predicate) [with _Predicate = std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_M_invalidate(_Base_const_iterator)::<lambda(std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator)>; _Container = std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:48:51: note: parameter passing for argument of type 'std::__debug::unordered_set<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, std::allocator<Stroika::Foundation::IO::Network::Interface> >::_Base_const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
   48 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:58:51: note: parameter passing for argument of type 'const std::__detail::_Node_const_iterator<Stroika::Foundation::IO::Network::Interface, true, false>' changed in GCC 7.1
   58 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::erase(const_iterator) [with _Key = Stroika::Foundation::IO::Network::Interface; _Value = Stroika::Foundation::IO::Network::Interface; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>; _ExtractKey = std::__detail::_Identity; _Equal = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable.h:2290:5: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
 2290 |     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2291 |                _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable.h: In member function 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _Hash, _RangeHash, _Unused, _RehashPolicy, _Traits>::_M_insert(const_iterator, _Arg&&, const _NodeGenerator&, std::true_type) [with _Arg = const Stroika::Foundation::IO::Network::Interface&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Stroika::Foundation::IO::Network::Interface, false> > >; _Key = Stroika::Foundation::IO::Network::Interface; _Value = Stroika::Foundation::IO::Network::Interface; _Alloc = std::allocator<Stroika::Foundation::IO::Network::Interface>; _ExtractKey = std::__detail::_Identity; _Equal = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >; _Hash = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >; _RangeHash = std::__detail::_Mod_range_hashing; _Unused = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/hashtable.h:921:9: note: parameter passing for argument of type 'std::_Hashtable<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator' {aka 'std::__detail::_Insert_base<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::IO::Network::Interface, std::allocator<Stroika::Foundation::IO::Network::Interface>, std::__detail::_Identity, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementEqualsComparer<std::equal_to<Stroika::Foundation::Characters::String> >, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdhashset<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::IO::Network::Interface, Stroika::Foundation::Characters::String, std::function<Stroika::Foundation::Characters::String(const Stroika::Foundation::IO::Network::Interface&)> > >::ElementHash<std::hash<Stroika::Foundation::Characters::String> >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::const_iterator'} changed in GCC 7.1
  921 |         _M_insert(const_iterator, _Arg&& __arg,
      |         ^~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/set:41,
                 from /usr/arm-linux-gnueabihf/include/c++/12/set:67,
                 from ../Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../Characters/../Containers/Sequence.h:16,
                 from ../Characters/String.h:15,
                 from ../Characters/StringBuilder.h:12:
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator std::__debug::set<_Key, _Cmp, _Allocator>::find(const key_type&) const [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:450:53: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  450 |       { return const_iterator(_Base::find(__x), this); }
      |                                                     ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator std::__debug::set<_Key, _Cmp, _Allocator>::end() const [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:186:49: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  186 |       { return const_iterator(_Base::end(), this); }
      |                                                 ^
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Format.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator std::__debug::set<_Key, _Cmp, _Allocator>::find(const _Kt&) const [with _Kt = Stroika::Foundation::Execution::Function<void()>; _Req = void; _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:465:43: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  465 |         { return { _Base::find(__x), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::set<_Key, _Compare, _Allocator>::iterator, std::__debug::set<_Key, _Cmp, _Allocator> >, bool> std::__debug::set<_Key, _Cmp, _Allocator>::insert(const value_type&) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:254:42: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  254 |         return std::pair<iterator, bool>(iterator(__res.first, this),
      |                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::iterator std::__debug::set<_Key, _Cmp, _Allocator>::erase(const_iterator) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:348:49: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  348 |         return { erase(__position.base()), this };
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:348:49: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::iterator std::__debug::set<_Key, _Cmp, _Allocator>::insert(const_iterator, const value_type&) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:271:68: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  271 |         return iterator(_Base::insert(__position.base(), __x), this);
      |                                                                    ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:271:68: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::iterator std::__debug::set<_Key, _Cmp, _Allocator>::find(const _Kt&) [with _Kt = Stroika::Foundation::Execution::Function<void()>; _Req = void; _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:458:43: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  458 |         { return { _Base::find(__x), this }; }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::iterator std::__debug::set<_Key, _Cmp, _Allocator>::end() [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:182:43: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  182 |       { return iterator(_Base::end(), this); }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator std::__debug::set<_Key, _Cmp, _Allocator>::begin() const [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:178:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  178 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/vector:42,
                 from /usr/arm-linux-gnueabihf/include/c++/12/vector:74,
                 from /usr/arm-linux-gnueabihf/include/c++/12/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/12/random:49,
                 from IntervalTimer.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Sequence = std::__debug::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:536:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  536 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:538:30: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  538 |       : _Safe_base(__i, __seq)
      |                              ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::_Base_iterator std::__debug::set<_Key, _Cmp, _Allocator>::erase(_Base_const_iterator) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:352:7: note: parameter passing for argument of type 'std::__debug::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::_Base_const_iterator' {aka 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator'} changed in GCC 7.1
  352 |       erase(_Base_const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:356:28: note: parameter passing for argument of type 'std::__debug::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::_Base_const_iterator' {aka 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator'} changed in GCC 7.1
  356 |         return _Base::erase(__position);
      |                ~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/set:61:
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_set.h: In member function 'std::__cxx1998::set<_Key, _Compare, _Alloc>::iterator std::__cxx1998::set<_Key, _Compare, _Alloc>::insert(const_iterator, const value_type&) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_set.h:546:7: note: parameter passing for argument of type 'std::__cxx1998::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' {aka 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator'} changed in GCC 7.1
  546 |       insert(const_iterator __position, const value_type& __x)
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_set.h:547:38: note: parameter passing for argument of type 'std::__cxx1998::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' {aka 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator'} changed in GCC 7.1
  547 |       { return _M_t._M_insert_unique_(__position, __x); }
      |                ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/MemoryMappedFileReader.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Sequence = std::__debug::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_set.h: In member function 'std::__cxx1998::set<_Key, _Compare, _Alloc>::iterator std::__cxx1998::set<_Key, _Compare, _Alloc>::erase(const_iterator) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_set.h:654:7: note: parameter passing for argument of type 'std::__cxx1998::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' {aka 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator'} changed in GCC 7.1
  654 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_set.h:655:26: note: parameter passing for argument of type 'std::__cxx1998::set<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' {aka 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator'} changed in GCC 7.1
  655 |       { return _M_t.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/set:60:
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique_(const_iterator, _Arg&&) [with _Arg = const Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&; _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Val = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _KeyOfValue = std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1058:9: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 1058 |         _M_insert_unique_(const_iterator __pos, _Arg&& __x)
      |         ^~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1061:35: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 1061 |           return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
      |                  ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h: In member function 'std::__debug::set<_Key, _Cmp, _Allocator>::const_iterator std::__debug::set<_Key, _Cmp, _Allocator>::cbegin() const [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Allocator = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/set.h:207:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>' changed in GCC 7.1
  207 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const_iterator) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Val = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _KeyOfValue = std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1192:7: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 1192 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1197:21: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 1197 |         _M_erase_aux(__position);
      |         ~~~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique_(const_iterator, _Arg&&, _NodeGen&) [with _Arg = const Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&; _NodeGen = std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::_Alloc_node; _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Val = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _KeyOfValue = std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:2270:7: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 2270 |       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase_aux(const_iterator) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Val = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _KeyOfValue = std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:2488:5: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 2488 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(const_iterator, const key_type&) [with _Key = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _Val = Stroika::Foundation::Execution::IntervalTimer::RegisteredTask; _KeyOfValue = std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>; _Compare = Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:2209:5: note: parameter passing for argument of type 'std::_Rb_tree<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, std::_Identity<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>, Stroika::Foundation::Containers::Concrete::KeyedCollection_stdset<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Containers::KeyedCollection_DefaultTraits<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, Stroika::Foundation::Execution::Function<void()>, Stroika::Foundation::Execution::IntervalTimer::Key_Extractor_> >::SetInOrderComparer<std::less<Stroika::Foundation::Execution::Function<void()> > >, Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask> >::const_iterator' changed in GCC 7.1
 2209 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask>(const Iterator<Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask, int, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask*, Stroika::Foundation::Execution::IntervalTimer::RegisteredTask&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/MountedFilesystem.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Logger.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetAddress.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/UTFConvert.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Module.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/OptionsFile.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Math/LinearAlgebra/Matrix.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructFieldMetaInfo.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/BLOB.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/OperationNotSupportedException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Math/LinearAlgebra/Vector.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/CommonInsertersAndExtractors.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/LinkMonitor.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Process.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Listener.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ProcessRunner.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/FStreamSupport.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ProgressMonitor.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/BlockAllocator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/RequiredComponentMissingException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/SerializeItemToBLOB.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/PathName.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/VariantValue.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/Common.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/MemoryAllocator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/ThroughTmpFileWriter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/WellKnownLocations.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/RequiredComponentVersionMismatchException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/Utilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SharedStaticData.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SilentException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Signals.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SignalHandlers.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Sleep.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SpinLock.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/EOFException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/InputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Thread.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ThreadPool.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Neighbors.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Throw.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/TimeOutException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/MemoryStream.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/12/memory:77,
                 from ../Characters/../Common/Compare.h:11,
                 from ../Characters/String.h:14,
                 from ../Characters/FloatConversion.h:15,
                 from VariantValue.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; _Args = {signed char&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; _Args = {short int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; _Args = {int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; _Args = {long int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; _Args = {long long int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; _Args = {unsigned char&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; _Args = {short unsigned int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; _Args = {unsigned int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; _Args = {long unsigned int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; _Args = {long long unsigned int&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; _Args = {float&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; _Args = {double&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; _Args = {long double&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {signed char&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {short int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {long int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {long long int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {unsigned char&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Foundation/Streams/SharedMemoryStream.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {short unsigned int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {unsigned int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {long unsigned int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {long long unsigned int&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {float&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {double&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {long double&}; _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:587:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long int> >' changed in GCC 7.1
  587 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:587:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long long unsigned int> >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:587:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::DataExchange::VariantValue::TIRep_<long double> >' changed in GCC 7.1
         Compiling Library/Sources/Stroika/Foundation/Execution/UserCanceledException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Users.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Socket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Date.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/TextReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/WaitableEvent.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/DateTime.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/7z/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SocketAddress.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Duration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Realtime.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/TextToByteReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/WaitForIOReady.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SocketStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/Zip/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/TimeOfDay.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Compression/Zip/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SystemFirewall.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Timezone.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/UniformResourceIdentification.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/CharacterDelimitedLines/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/CharacterDelimitedLines/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructuredStreamEvents/IConsumer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Profile.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/JSON/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructuredStreamEvents/ObjectReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/URI.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Compression/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/Namespace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/SAXReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/SerializationConfiguration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/WriterUtils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/ClientErrorException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/CacheControl.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetProtocol/ICMP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetProtocol/IP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/JSON/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SOAP/Fault.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Cookie.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/XML/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Cache.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Headers.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/KeepAlive.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/XML/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/MessageStartTextInputStreamBinaryAdapter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Request.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Response.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/TransferEncoding.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection_libcurl.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection_WinHTTP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/ConnectionPool.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Request.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Response.cpp ... 
      Creating Builds/raspberrypi-g++-12-debug-sanitize_undefined/Stroika-Foundation.a ... 
      Computing /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/Library/Frameworks/cached-list-objs
      Building Stroika Frameworks Objs:
         Compiling Library/Sources/Stroika/Frameworks/NetworkMonitor/Ping.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/Service/Main.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/Modbus/IModbusService.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/ConnectionManager.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/NetworkMonitor/Traceroute.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/Modbus/Server.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/CPU.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Server/Basic.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/CachingListener.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/BasicServer.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Server/VariantValue.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/Listener.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/set:42,
                 from /usr/arm-linux-gnueabihf/include/c++/12/set:67,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from ../../Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from ../../Foundation/Characters/../Containers/Sequence.h:16,
                 from ../../Foundation/Characters/String.h:15,
                 from ../../Foundation/Characters/StringBuilder.h:12,
                 from Ping.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::const_iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::find(const key_type&) const [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h:439:53: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  439 |       { return const_iterator(_Base::find(__x), this); }
      |                                                     ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::const_iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::end() const [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h:188:49: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  188 |       { return const_iterator(_Base::end(), this); }
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::insert(const value_type&) [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h:251:49: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  251 |       { return iterator(_Base::insert(__x), this); }
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::erase(const_iterator) [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h:335:49: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  335 |         return { erase(__position.base()), this };
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h:335:49: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::const_iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::begin() const [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h:180:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  180 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/forward_list:42,
                 from /usr/arm-linux-gnueabihf/include/c++/12/forward_list:43,
                 from ../../Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:12,
                 from ../../Foundation/Characters/StringBuilder.h:9:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<double>; _Sequence = std::__debug::multiset<double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:536:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  536 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:538:30: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  538 |       : _Safe_base(__i, __seq)
      |                              ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::_Base_iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::erase(_Base_const_iterator) [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h:339:7: note: parameter passing for argument of type 'std::__debug::multiset<double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::_Base_const_iterator' {aka 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator'} changed in GCC 7.1
  339 |       erase(_Base_const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h:343:28: note: parameter passing for argument of type 'std::__debug::multiset<double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::_Base_const_iterator' {aka 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator'} changed in GCC 7.1
  343 |         return _Base::erase(__position);
      |                ~~~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<double>; _Sequence = std::__debug::multiset<double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/set:62:
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_multiset.h: In member function 'std::__cxx1998::multiset<_Key, _Compare, _Alloc>::iterator std::__cxx1998::multiset<_Key, _Compare, _Alloc>::erase(const_iterator) [with _Key = double; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_multiset.h:640:7: note: parameter passing for argument of type 'std::__cxx1998::multiset<double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator' {aka 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator'} changed in GCC 7.1
  640 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_multiset.h:641:26: note: parameter passing for argument of type 'std::__cxx1998::multiset<double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator' {aka 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator'} changed in GCC 7.1
  641 |       { return _M_t.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h: In member function 'std::__debug::multiset<_Key, _Cmp, _Allocator>::const_iterator std::__debug::multiset<_Key, _Cmp, _Allocator>::cbegin() const [with _Key = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/multiset.h:209:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<double>' changed in GCC 7.1
  209 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/set:60:
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const_iterator) [with _Key = double; _Val = double; _KeyOfValue = std::_Identity<double>; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1192:7: note: parameter passing for argument of type 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator' changed in GCC 7.1
 1192 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1197:21: note: parameter passing for argument of type 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator' changed in GCC 7.1
 1197 |         _M_erase_aux(__position);
      |         ~~~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase_aux(const_iterator) [with _Key = double; _Val = double; _KeyOfValue = std::_Identity<double>; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:2488:5: note: parameter passing for argument of type 'std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<double> >::const_iterator' changed in GCC 7.1
 2488 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Library/Sources/Stroika/Frameworks/WebServer/CORS.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Basic.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/DefaultFaultInterceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/PeriodicNotifier.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/SearchResponder.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/FileSystemRequestHandler.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/AllInstruments.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Interceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Memory.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/InterceptorChain.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Message.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/LoggingInterceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Request.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/Search.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Capturer.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/RequestHandler.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Response.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Filesystem.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Network.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Router.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Advertisement.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Process.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/CaptureSet.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instrument.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Common.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Measurement.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/Device.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/DeviceDescription.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/12/functional:61,
                 from ../../../Foundation/Characters/../Common/Compare.h:10,
                 from ../../../Foundation/Characters/String.h:14,
                 from ../../../Foundation/Characters/FloatConversion.h:15,
                 from Network.cpp:12:
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_map:738:11: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_local_iterator' {aka 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_local_iterator'} changed in GCC 7.1
  738 |           [__victim](_Base_const_local_iterator __it)
      |           ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_map:49:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h:71:17: note: parameter passing for argument of type 'std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   71 |                 [__local_end](__decltype(__local_end) __it)
      |                 ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h:192:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_local_if(_Predicate) [with _Predicate = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_M_invalidate(_Base_const_iterator)::<lambda(std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_local_iterator)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:80:51: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >::_Base_const_local_iterator' {aka 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_local_iterator'} changed in GCC 7.1
   80 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:91:51: note: parameter passing for argument of type 'const std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   91 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_local_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > > >::_M_invalidate_locals()::<lambda(std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, {anonymous}::Last, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last> > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:80:51: note: parameter passing for argument of type 'std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   80 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:91:51: note: parameter passing for argument of type 'const std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, {anonymous}::Last>, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   91 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
      Creating Builds/raspberrypi-g++-12-debug-sanitize_undefined/Stroika-Frameworks.a ... 
   Building Stroika Tools {raspberrypi-g++-12-debug-sanitize_undefined}:
            Compiling Tools/Sources/Stroika/Frameworks/WebServer/HTMLViewCompiler/HTMLViewCompiler.cpp ... 
      Linking  $StroikaRoot/Builds/raspberrypi-g++-12-debug-sanitize_undefined/HTMLViewCompiler...
   Building Stroika Tests {raspberrypi-g++-12-debug-sanitize_undefined}:
      Test 07: Foundation::Containers::DataStructures::LockFree:
      Test 05: Foundation::Containers::DataStructures::Array:
      Test 02: Foundation::Characters:
      Test 01: Foundation::Caching:
      Test 04: Foundation::Configuration:
      Test 06: Foundation::Containers::DataStructures::LinkedList:
      Test 03: Foundation::Common:
      Test 08: Foundation::Containers::DataStructures::DoublyLinkedList:
      Test 09: Foundation::Containers::DataStructures::STLContainerWrapper:
      Test 10: Foundation::Containers::DataStructures::SkipList:
         Compiling Tests/02/Test.cpp ... 
         Compiling Tests/04/Test.cpp ... 
         Compiling Tests/07/Test.cpp ... 
         Compiling Tests/06/Test.cpp ... 
         Compiling Tests/10/Test.cpp ... 
         Compiling Tests/03/Test.cpp ... 
         Compiling Tests/05/Test.cpp ... 
         Compiling Tests/01/Test.cpp ... 
         Compiling Tests/08/Test.cpp ... 
         Compiling Tests/09/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test10 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test09 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test05 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test06 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test08 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/vector:74,
                 from /usr/arm-linux-gnueabihf/include/c++/12/bits/random.h:34,
                 from /usr/arm-linux-gnueabihf/include/c++/12/random:49,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::iterator std::__debug::vector<_Tp, _Allocator>::begin() [with _Tp = Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement; _Allocator = std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector:300:45: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  300 |       { return iterator(_Base::begin(), this); }
      |                                             ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::iterator std::__debug::vector<_Tp, _Allocator>::end() [with _Tp = Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement; _Allocator = std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector:310:43: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  310 |       { return iterator(_Base::end(), this); }
      |                                           ^
      Test 11: Foundation::Containers::Association:
         Compiling Tests/11/Test.cpp ... 
      Test 12: Foundation::Containers::Bijection:
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/vector:42:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:685:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  685 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:687:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  687 |       : _Safe_base(__i, __seq)
      |                              ^
         Compiling Tests/12/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test07 ... 
      Test 13: Foundation::Containers::Collection:
         Compiling Tests/13/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 14: Foundation::Containers::DataHyperRectangle:
         Compiling Tests/14/Test.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/vector:70:
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc: In member function 'constexpr std::__cxx1998::vector<_Tp, _Alloc>::reference std::__cxx1998::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement}; _Tp = Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement; _Alloc = std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc:123:28: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  123 |           _M_realloc_insert(end(), std::forward<_Args>(__args)...);
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:536:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  536 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:538:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  538 |       : _Safe_base(__i, __seq)
      |                              ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In member function '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag> __gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::operator++(int) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:764:47: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  764 |                               _Attach_single());
      |                                               ^
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test03 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc: In member function 'constexpr void std::__cxx1998::vector<_Tp, _Alloc>::_M_realloc_insert(iterator, _Args&& ...) [with _Args = {Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement}; _Tp = Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement; _Alloc = std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc:439:7: note: parameter passing for argument of type 'std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >::iterator' changed in GCC 7.1
  439 |       vector<_Tp, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::_Safe_iterator(_Iterator, __gnu_debug::_Safe_sequence_base*, _Attach_single) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:666:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  666 |       _Safe_iterator(_Iterator __i, _Safe_sequence_base* __seq, _Attach_single)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:668:48: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  668 |       : _Safe_base(__i, __seq, _Attach_single())
      |                                                ^
      Test 15: Foundation::Containers::Deque:
         Compiling Tests/15/Test.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, __gnu_debug::_Safe_sequence_base*, _Attach_single) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:520:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  520 |       _Safe_iterator(_Iterator __i, _Safe_sequence_base* __seq, _Attach_single)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:522:48: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  522 |       : _Safe_base(__i, __seq, _Attach_single())
      |                                                ^
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test04 ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, __gnu_debug::_Safe_sequence_base*, _Attach_single) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:135:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, std::__cxx1998::vector<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, std::allocator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement> > >' changed in GCC 7.1
  135 |       _Safe_iterator(_Iterator __i, _Safe_sequence_base* __seq, _Attach_single)
      |       ^~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/12/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/../Characters/ToString.h:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Cache/BloomFilter.h:11,
                 from Test.cpp:9:
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:587:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  587 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 16: Foundation::Containers::KeyedCollection:
         Compiling Tests/16/Test.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement>(const Iterator<Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement, int, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement*, Stroika::Foundation::Cache::TimedCache<Stroika::Foundation::Characters::String, {anonymous}::Test4_TimedCache_::Private_::Example1_::DiskSpaceUsageType>::CacheElement&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 17: Foundation::Containers::Mapping:
         Compiling Tests/17/Test.cpp ... 
      Test 18: Foundation::Containers::MultiSet:
         Compiling Tests/18/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test02 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test14 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test15 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test01 ... 
      Test 19: Foundation::Containers::PriorityQueue:
         Compiling Tests/19/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 20: Foundation::Containers::Queue:
         Compiling Tests/20/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test13 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test12 ... 
      Test 21: Foundation::Containers::Sequence:
         Compiling Tests/21/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test19 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test16 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 22: Foundation::Containers::Set:
         Compiling Tests/22/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 23: Foundation::Containers::SortedAssociation:
         Compiling Tests/23/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 24: Foundation::Containers::SortedCollection:
         Compiling Tests/24/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test20 ... 
      Test 25: Foundation::Containers::SortedKeyedCollection:
         Compiling Tests/25/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test18 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 26: Foundation::Containers::SortedMapping:
         Compiling Tests/26/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test24 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
            Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test25 ... 
      Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test11 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 27: Foundation::Containers::SortedMultiSet:
         Compiling Tests/27/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 28: Foundation::Containers::SortedSet:
         Compiling Tests/28/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test23 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 29: Foundation::Containers::Stack:
         Compiling Tests/29/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test22 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 30: Foundation::Containers::STL:
         Compiling Tests/30/Test.cpp ... 
      Test 31: Foundation::Cryptography:
         Compiling Tests/31/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test17 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test21 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test29 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 32: Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip):
         Compiling Tests/32/Test.cpp ... 
      Test 33: Foundation::DataExchange::ObjectVariantMapper:
         Compiling Tests/33/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test26 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test30 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test27 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 34: Foundation::DataExchange::XML::SaxParser:
         Compiling Tests/34/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 35: Foundation::DataExchange::Other:
         Compiling Tests/35/Test.cpp ... 
      Test 36: Foundation::Database:
         Compiling Tests/36/Test.cpp ... 
      Test 37: Foundation::Execution::Exceptions:
         Compiling Tests/37/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test28 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 38: Foundation::Execution::ProcessRunner:
         Compiling Tests/38/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test31 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 39: Foundation::Execution::Signals:
         Compiling Tests/39/Test.cpp ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test37 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      Test 40: Foundation::Execution::Threads:
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/40/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 41: Foundation::Execution::ThreadSafetyBuiltinObject:
         Compiling Tests/41/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test39 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test38 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test32 ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/12/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14:
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:587:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  587 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
      Test 42: Foundation::Execution::Other:
         Compiling Tests/42/Test.cpp ... 
      Test 43: Foundation::IO::Network:
         Compiling Tests/43/Test.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/bits/range_access.h:36,
                 from /usr/arm-linux-gnueabihf/include/c++/12/string:52,
                 from /usr/arm-linux-gnueabihf/include/c++/12/bits/locale_classes.h:40,
                 from /usr/arm-linux-gnueabihf/include/c++/12/bits/ios_base.h:41,
                 from /usr/arm-linux-gnueabihf/include/c++/12/ios:42,
                 from /usr/arm-linux-gnueabihf/include/c++/12/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/12/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/12/initializer_list: In function 'constexpr const _Tp* std::begin(initializer_list<_Tp>) [with _Tp = Stroika::Foundation::Common::KeyValuePair<double, double>]':
/usr/arm-linux-gnueabihf/include/c++/12/initializer_list:90:5: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Common::KeyValuePair<double, double> >' changed in GCC 7.1
   90 |     begin(initializer_list<_Tp> __ils) noexcept
      |     ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/initializer_list: In function 'constexpr const _Tp* std::end(initializer_list<_Tp>) [with _Tp = Stroika::Foundation::Common::KeyValuePair<double, double>]':
/usr/arm-linux-gnueabihf/include/c++/12/initializer_list:101:5: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Common::KeyValuePair<double, double> >' changed in GCC 7.1
  101 |     end(initializer_list<_Tp> __ils) noexcept
      |     ^~~
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee>(const Iterator<{anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee, int, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee*, {anonymous}::RegressionTest3_sqlite_EmployeesDB_with_ORM_and_threads_::PRIVATE_::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test40 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test36 ... 
      Test 44: Foundation::IO::Network::HTTP:
         Compiling Tests/44/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test35 ... 
      Test 45: Foundation::IO::Network::Transfer:
         Compiling Tests/45/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test33 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test43 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test42 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 46: Foundation::IO::Other:
         Compiling Tests/46/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 47: Foundation::Math:
         Compiling Tests/47/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/map:43,
                 from /usr/arm-linux-gnueabihf/include/c++/12/map:67,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Memory/../Containers/Adapters/Adder.h:9,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Memory/Optional.h:16,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.inl:16,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:284,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.inl:22,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:125:
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::find(const key_type&) const [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:596:53: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  596 |       { return const_iterator(_Base::find(__x), this); }
      |                                                     ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::end() const [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:190:49: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  190 |       { return const_iterator(_Base::end(), this); }
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::map<_Key, _Tp, _Compare, _Allocator>::iterator, std::__debug::map<_Key, _Tp, _Cmp, _Allocator> >, bool> std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = double&; _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:399:56: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  399 |           return { { __res.first, this }, __res.second };
      |                                                        ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::pair<__gnu_debug::_Safe_iterator<typename std::__cxx1998::map<_Key, _Tp, _Compare, _Allocator>::iterator, std::__debug::map<_Key, _Tp, _Cmp, _Allocator> >, bool> std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::insert(value_type&&) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:276:54: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  276 |         return { { __res.first, this }, __res.second };
      |                                                      ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::find(const key_type&) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:583:47: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  583 |       { return iterator(_Base::find(__x), this); }
      |                                               ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::end() [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:186:43: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  186 |       { return iterator(_Base::end(), this); }
      |                                           ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::erase(const_iterator) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:483:49: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  483 |         return { erase(__position.base()), this };
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:483:49: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test44 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::begin() const [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:182:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  182 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_map:51,
                 from /usr/arm-linux-gnueabihf/include/c++/12/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/12/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:11:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<std::pair<const double, double> >; _Sequence = std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:536:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  536 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:538:30: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  538 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/regex:54,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.inl:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:1681:
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h: In member function 'std::pair<typename std::_Rb_tree<_Key, std::pair<const _Key, _Val>, std::_Select1st<std::pair<const _Key, _Val> >, _Compare, typename __gnu_cxx::__alloc_traits<_Allocator>::rebind<std::pair<const _Key, _Val> >::other>::iterator, bool> std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::insert_or_assign(const key_type&, _Obj&&) [with _Obj = double&; _Key = double; _Tp = double; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h:971:33: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
  971 |               __i = emplace_hint(__i, std::piecewise_construct,
      |                     ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  972 |                                  std::forward_as_tuple(__k),
      |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  973 |                                  std::forward_as_tuple(
      |                                  ~~~~~~~~~~~~~~~~~~~~~~
  974 |                                    std::forward<_Obj>(__obj)));
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_iterator<std::pair<const double, double> >; _Sequence = std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:536:7: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  536 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:538:30: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  538 |       : _Safe_base(__i, __seq)
      |                              ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::_Base_iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::erase(_Base_const_iterator) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:487:7: note: parameter passing for argument of type 'std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
  487 |       erase(_Base_const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:491:28: note: parameter passing for argument of type 'std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::_Base_const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
  491 |         return _Base::erase(__position);
      |                ~~~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::erase(const_iterator, const_iterator) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:539:68: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  539 |         return { _Base::erase(__first.base(), __last.base()), this };
      |                                                                    ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:539:68: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 48: Foundation::Memory:
         Compiling Tests/48/Test.cpp ... 
      Test 49: Foundation::Streams:
         Compiling Tests/49/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test41 ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_const_iterator<std::pair<const double, double> >; _Sequence = std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h: In member function 'std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::iterator std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::emplace_hint(const_iterator, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const double&>, std::tuple<double&>}; _Key = double; _Tp = double; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h:636:9: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
  636 |         emplace_hint(const_iterator __pos, _Args&&... __args)
      |         ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h:638:45: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
  638 |           return _M_t._M_emplace_hint_unique(__pos,
      |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
  639 |                                              std::forward<_Args>(__args)...);
      |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = std::_Rb_tree_iterator<std::pair<const double, double> >; _Sequence = std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type 'std::_Rb_tree_iterator<std::pair<const double, double> >' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h: In member function 'std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::iterator std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::erase(const_iterator) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h:1079:7: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
 1079 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h:1080:26: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
 1080 |       { return _M_t.erase(__position); }
      |                ~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h: In member function 'std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::iterator std::__cxx1998::map<_Key, _Tp, _Compare, _Alloc>::erase(const_iterator, const_iterator) [with _Key = double; _Tp = double; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h:1136:7: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
 1136 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h:1136:7: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_map.h:1137:26: note: parameter passing for argument of type 'std::__cxx1998::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' {aka 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator'} changed in GCC 7.1
 1137 |       { return _M_t.erase(__first, __last); }
      |                ~~~~~~~~~~^~~~~~~~~~~~~~~~~
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
In file included from Test.cpp:20:
Test.cpp: In function 'void {anonymous}::Test6_Statistics_()':
Test.cpp:121:39: note: parameter passing for argument of type 'std::initializer_list<double>' changed in GCC 7.1
  121 |         VerifyTestResult (Math::Mean (vector<double> ({5, 3, 19, 1})) == 7);
      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../TestHarness/TestHarness.h:21:61: note: in definition of macro 'VerifyTestResult'
   21 | #define VerifyTestResult(c) Stroika::TestHarness::Test_ (!!(c), true, #c, __FILE__, __LINE__)
      |                                                             ^
Test.cpp:122:72: note: parameter passing for argument of type 'std::initializer_list<double>' changed in GCC 7.1
  122 |         VerifyTestResult (Math::NearlyEquals (Math::StandardDeviation (vector<double> ({5, 3, 19, 1})), 8.164966, .0001));
      |                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../TestHarness/TestHarness.h:21:61: note: in definition of macro 'VerifyTestResult'
   21 | #define VerifyTestResult(c) Stroika::TestHarness::Test_ (!!(c), true, #c, __FILE__, __LINE__)
      |                                                             ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/vector:74,
                 from /usr/arm-linux-gnueabihf/include/c++/12/functional:62,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Memory/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Memory/InlineBuffer.h:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:10,
                 from Test.cpp:7:
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector: In constructor 'std::__debug::vector<_Tp, _Allocator>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = double; _Allocator = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector:226:7: note: parameter passing for argument of type 'std::initializer_list<double>' changed in GCC 7.1
  226 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector:228:23: note: parameter passing for argument of type 'std::initializer_list<double>' changed in GCC 7.1
  228 |       : _Base(__l, __a) { }
      |                       ^
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/vector:64:
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_vector.h: In constructor 'constexpr std::__cxx1998::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = double; _Alloc = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_vector.h:673:7: note: parameter passing for argument of type 'std::initializer_list<double>' changed in GCC 7.1
  673 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Math/Optimization/DownhillSimplexMinimization.h:95,
                 from Test.cpp:15:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Math/Optimization/DownhillSimplexMinimization.inl: In function 'Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::Results<FLOAT_TYPE> Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<FLOAT_TYPE>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<T>&, FLOAT_TYPE, FLOAT_TYPE, unsigned int, unsigned int, FLOAT_TYPE, FLOAT_TYPE, FLOAT_TYPE, FLOAT_TYPE) [with FLOAT_TYPE = double]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Math/Optimization/DownhillSimplexMinimization.inl:87:40: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>' changed in GCC 7.1
   87 |             vector<PartialResultType_> res{PartialResultType_{x_start.GetItems (), prev_best}};
      |                                        ^~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h: In member function 'std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::const_iterator std::__debug::map<_Key, _Tp, _Cmp, _Allocator>::cbegin() const [with _Key = double; _Tp = double; _Compare = std::less<double>; _Allocator = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/map.h:211:51: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  211 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/set:60,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/../Traversal/Iterable.inl:13,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/../Traversal/Iterable.h:1517,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:16:
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_emplace_hint_unique(const_iterator, _Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const double&>, std::tuple<double&>}; _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:2457:7: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 2457 |       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const_iterator) [with _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1192:7: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 1192 |       erase(const_iterator __position)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1197:21: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 1197 |         _M_erase_aux(__position);
      |         ~~~~~~~~~~~~^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const_iterator, const_iterator) [with _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1236:7: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 1236 |       erase(const_iterator __first, const_iterator __last)
      |       ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1236:7: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:1238:21: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 1238 |         _M_erase_aux(__first, __last);
      |         ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::const_iterator std::__debug::vector<_Tp, _Allocator>::begin() const [with _Tp = double; _Allocator = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector:305:51: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  305 |       { return const_iterator(_Base::begin(), this); }
      |                                                   ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::const_iterator std::__debug::vector<_Tp, _Allocator>::end() const [with _Tp = double; _Allocator = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector:315:49: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  315 |       { return const_iterator(_Base::end(), this); }
      |                                                 ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector: In constructor 'std::__debug::vector<_Tp, _Allocator>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Allocator = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector:226:7: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>' changed in GCC 7.1
  226 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector:228:23: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>' changed in GCC 7.1
  228 |       : _Base(__l, __a) { }
      |                       ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::iterator std::__debug::vector<_Tp, _Allocator>::begin() [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Allocator = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector:300:45: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  300 |       { return iterator(_Base::begin(), this); }
      |                                             ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector: In member function 'std::__debug::vector<_Tp, _Allocator>::iterator std::__debug::vector<_Tp, _Allocator>::end() [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Allocator = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/vector:310:43: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  310 |       { return iterator(_Base::end(), this); }
      |                                           ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/forward_list:42,
                 from /usr/arm-linux-gnueabihf/include/c++/12/forward_list:43,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:9:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In function '__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>::_Self __gnu_debug::operator+(const _Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>::_Self&, _Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>::difference_type)':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:937:64: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  937 |         return _Safe_iterator(__x.base() + __n, __x._M_sequence);
      |                                                                ^
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_vector.h: In copy constructor 'constexpr std::__cxx1998::vector<_Tp, _Alloc>::vector(const std::__cxx1998::vector<_Tp, _Alloc>&) [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_vector.h:601:38: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  601 |           std::__uninitialized_copy_a(__x.begin(), __x.end(),
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  602 |                                       this->_M_impl._M_start,
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~
  603 |                                       _M_get_Tp_allocator());
      |                                       ~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >; _Sequence = std::__debug::vector<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:685:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  685 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:687:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  687 |       : _Safe_base(__i, __seq)
      |                              ^
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_vector.h: In constructor 'constexpr std::__cxx1998::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_vector.h:673:7: note: parameter passing for argument of type 'std::initializer_list<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>' changed in GCC 7.1
  673 |       vector(initializer_list<value_type> __l,
      |       ^~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::random_access_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:685:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  685 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:687:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  687 |       : _Safe_base(__i, __seq)
      |                              ^
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_vector.h: In member function 'constexpr void std::__cxx1998::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_vector.h:1287:28: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
 1287 |           _M_realloc_insert(end(), __x);
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/memory:66,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Debug/AssertExternallySynchronizedMutex.h:13:
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h: In function 'constexpr _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _ForwardIterator = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*; _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:365:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  365 |     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:365:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:370:37: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  370 |         return std::__do_uninit_copy(__first, __last, __result);
      |                ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:372:37: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  372 |       return std::uninitialized_copy(__first, __last, __result);
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >; _Sequence = std::__debug::vector<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:536:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  536 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:538:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  538 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/vector:70:
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc: In member function 'constexpr std::__cxx1998::vector<_Tp, _Alloc>::reference std::__cxx1998::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_}; _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc:123:28: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  123 |           _M_realloc_insert(end(), std::forward<_Args>(__args)...);
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, std::bidirectional_iterator_tag>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:536:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  536 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:538:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  538 |       : _Safe_base(__i, __seq)
      |                              ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:1038:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_from_begin() const [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:52:25: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
   52 |         = __get_distance(_M_get_sequence()->_M_base().begin(), base());
      |           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to_end() const [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:76:25: note: parameter passing for argument of type 'const __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
   76 |         = __get_distance(base(), _M_get_sequence()->_M_base().end());
      |           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc: In member function 'constexpr void std::__cxx1998::vector<_Tp, _Alloc>::_M_realloc_insert(iterator, _Args&& ...) [with _Args = {const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_&}; _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc:439:7: note: parameter passing for argument of type 'std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >::iterator' changed in GCC 7.1
  439 |       vector<_Tp, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h: In function 'constexpr _ForwardIterator std::__do_uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _ForwardIterator = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:113:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  113 |     __do_uninit_copy(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:113:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h: In function '_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _ForwardIterator = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:163:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  163 |     uninitialized_copy(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:163:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:185:22: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  184 |       return std::__uninitialized_copy<__can_memmove && __assignable>::
      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |         __uninit_copy(__first, __last, __result);
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(const_iterator, const key_type&) [with _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:2209:5: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 2209 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase_aux(const_iterator) [with _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:2488:5: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 2488 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:1038:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc: In member function 'typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_M_get_distance_to(const __gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>&) const [with _Iterator = std::_Rb_tree_const_iterator<std::pair<const double, double> >; _Sequence = std::__debug::map<double, double, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:129:41: note: parameter passing for argument of type 'const std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  129 |       _Dist __base_dist = __get_distance(this->base(), __rhs.base());
      |                           ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h: In member function 'void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase_aux(const_iterator, const_iterator) [with _Key = double; _Val = std::pair<const double, double>; _KeyOfValue = std::_Select1st<std::pair<const double, double> >; _Compare = std::less<double>; _Alloc = Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:2502:5: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
 2502 |     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:2502:5: note: parameter passing for argument of type 'std::_Rb_tree<double, std::pair<const double, double>, std::_Select1st<std::pair<const double, double> >, std::less<double>, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >::const_iterator' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_tree.h:2509:23: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
 2509 |           _M_erase_aux(__first++);
      |           ~~~~~~~~~~~~^~~~~~~~~~~
         Compiling Tests/TestHarness/TestHarness.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >; _Sequence = std::__debug::vector<double>; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc: In member function 'constexpr void std::__cxx1998::vector<_Tp, _Alloc>::_M_realloc_insert(iterator, _Args&& ...) [with _Args = {Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_}; _Tp = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_; _Alloc = std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc:439:7: note: parameter passing for argument of type 'std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >::iterator' changed in GCC 7.1
  439 |       vector<_Tp, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In constructor '__gnu_debug::_Safe_iterator<_Iterator, _Sequence, _Category>::_Safe_iterator(_Iterator, const __gnu_debug::_Safe_sequence_base*) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Sequence = std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _Category = std::forward_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:162:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  162 |       _Safe_iterator(_Iterator __i, const _Safe_sequence_base* __seq)
      |       ^~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/12/bits/stl_iterator.h:2559,
                 from /usr/arm-linux-gnueabihf/include/c++/12/string:47,
                 from /usr/arm-linux-gnueabihf/include/c++/12/bits/locale_classes.h:40,
                 from /usr/arm-linux-gnueabihf/include/c++/12/bits/ios_base.h:41,
                 from /usr/arm-linux-gnueabihf/include/c++/12/ios:42,
                 from /usr/arm-linux-gnueabihf/include/c++/12/ostream:38,
                 from /usr/arm-linux-gnueabihf/include/c++/12/iostream:39,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/Private/Defaults_CompilerAndStdLib_.h:46,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.h:18,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/StroikaPreComp.h:7,
                 from Test.cpp:5:
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:113:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:113:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:114:28: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h: In static member function 'static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _ForwardIterator = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*; bool _TrivialValueTypes = false]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:135:9: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  135 |         __uninit_copy(_InputIterator __first, _InputIterator __last,
      |         ^~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:135:9: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:137:39: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<const Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  137 |         { return std::__do_uninit_copy(__first, __last, __result); }
      |                  ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc: In member function 'constexpr std::__cxx1998::vector<_Tp, _Alloc>::reference std::__cxx1998::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {double}; _Tp = double; _Alloc = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc:123:28: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<double*, std::__cxx1998::vector<double, std::allocator<double> > >' changed in GCC 7.1
  123 |           _M_realloc_insert(end(), std::forward<_Args>(__args)...);
      |           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_iterator.h: In function 'constexpr _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*; _Container = __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_iterator.h:1353:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
 1353 |     __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
      |     ^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/string:50:
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h: In function 'constexpr _From std::__niter_wrap(_From, _To) [with _From = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _To = Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:328:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  328 |     __niter_wrap(_From __from, _To __res)
      |     ^~~~~~~~~~~~
      Test 50: Foundation::Time:
         Compiling Tests/50/Test.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h: In function '__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>::_Self __gnu_debug::operator-(const _Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>::_Self&, _Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>::difference_type)':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.h:957:64: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  957 |         return _Safe_iterator(__x.base() - __n, __x._M_sequence);
      |                                                                ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::random_access_iterator_tag) [with _Iterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:94:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
   94 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:94:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc: In member function 'constexpr void std::__cxx1998::vector<_Tp, _Alloc>::_M_realloc_insert(iterator, _Args&& ...) [with _Args = {double}; _Tp = double; _Alloc = std::allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/vector.tcc:439:7: note: parameter passing for argument of type 'std::__cxx1998::vector<double, std::allocator<double> >::iterator' changed in GCC 7.1
  439 |       vector<_Tp, _Alloc>::
      |       ^~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc: In function '__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat> std::__copy_move_backward_a(const __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&, const __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&, const __gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&) [with bool _IsMove = true; _IIte = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _ISeq = __debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _ICat = random_access_iterator_tag; _OIte = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _OSeq = __debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _OCat = random_access_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:370:35: note: parameter passing for argument of type 'const __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  370 |               __result._M_sequence);
      |                                   ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:370:35: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:373:52: note: parameter passing for argument of type 'const __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  373 |             __first.base(), __last.base(), __result);
      |                                                    ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/12/memory:77:
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h: In function 'constexpr _OI std::__copy_move_backward_a(_II, _II, _OI) [with bool _IsMove = true; _II = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _OI = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:796:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  796 |     __copy_move_backward_a(_II __first, _II __last, _OI __result)
      |     ^~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:796:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:796:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc: In function '__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat> std::__copy_move_backward_a(_II, _II, const __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&) [with bool _IsMove = true; _II = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Ite = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _Seq = __debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >; _Cat = random_access_iterator_tag]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:333:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  333 |     __copy_move_backward_a(_II __first, _II __last,
      |     ^~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:333:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
In file included from /usr/arm-linux-gnueabihf/include/c++/12/iostream:38:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:337:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  337 |       __glibcxx_check_valid_range2(__first, __last, __dist);
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/debug.h:90,
                 from /usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:69:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:337:7: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  337 |       __glibcxx_check_valid_range2(__first, __last, __dist);
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:345:37: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  345 |                 __result._M_sequence);
      |                                     ^
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:345:37: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_iterator.tcc:347:77: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  347 |       return std::__copy_move_backward_a1<_IsMove>(__first, __last, __result);
      |                                                                             ^
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >, int, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >*, Stroika::Foundation::Traversal::Range<double, Stroika::Foundation::Traversal::RangeTraits::Default<double> >&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/stl_iterator.h:32,
                 from /usr/arm-linux-gnueabihf/include/c++/12/bits/stl_iterator.h:2559,
                 from /usr/arm-linux-gnueabihf/include/c++/12/string:47:
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator) [with _Iterator = std::_Rb_tree_const_iterator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  113 |     __get_distance(_Iterator __lhs, _Iterator __rhs)
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:113:5: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:114:28: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  114 |     { return __get_distance(__lhs, __rhs, std::__iterator_category(__lhs)); }
      |              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h: In function 'constexpr bool __gnu_debug::__valid_range(_InputIterator, _InputIterator, typename _Distance_traits<_Iterator>::__type&) [with _InputIterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:230:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  230 |     __valid_range(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:230:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:234:31: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  234 |       return __valid_range_aux(__first, __last, __dist, _Integral());
      |              ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h: In function 'constexpr _BI2 std::__copy_move_backward_a1(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _BI2 = __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, __debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, random_access_iterator_tag>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:768:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  768 |     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:768:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:769:77: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  769 |     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
      |                                                                             ^
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:587:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  587 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h: In function 'constexpr bool __gnu_debug::__valid_range_aux(_InputIterator, _InputIterator, typename _Distance_traits<_Iterator>::__type&, std::__false_type) [with _InputIterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:196:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  196 |     __valid_range_aux(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:196:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:200:29: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  200 |       if (!__valid_range_aux(__first, __last, std::input_iterator_tag()))
      |            ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:203:30: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  203 |       __dist = __get_distance(__first, __last);
      |                ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h: In function 'constexpr _BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _BI2 = __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, __cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, __debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, random_access_iterator_tag>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:750:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  750 |     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
      |     ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:750:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:756:50: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  756 |           __copy_move_b(__first, __last, __result);
      |                                                  ^
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:762:74: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  762 |                                                                  __result);
      |                                                                          ^
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h: In function 'constexpr _ForwardIterator std::__relocate_a_1(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = double*; _ForwardIterator = __gnu_cxx::__normal_iterator<double*, void>; _Allocator = allocator<double>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_uninitialized.h:1078:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<double*, void>' changed in GCC 7.1
 1078 |     __relocate_a_1(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h: In function 'constexpr bool __gnu_debug::__valid_range_aux(_InputIterator, _InputIterator, std::input_iterator_tag) [with _InputIterator = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:162:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  162 |     __valid_range_aux(_InputIterator __first, _InputIterator __last,
      |     ^~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:162:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h: In static member function 'static constexpr _BI2 std::__copy_move_backward<true, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = __gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >; _BI2 = __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >, std::__debug::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> >, std::random_access_iterator_tag>]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:714:9: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
  714 |         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
      |         ^~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/stl_algobase.h:714:9: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_*, std::__cxx1998::vector<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_, std::allocator<Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::PRIVATE_::nelder_mead_by_fchollet<double>(Stroika::Foundation::Math::Optimization::DownhillSimplexMinimization::TargetFunction<double>&, const Stroika::Foundation::Math::LinearAlgebra::Vector<double>&, double, double, unsigned int, unsigned int, double, double, double, double)::PartialResultType_> > >' changed in GCC 7.1
      Test 51: Foundation::Traversal:
         Compiling Tests/51/Test.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h: In function 'constexpr typename __gnu_debug::_Distance_traits<_Iterator>::__type __gnu_debug::__get_distance(_Iterator, _Iterator, std::input_iterator_tag) [with _Iterator = std::_Rb_tree_const_iterator<std::pair<const double, double> >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
  101 |     __get_distance(_Iterator __lhs, _Iterator __rhs,
      |     ^~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/helper_functions.h:101:5: note: parameter passing for argument of type 'std::_Rb_tree_const_iterator<std::pair<const double, double> >' changed in GCC 7.1
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test46 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<Range<double, RangeTraits::Default<double> > >(const Iterator<Range<double, RangeTraits::Default<double> >, DefaultIteratorTraits<std::forward_iterator_tag, Range<double, RangeTraits::Default<double> >, int, Range<double, RangeTraits::Default<double> >*, Range<double, RangeTraits::Default<double> >&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test45 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test47 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 52: Foundation::PERFORMANCE:
         Compiling Tests/52/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test49 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test50 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test48 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test34 ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from Test.cpp:16:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::__debug::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::__debug::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test51 ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test52 ... 
   Building Stroika Samples {raspberrypi-g++-12-debug-sanitize_undefined}:
      Building Samples/AppSettings:
      Building Samples/ArchiveUtility:
      Building Samples/Containers:
      Building Samples/Serialization:
      Building Samples/Service:
      Building Samples/SQL:
      Building Samples/SSDPServer:
      Building Samples/SSDPClient:
      Building Samples/SystemPerformanceClient:
      Building Samples/Traceroute:
         Compiling Samples/AppSettings/Sources/Main.cpp ... 
         Compiling Samples/ArchiveUtility/Sources/ArchiveUtility.cpp ... 
         Compiling Samples/Containers/Sources/Main.cpp ... 
         Compiling Samples/Serialization/Sources/Main.cpp ... 
         Compiling Samples/SSDPClient/Sources/SSDPClient.cpp ... 
         Compiling Samples/SQL/Sources/Main.cpp ... 
         Compiling Samples/SSDPServer/Sources/SSDPServer.cpp ... 
         Compiling Samples/Traceroute/Sources/Traceroute.cpp ... 
         Compiling Samples/SystemPerformanceClient/Sources/SystemPerformanceClient.cpp ... 
         Compiling Samples/Service/Sources/Service.cpp ... 
         Compiling Samples/Serialization/Sources/ObjectVariantMapper.cpp ... 
         Compiling Samples/Containers/Sources/Collection.cpp ... 
         Compiling Samples/Service/Sources/Main.cpp ... 
         Compiling Samples/SQL/Sources/ComputerNetwork.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-Traceroute/Traceroute ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-ArchiveUtility/ArchiveUtility ... 
      Building Samples/WebServer:
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-SSDPClient/SSDPClient ... 
         Compiling Samples/WebServer/Sources/WebServer.cpp ... 
      Building Samples/WebService:
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-Service/Service ... 
         Compiling Samples/WebService/Sources/IWSAPI.cpp ... 
         Compiling Samples/Containers/Sources/Mapping.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-AppSettings/AppSettings ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-Serialization/Serialization ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-SystemPerformanceClient/SystemPerformanceClient ... 
         Building Installers:
            Building DEB installer: 
               temp files: /tmp/tmp.r6gc6sIYN0/; log: IntermediateFiles/raspberrypi-g++-12-debug-sanitize_undefined/Samples-Service/DEB-Installer-Build.Out
         Compiling Samples/Containers/Sources/Sequence.cpp ... 
         Compiling Samples/WebService/Sources/Main.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-SSDPServer/SSDPServer ... 
         Compiling Samples/WebService/Sources/Model.cpp ... 
         Compiling Samples/Containers/Sources/Set.cpp ... 
         Compiling Samples/WebService/Sources/WebServer.cpp ... 
         Compiling Samples/SQL/Sources/DirectEmployeesDB.cpp ... 
         Compiling Samples/WebService/Sources/WSImpl.cpp ... 
         Compiling Samples/SQL/Sources/ORMEmployeesDB.cpp ... 
         Compiling Samples/SQL/Sources/ThreadTest.cpp ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-Containers/Containers ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-WebServer/WebServer ... 
In file included from /usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/12/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SQL//Sources/DirectEmployeesDB.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<double, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:587:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  587 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/unordered_map:52,
                 from /usr/arm-linux-gnueabihf/include/c++/12/functional:61,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Memory/../Configuration/Concepts.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Memory/InlineBuffer.h:12,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/StringBuilder.h:10,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/WebService//Sources/WSImpl.cpp:6:
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_map: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_map:738:11: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_local_iterator' {aka 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_local_iterator'} changed in GCC 7.1
  738 |           [__victim](_Base_const_local_iterator __it)
      |           ^
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/unordered_map:49:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h: In lambda function:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h:71:17: note: parameter passing for argument of type 'std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   71 |                 [__local_end](__decltype(__local_end) __it)
      |                 ^
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.h:192:
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_local_if(_Predicate) [with _Predicate = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_M_invalidate(_Base_const_iterator)::<lambda(std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_local_iterator)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:80:51: note: parameter passing for argument of type 'std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >::_Base_const_local_iterator' {aka 'std::_Hashtable<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > >, std::__detail::_Select1st, std::equal_to<Stroika::Foundation::Characters::String>, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::const_local_iterator'} changed in GCC 7.1
   80 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:91:51: note: parameter passing for argument of type 'const std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   91 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<double>(const Iterator<double, DefaultIteratorTraits<std::forward_iterator_tag, double, int, double*, double&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc: In member function 'void __gnu_debug::_Safe_unordered_container<_Container>::_M_invalidate_local_if(_Predicate) [with _Predicate = __gnu_debug::_Safe_unordered_container<std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > > >::_M_invalidate_locals()::<lambda(std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>)>; _Container = std::__debug::unordered_map<Stroika::Foundation::Characters::String, std::complex<double>, std::hash<Stroika::Foundation::Characters::String>, std::equal_to<Stroika::Foundation::Characters::String>, std::allocator<std::pair<const Stroika::Foundation::Characters::String, std::complex<double> > > >]':
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:80:51: note: parameter passing for argument of type 'std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   80 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/debug/safe_unordered_container.tcc:91:51: note: parameter passing for argument of type 'const std::__detail::_Local_const_iterator<Stroika::Foundation::Characters::String, std::pair<const Stroika::Foundation::Characters::String, std::complex<double> >, std::__detail::_Select1st, std::hash<Stroika::Foundation::Characters::String>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false, true>' changed in GCC 7.1
   91 |             if (!__victim->_M_singular() && __pred(__victim->base()))
      |                                             ~~~~~~^~~~~~~~~~~~~~~~~~
In file included from /usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr.h:53,
                 from /usr/arm-linux-gnueabihf/include/c++/12/memory:77,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Common/Compare.h:11,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:14,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Samples/SQL//Sources/ORMEmployeesDB.cpp:8:
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::Iterator<{anonymous}::Employee, Stroika::Foundation::Traversal::DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Impl::_Impl(_Alloc) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:587:18: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  587 |         explicit _Impl(_Alloc __a) noexcept : _A_base(__a) { }
      |                  ^~~~~
               Built: Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-Service/stroika-sampleservice-3.0d1.Linux.armhf.deb
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>; _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep&}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:971:23: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  971 |           auto __pi = ::new (__mem)
      |                       ^~~~~~~~~~~~~
  972 |             _Sp_cp_type(__a._M_a, std::forward<_Args>(__args)...);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h: In constructor 'std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep&}; _Tp = Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep; _Alloc = Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]':
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:599:9: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  599 |         _Sp_counted_ptr_inplace(_Alloc __a, _Args&&... __args)
      |         ^~~~~~~~~~~~~~~~~~~~~~~
/usr/arm-linux-gnueabihf/include/c++/12/bits/shared_ptr_base.h:600:11: note: parameter passing for argument of type 'Stroika::Foundation::Memory::BlockAllocator<Stroika::Foundation::Traversal::MakeIterableFromIterator<{anonymous}::Employee>(const Iterator<{anonymous}::Employee, DefaultIteratorTraits<std::forward_iterator_tag, {anonymous}::Employee, int, {anonymous}::Employee*, {anonymous}::Employee&> >&)::MyIterable_::Rep>' changed in GCC 7.1
  600 |         : _M_impl(__a)
      |           ^~~~~~~~~~~~
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-WebService/WebService ... 
         Linking Builds/raspberrypi-g++-12-debug-sanitize_undefined/Samples-SQL/SQL ... 
Building Stroika all {raspberrypi-g++-12-release-sanitize_address}:
   Stroika ThirdPartyComponents Build {raspberrypi-g++-12-release-sanitize_address}:
      Stroika/ThirdPartyComponents/zlib Build 1.2.13 {raspberrypi-g++-12-release-sanitize_address}:
      Stroika/ThirdPartyComponents/lzma Build 1604 {raspberrypi-g++-12-release-sanitize_address}:
      Stroika/ThirdPartyComponents/sqlite Build 3420000 {raspberrypi-g++-12-release-sanitize_address}:
         sqlite 3420000 - Extracting ../Origs-Cache/sqlite-amalgamation-3420000.zip to IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/sqlite ... 
         zlib 1.2.13 - Configure (see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/zlib/CONFIGURE-OUT.txt) ...
         lzma 1604 - Extracting ../Origs-Cache/lzma1604.7z to IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/lzma ... 
      Stroika/ThirdPartyComponents/xerces 3.2.4 Build {raspberrypi-g++-12-release-sanitize_address}:
         sqlite 3420000 - Build (See IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/sqlite/BUILD-OUT.txt) ...
         lzma 1604 - Build: see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/lzma/BUILD-OUT.txt ...
         Xerces 3.2.4 - Extracting ../Origs-Cache/xerces-c-3.2.4.tar.gz to IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/Xerces ... 
         Xerces 3.2.4 - Patching ... 
         Xerces 3.2.4 - Configuring (See IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/Xerces/CONFIGURE-OUT.txt) ... 
         zlib 1.2.13 - Build (see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/zlib/BUILD-OUT.txt) ...
         lzma 1604 - Checking ...  Stroika/ThirdPartyComponents/lzma -    [Succeeded]
         zlib 1.2.13 - Build (see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/zlib/INSTALL-OUT.txt) ...
         zlib 1.2.13 - Checking ...  Stroika/ThirdPartyComponents/zlib -    [Succeeded]
      Stroika/ThirdPartyComponents/boost Build 1_82_0 {raspberrypi-g++-12-release-sanitize_address}:
      Stroika/ThirdPartyComponents/OpenSSL Build 3.1.0 {raspberrypi-g++-12-release-sanitize_address}:
         boost 1_82_0 - Extracting ../Origs-Cache/boost_1_82_0.tar.gz to IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/boost ... 
         openssl 3.1.0 - Extracting ../Origs-Cache/openssl-3.1.0.tar.gz to IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/openssl ... 
         openssl 3.1.0 - Configure (see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/openssl/CONFIG-OUT.txt) ...  
         boost 1_82_0 - Bootstrapping - see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/boost/BOOTSTRAP-OUT.txt ... 
         openssl 3.1.0 - Build (see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/openssl/BUILD-OUT.txt)  ... 
         Xerces 3.2.4 - Compiling (See IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/Xerces/BUILD-OUT.txt) ... 
         boost 1_82_0 - Config+Build; see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/boost/ConfigureAndBuild-OUT.txt ...
         openssl 3.1.0 - Installing (see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/openssl/INSTALL-OUT.txt) ... 
         boost 1_82_0 - Patching Builds/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/include/boost/config/user.hpp
         boost 1_82_0 - Checking ...  Stroika/ThirdPartyComponents/boost -   [Succeeded]
         openssl 3.1.0 - Checking ...  Stroika/ThirdPartyComponents/OpenSSL - [Succeeded]
      Stroika/ThirdPartyComponents/libcurl 8.1.2 Build {raspberrypi-g++-12-release-sanitize_address}:
         curl 8.1.2 - Extracting ../Origs-Cache/curl-8.1.2.tar.gz to IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/curl ... 
         curl 8.1.2 - Build configure tools (see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/curl/BUILD-CONF-TOOLS-OUT.txt) ...
         curl 8.1.2 - Configure (see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/curl/CONFIGURE-OUT.txt) ...
         Xerces 3.2.4 - Copying builds (See IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/Xerces/INSTALL.OUT) ... 
         Xerces 3.2.4 - Checking ...  Stroika/ThirdPartyComponents/Xerces -  [Succeeded]
         curl 8.1.2 - Compiling (see IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/ThirdPartyComponents/curl/BUILD-OUT.txt) ...
         sqlite 3420000 - Checking ...  Stroika/ThirdPartyComponents/sqlite -  [Succeeded]
         curl 8.1.2 - Checking ...  Stroika/ThirdPartyComponents/curl -    [Succeeded]
   Building Stroika Library {raspberrypi-g++-12-release-sanitize_address}:
      Computing /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/Library/Foundation/cached-list-objs
      Building Stroika Foundation Objs:
         Compiling Library/Sources/Stroika/Foundation/Cache/Statistics.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Common/GUID.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Atom.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Assertions.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CString/Utilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/Locale.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/CRC32.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/AES.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/SemWaitableEvent.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ORM/Schema.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/Jenkins.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/Character.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/AssertExternallySynchronizedMutex.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/BackTrace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/SignalBlock.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/StroikaConfig.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/Base64.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CodeCvt.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/SystemConfiguration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/MD5.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/BadFormatException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Digest/Algorithm/SuperFastHash.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Platform/POSIX/Users.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/Algorithm/RC4.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Debugger.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/CodePage.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Demangle.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ORM/Versioning.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Configuration/Version.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/FloatConversion.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/CheckedConverter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Fatal.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/AbortableMutex.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Encoding/OpenSSLCryptoStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/MallocGuard.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/DirectoryIterable.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/DirectoryIterator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/InternetMediaType.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Main.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/Format.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Activity.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Debug/Trace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/CIDR.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/CipherAlgorithm.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionlessSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/RegularExpression.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/InternetMediaTypeRegistry.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/Disk.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/CommandLine.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/ObjectVariantMapper.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/DigestAlgorithm.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Linguistics/MessageUtilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Linguistics/Words.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/String.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/DLLSupport.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionOrientedMasterSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/ODBC.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/DerivedKey.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/ConnectionOrientedStreamSocket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Math/LinearAlgebra/Matrix.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Exceptions.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileInputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Math/LinearAlgebra/Vector.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/BLOB.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/SQLite.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/FeatureNotSupportedInThisVersionException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/IntervalTimer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/String2Int.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileOutputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/DNS.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/OpenSSL/LibraryContext.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/BlockAllocator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/OptionsFile.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Logger.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Module.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/ToString.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileSystem.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/Common.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Interface.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/FileUtils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Memory/MemoryAllocator.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/MemoryMappedFileReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Statement.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Characters/UTFConvert.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/SQL/Utils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Cryptography/Format.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructFieldMetaInfo.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/MountedFilesystem.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/VariantValue.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetAddress.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/OperationNotSupportedException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/PathName.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/LinkMonitor.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Listener.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Neighbors.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Process.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Database/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/ThroughTmpFileWriter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/FileSystem/WellKnownLocations.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ProcessRunner.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ProgressMonitor.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/RequiredComponentMissingException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Compression/Zip/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/CommonInsertersAndExtractors.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/RequiredComponentVersionMismatchException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SharedStaticData.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Socket.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/CharacterDelimitedLines/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Profile.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/FStreamSupport.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/7z/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Archive/Zip/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructuredStreamEvents/IConsumer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/Namespace.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Compression/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SocketAddress.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/SerializeItemToBLOB.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/StructuredStreamEvents/ObjectReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SilentException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/CharacterDelimitedLines/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Signals.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/iostream/Utilities.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SocketStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Date.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/SAXReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/DateTime.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Duration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SignalHandlers.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/EOFException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/JSON/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SystemFirewall.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/UniformResourceIdentification.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/XML/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Realtime.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/JSON/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/InputStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/TimeOfDay.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/SerializationConfiguration.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/INI/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/XML/WriterUtils.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Sleep.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/MemoryStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/Reader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Time/Timezone.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/XML/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/SpinLock.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/SharedMemoryStream.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/URI.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/DataExchange/Variant/Writer.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/TextReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Thread.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/ThreadPool.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/ClientErrorException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetProtocol/ICMP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Streams/TextToByteReader.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/CacheControl.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/InternetProtocol/IP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Cookie.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/SOAP/Fault.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Headers.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Cache.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/KeepAlive.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Throw.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/MessageStartTextInputStreamBinaryAdapter.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Request.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/Response.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection_libcurl.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/TimeOutException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/HTTP/TransferEncoding.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/UserCanceledException.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection_WinHTTP.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/Users.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/WaitableEvent.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/Execution/WaitForIOReady.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/ConnectionPool.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Exception.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Request.cpp ... 
         Compiling Library/Sources/Stroika/Foundation/IO/Network/Transfer/Response.cpp ... 
      Creating Builds/raspberrypi-g++-12-release-sanitize_address/Stroika-Foundation.a ... 
      Computing /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/Library/Frameworks/cached-list-objs
      Building Stroika Frameworks Objs:
         Compiling Library/Sources/Stroika/Frameworks/Service/Main.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/ConnectionManager.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/Modbus/IModbusService.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/NetworkMonitor/Ping.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Connection.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/AllInstruments.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/CPU.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/Modbus/Server.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Server/Basic.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/CachingListener.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Capturer.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/NetworkMonitor/Traceroute.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/CaptureSet.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/Listener.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Basic.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Memory.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebService/Server/VariantValue.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/CORS.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instrument.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Measurement.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Client/Search.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/DefaultFaultInterceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/BasicServer.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/FileSystemRequestHandler.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Interceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Filesystem.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/InterceptorChain.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Network.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/SystemPerformance/Instruments/Process.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/PeriodicNotifier.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Message.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/LoggingInterceptor.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Server/SearchResponder.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Request.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/RequestHandler.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Response.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Advertisement.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/WebServer/Router.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/SSDP/Common.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/Device.cpp ... 
         Compiling Library/Sources/Stroika/Frameworks/UPnP/DeviceDescription.cpp ... 
      Creating Builds/raspberrypi-g++-12-release-sanitize_address/Stroika-Frameworks.a ... 
   Building Stroika Tools {raspberrypi-g++-12-release-sanitize_address}:
            Compiling Tools/Sources/Stroika/Frameworks/WebServer/HTMLViewCompiler/HTMLViewCompiler.cpp ... 
      Linking  $StroikaRoot/Builds/raspberrypi-g++-12-release-sanitize_address/HTMLViewCompiler...
lto-wrapper: warning: using serial compilation of 7 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
   Building Stroika Tests {raspberrypi-g++-12-release-sanitize_address}:
      Test 07: Foundation::Containers::DataStructures::LockFree:
      Test 01: Foundation::Caching:
      Test 05: Foundation::Containers::DataStructures::Array:
      Test 03: Foundation::Common:
      Test 02: Foundation::Characters:
      Test 10: Foundation::Containers::DataStructures::SkipList:
      Test 08: Foundation::Containers::DataStructures::DoublyLinkedList:
      Test 04: Foundation::Configuration:
      Test 06: Foundation::Containers::DataStructures::LinkedList:
      Test 09: Foundation::Containers::DataStructures::STLContainerWrapper:
         Compiling Tests/05/Test.cpp ... 
         Compiling Tests/07/Test.cpp ... 
         Compiling Tests/02/Test.cpp ... 
         Compiling Tests/01/Test.cpp ... 
         Compiling Tests/03/Test.cpp ... 
         Compiling Tests/10/Test.cpp ... 
         Compiling Tests/06/Test.cpp ... 
         Compiling Tests/04/Test.cpp ... 
         Compiling Tests/08/Test.cpp ... 
         Compiling Tests/09/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test09 ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test10 ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test06 ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test08 ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test05 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
lto-wrapper: warning: using serial compilation of 8 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 8 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 8 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 8 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 9 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test07 ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test03 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
lto-wrapper: warning: using serial compilation of 9 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 9 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test04 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
lto-wrapper: warning: using serial compilation of 17 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test02 ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test01 ... 
lto-wrapper: warning: using serial compilation of 18 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 13 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 11: Foundation::Containers::Association:
         Compiling Tests/11/Test.cpp ... 
      Test 12: Foundation::Containers::Bijection:
         Compiling Tests/12/Test.cpp ... 
      Test 13: Foundation::Containers::Collection:
         Compiling Tests/13/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 14: Foundation::Containers::DataHyperRectangle:
         Compiling Tests/14/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 15: Foundation::Containers::Deque:
         Compiling Tests/15/Test.cpp ... 
      Test 16: Foundation::Containers::KeyedCollection:
         Compiling Tests/16/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 17: Foundation::Containers::Mapping:
         Compiling Tests/17/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test13 ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test14 ... 
lto-wrapper: warning: using serial compilation of 13 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
lto-wrapper: warning: using serial compilation of 9 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test15 ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test12 ... 
lto-wrapper: warning: using serial compilation of 9 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 13 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test16 ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
lto-wrapper: warning: using serial compilation of 11 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test11 ... 
lto-wrapper: warning: using serial compilation of 24 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test17 ... 
lto-wrapper: warning: using serial compilation of 24 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 18: Foundation::Containers::MultiSet:
         Compiling Tests/18/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test18 ... 
      Test 19: Foundation::Containers::PriorityQueue:
         Compiling Tests/19/Test.cpp ... 
lto-wrapper: warning: using serial compilation of 20 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 20: Foundation::Containers::Queue:
         Compiling Tests/20/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test19 ... 
lto-wrapper: warning: using serial compilation of 8 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test20 ... 
lto-wrapper: warning: using serial compilation of 9 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 21: Foundation::Containers::Sequence:
         Compiling Tests/21/Test.cpp ... 
      Test 22: Foundation::Containers::Set:
         Compiling Tests/22/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 23: Foundation::Containers::SortedAssociation:
         Compiling Tests/23/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test21 ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test22 ... 
lto-wrapper: warning: using serial compilation of 27 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 17 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 24: Foundation::Containers::SortedCollection:
         Compiling Tests/24/Test.cpp ... 
      Test 25: Foundation::Containers::SortedKeyedCollection:
         Compiling Tests/25/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test23 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
lto-wrapper: warning: using serial compilation of 17 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test25 ... 
lto-wrapper: warning: using serial compilation of 9 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test24 ... 
lto-wrapper: warning: using serial compilation of 12 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 26: Foundation::Containers::SortedMapping:
         Compiling Tests/26/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test26 ... 
lto-wrapper: warning: using serial compilation of 16 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 27: Foundation::Containers::SortedMultiSet:
         Compiling Tests/27/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test27 ... 
lto-wrapper: warning: using serial compilation of 15 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 28: Foundation::Containers::SortedSet:
         Compiling Tests/28/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
      Test 29: Foundation::Containers::Stack:
         Compiling Tests/29/Test.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test28 ... 
lto-wrapper: warning: using serial compilation of 13 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test29 ... 
      Test 30: Foundation::Containers::STL:
         Compiling Tests/30/Test.cpp ... 
lto-wrapper: warning: using serial compilation of 10 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 31: Foundation::Cryptography:
         Compiling Tests/31/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test30 ... 
      Test 32: Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip):
         Compiling Tests/32/Test.cpp ... 
lto-wrapper: warning: using serial compilation of 8 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test31 ... 
lto-wrapper: warning: using serial compilation of 14 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 33: Foundation::DataExchange::ObjectVariantMapper:
         Compiling Tests/33/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test32 ... 
lto-wrapper: warning: using serial compilation of 23 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 34: Foundation::DataExchange::XML::SaxParser:
         Compiling Tests/34/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test33 ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/ToString.h:13,
                 from Test.cpp:10:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lto-wrapper: warning: using serial compilation of 28 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
      Test 35: Foundation::DataExchange::Other:
         Compiling Tests/35/Test.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test34 ... 
      Test 36: Foundation::Database:
         Compiling Tests/36/Test.cpp ... 
lto-wrapper: warning: using serial compilation of 25 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test35 ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/Format.h:15,
                 from Test.cpp:9:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      Test 37: Foundation::Execution::Exceptions:
         Compiling Tests/37/Test.cpp ... 
      Test 38: Foundation::Execution::ProcessRunner:
         Compiling Tests/38/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
lto-wrapper: warning: using serial compilation of 32 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test36 ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 39: Foundation::Execution::Signals:
         Compiling Tests/39/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test38 ... 
lto-wrapper: warning: using serial compilation of 53 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test37 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
lto-wrapper: warning: using serial compilation of 13 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
lto-wrapper: warning: using serial compilation of 8 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 40: Foundation::Execution::Threads:
         Compiling Tests/40/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test39 ... 
lto-wrapper: warning: using serial compilation of 9 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test40 ... 
lto-wrapper: warning: using serial compilation of 14 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 41: Foundation::Execution::ThreadSafetyBuiltinObject:
         Compiling Tests/41/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test41 ... 
lto-wrapper: warning: using serial compilation of 16 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 42: Foundation::Execution::Other:
         Compiling Tests/42/Test.cpp ... 
      Test 43: Foundation::IO::Network:
         Compiling Tests/43/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test42 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
lto-wrapper: warning: using serial compilation of 24 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test43 ... 
lto-wrapper: warning: using serial compilation of 22 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 44: Foundation::IO::Network::HTTP:
         Compiling Tests/44/Test.cpp ... 
      Test 45: Foundation::IO::Network::Transfer:
         Compiling Tests/45/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test44 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
lto-wrapper: warning: using serial compilation of 17 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 46: Foundation::IO::Other:
         Compiling Tests/46/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test45 ... 
lto-wrapper: warning: using serial compilation of 33 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test46 ... 
lto-wrapper: warning: using serial compilation of 14 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 47: Foundation::Math:
         Compiling Tests/47/Test.cpp ... 
      Test 48: Foundation::Memory:
         Compiling Tests/48/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test47 ... 
lto-wrapper: warning: using serial compilation of 10 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test48 ... 
lto-wrapper: warning: using serial compilation of 9 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 49: Foundation::Streams:
         Compiling Tests/49/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test49 ... 
lto-wrapper: warning: using serial compilation of 10 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Test 50: Foundation::Time:
         Compiling Tests/50/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 51: Foundation::Traversal:
         Compiling Tests/51/Test.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test50 ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
lto-wrapper: warning: using serial compilation of 12 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Tests/TestHarness/TestHarness.cpp ... 
      Test 52: Foundation::PERFORMANCE:
         Compiling Tests/52/Test.cpp ... 
         Compiling Tests/TestHarness/NotCopyable.cpp ... 
         Compiling Tests/TestHarness/SimpleClass.cpp ... 
         Compiling Tests/TestHarness/TestHarness.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test51 ... 
In file included from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.h:183,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.inl:17,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/Sequence_stdvector.h:123,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.inl:8,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Sequence.h:695,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/String.h:15,
                 from /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/FloatConversion.h:15,
                 from Test.cpp:16:
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl: In instantiation of 'Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current() const [with STL_CONTAINER_OF_T = std::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > >; Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<STL_CONTAINER_OF_T>::value_type = std::pair<const double, double>]':
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:94:41:   required from 'void Stroika::Foundation::Containers::Private::IteratorImplHelper_<T, DATASTRUCTURE_CONTAINER, DATASTRUCTURE_CONTAINER_ITERATOR, DATASTRUCTURE_CONTAINER_VALUE>::More(std::optional<_Tp>*, bool) [with T = Stroika::Foundation::Common::KeyValuePair<double, double>; DATASTRUCTURE_CONTAINER = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > > >; DATASTRUCTURE_CONTAINER_ITERATOR = Stroika::Foundation::Containers::DataStructures::STLContainerWrapper<std::map<double, double, {anonymous}::Test_JSONReadWriteFile_::SpectrumType::CompareNumbersLess_, Stroika::Foundation::Memory::BlockAllocator<std::pair<const double, double> > > >::ForwardIterator; DATASTRUCTURE_CONTAINER_VALUE = Stroika::Foundation::Common::KeyValuePair<double, double>]'
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../Private/IteratorImplHelper.inl:81:10:   required from here
/home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu2204-Cross-Compile2RaspberryPi/Library/Sources/Stroika/Foundation/Characters/../Containers/Concrete/../DataStructures/STLContainerWrapper.inl:166:17: note: parameter passing for argument of type 'std::pair<const double, double>' when C++17 is enabled changed to match C++14 in GCC 10.1
  166 |     inline auto STLContainerWrapper<STL_CONTAINER_OF_T>::ForwardIterator::Current () const -> value_type
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lto-wrapper: warning: using serial compilation of 19 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test52 ... 
lto-wrapper: warning: using serial compilation of 28 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
   Building Stroika Samples {raspberrypi-g++-12-release-sanitize_address}:
      Building Samples/AppSettings:
      Building Samples/ArchiveUtility:
      Building Samples/Containers:
      Building Samples/Serialization:
      Building Samples/Service:
      Building Samples/SQL:
      Building Samples/SSDPClient:
      Building Samples/Traceroute:
      Building Samples/SSDPServer:
      Building Samples/SystemPerformanceClient:
         Compiling Samples/AppSettings/Sources/Main.cpp ... 
         Compiling Samples/ArchiveUtility/Sources/ArchiveUtility.cpp ... 
         Compiling Samples/Serialization/Sources/Main.cpp ... 
         Compiling Samples/Containers/Sources/Main.cpp ... 
         Compiling Samples/SSDPClient/Sources/SSDPClient.cpp ... 
         Compiling Samples/SQL/Sources/Main.cpp ... 
         Compiling Samples/SSDPServer/Sources/SSDPServer.cpp ... 
         Compiling Samples/Traceroute/Sources/Traceroute.cpp ... 
         Compiling Samples/SystemPerformanceClient/Sources/SystemPerformanceClient.cpp ... 
         Compiling Samples/Service/Sources/Service.cpp ... 
         Compiling Samples/Containers/Sources/Collection.cpp ... 
         Compiling Samples/Serialization/Sources/ObjectVariantMapper.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-Traceroute/Traceroute ... 
         Compiling Samples/Service/Sources/Main.cpp ... 
         Compiling Samples/SQL/Sources/ComputerNetwork.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-ArchiveUtility/ArchiveUtility ... 
lto-wrapper: warning: using serial compilation of 11 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Samples/Containers/Sources/Mapping.cpp ... 
lto-wrapper: warning: using serial compilation of 9 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-AppSettings/AppSettings ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-SSDPClient/SSDPClient ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-Serialization/Serialization ... 
lto-wrapper: warning: using serial compilation of 21 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Samples/Containers/Sources/Sequence.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-Service/Service ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-SystemPerformanceClient/SystemPerformanceClient ... 
lto-wrapper: warning: using serial compilation of 20 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 13 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 39 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Samples/Containers/Sources/Set.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-SSDPServer/SSDPServer ... 
lto-wrapper: warning: using serial compilation of 43 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Samples/SQL/Sources/DirectEmployeesDB.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-Containers/Containers ... 
lto-wrapper: warning: using serial compilation of 10 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
lto-wrapper: warning: using serial compilation of 46 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Samples/SQL/Sources/ORMEmployeesDB.cpp ... 
         Compiling Samples/SQL/Sources/ThreadTest.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-SQL/SQL ... 
lto-wrapper: warning: using serial compilation of 53 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
      Building Samples/WebServer:
         Compiling Samples/WebServer/Sources/WebServer.cpp ... 
      Building Samples/WebService:
         Compiling Samples/WebService/Sources/IWSAPI.cpp ... 
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-WebServer/WebServer ... 
         Compiling Samples/WebService/Sources/Main.cpp ... 
lto-wrapper: warning: using serial compilation of 38 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
         Compiling Samples/WebService/Sources/Model.cpp ... 
         Compiling Samples/WebService/Sources/WebServer.cpp ... 
         Compiling Samples/WebService/Sources/WSImpl.cpp ... 
         Building Installers:
            Building DEB installer: 
               temp files: /tmp/tmp.GaZyBJQ8qj/; log: IntermediateFiles/raspberrypi-g++-12-release-sanitize_address/Samples-Service/DEB-Installer-Build.Out
               Built: Builds/raspberrypi-g++-12-release-sanitize_address/Samples-Service/stroika-sampleservice-3.0d1.Linux.armhf.deb
         Linking Builds/raspberrypi-g++-12-release-sanitize_address/Samples-WebService/WebService ... 
lto-wrapper: warning: using serial compilation of 49 LTRANS jobs
lto-wrapper: note: see the '-flto' option documentation for more information
done (in 79 minutes)
</Make all>


<Run-Tests ALL-Local>
)))- Run-Tests ALL-Local...SKIPPED
</Run-Tests ALL-Local>


<Run-Tests-REMOTE>
)))- Run-Tests raspberrypi remote...
)))- make run-tests TEST_FAILURES_CAUSE_FAILED_MAKE=0 CONFIGURATION=raspberrypi-g++-11-debug-sanitize_undefined REMOTE=lewis@192.168.244.52
Stroika ThirdPartyComponents Build {raspberrypi-g++-11-debug-sanitize_undefined}:
   Stroika/ThirdPartyComponents/zlib Build 1.2.13 {raspberrypi-g++-11-debug-sanitize_undefined}:
      zlib 1.2.13 - Checking ...  Stroika/ThirdPartyComponents/zlib -    [Succeeded]
   Stroika/ThirdPartyComponents/boost Build 1_82_0 {raspberrypi-g++-11-debug-sanitize_undefined}:
      boost 1_82_0 - Checking ...  Stroika/ThirdPartyComponents/boost -   [Succeeded]
   Stroika/ThirdPartyComponents/OpenSSL Build 3.1.0 {raspberrypi-g++-11-debug-sanitize_undefined}:
      openssl 3.1.0 - Checking ...  Stroika/ThirdPartyComponents/OpenSSL - [Succeeded]
   Stroika/ThirdPartyComponents/libcurl 8.1.2 Build {raspberrypi-g++-11-debug-sanitize_undefined}:
      curl 8.1.2 - Checking ...  Stroika/ThirdPartyComponents/curl -    [Succeeded]
   Stroika/ThirdPartyComponents/lzma Build 1604 {raspberrypi-g++-11-debug-sanitize_undefined}:
      lzma 1604 - Checking ...  Stroika/ThirdPartyComponents/lzma -    [Succeeded]
   Stroika/ThirdPartyComponents/sqlite Build 3420000 {raspberrypi-g++-11-debug-sanitize_undefined}:
      sqlite 3420000 - Checking ...  Stroika/ThirdPartyComponents/sqlite -  [Succeeded]
   Stroika/ThirdPartyComponents/xerces 3.2.4 Build {raspberrypi-g++-11-debug-sanitize_undefined}:
      Xerces 3.2.4 - Checking ...  Stroika/ThirdPartyComponents/Xerces -  [Succeeded]
Building Stroika Library {raspberrypi-g++-11-debug-sanitize_undefined}:
   Building Stroika Foundation Objs:
   Building Stroika Frameworks Objs:
Building Stroika Tests {raspberrypi-g++-11-debug-sanitize_undefined}:
   Test 01: Foundation::Caching:
   Test 02: Foundation::Characters:
   Test 03: Foundation::Common:
   Test 04: Foundation::Configuration:
   Test 05: Foundation::Containers::DataStructures::Array:
   Test 06: Foundation::Containers::DataStructures::LinkedList:
   Test 07: Foundation::Containers::DataStructures::LockFree:
   Test 08: Foundation::Containers::DataStructures::DoublyLinkedList:
   Test 09: Foundation::Containers::DataStructures::STLContainerWrapper:
   Test 10: Foundation::Containers::DataStructures::SkipList:
   Test 11: Foundation::Containers::Association:
   Test 12: Foundation::Containers::Bijection:
   Test 13: Foundation::Containers::Collection:
   Test 14: Foundation::Containers::DataHyperRectangle:
   Test 15: Foundation::Containers::Deque:
   Test 16: Foundation::Containers::KeyedCollection:
   Test 17: Foundation::Containers::Mapping:
   Test 18: Foundation::Containers::MultiSet:
   Test 19: Foundation::Containers::PriorityQueue:
   Test 20: Foundation::Containers::Queue:
   Test 21: Foundation::Containers::Sequence:
   Test 22: Foundation::Containers::Set:
   Test 23: Foundation::Containers::SortedAssociation:
   Test 24: Foundation::Containers::SortedCollection:
   Test 25: Foundation::Containers::SortedKeyedCollection:
   Test 26: Foundation::Containers::SortedMapping:
   Test 27: Foundation::Containers::SortedMultiSet:
   Test 28: Foundation::Containers::SortedSet:
   Test 29: Foundation::Containers::Stack:
   Test 30: Foundation::Containers::STL:
   Test 31: Foundation::Cryptography:
   Test 32: Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip):
   Test 33: Foundation::DataExchange::ObjectVariantMapper:
   Test 34: Foundation::DataExchange::XML::SaxParser:
   Test 35: Foundation::DataExchange::Other:
   Test 36: Foundation::Database:
   Test 37: Foundation::Execution::Exceptions:
   Test 38: Foundation::Execution::ProcessRunner:
   Test 39: Foundation::Execution::Signals:
   Test 40: Foundation::Execution::Threads:
   Test 41: Foundation::Execution::ThreadSafetyBuiltinObject:
   Test 42: Foundation::Execution::Other:
   Test 43: Foundation::IO::Network:
   Test 44: Foundation::IO::Network::HTTP:
   Test 45: Foundation::IO::Network::Transfer:
   Test 46: Foundation::IO::Other:
   Test 47: Foundation::Math:
   Test 48: Foundation::Memory:
   Test 49: Foundation::Streams:
   Test 50: Foundation::Time:
   Test 51: Foundation::Traversal:
   Test 52: Foundation::PERFORMANCE:
Running Stroika Tests {raspberrypi-g++-11-debug-sanitize_undefined}:
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test01)
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test01)
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test01)
   []  (0  seconds)  [01]  Foundation::Caching  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test01...; ssh lewis@192.168.244.52   /tmp/Test01)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test02)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test02)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test02)
   []  (0  seconds)  [02]  Foundation::Characters  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test02...; ssh lewis@192.168.244.52   /tmp/Test02)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test03)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test03)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test03)
   []  (1  seconds)  [03]  Foundation::Common  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test03...; ssh lewis@192.168.244.52   /tmp/Test03)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test04)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test04)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test04)
   []  (0  seconds)  [04]  Foundation::Configuration  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test04...; ssh lewis@192.168.244.52   /tmp/Test04)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test05)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test05)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test05)
   []  (0  seconds)  [05]  Foundation::Containers::DataStructures::Array  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test05...; ssh lewis@192.168.244.52   /tmp/Test05)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test06)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test06)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test06)
   []  (0  seconds)  [06]  Foundation::Containers::DataStructures::LinkedList  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test06...; ssh lewis@192.168.244.52   /tmp/Test06)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test07)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test07)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test07)
   []  (0  seconds)  [07]  Foundation::Containers::DataStructures::LockFree  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test07...; ssh lewis@192.168.244.52   /tmp/Test07)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test08)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test08)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test08)
   []  (0  seconds)  [08]  Foundation::Containers::DataStructures::DoublyLinkedList  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test08...; ssh lewis@192.168.244.52   /tmp/Test08)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test09)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test09)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test09)
   []  (0  seconds)  [09]  Foundation::Containers::DataStructures::STLContainerWrapper  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test09...; ssh lewis@192.168.244.52   /tmp/Test09)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test10)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test10)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test10)
   []  (0  seconds)  [10]  Foundation::Containers::DataStructures::SkipList  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test10...; ssh lewis@192.168.244.52   /tmp/Test10)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test11)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test11)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test11)
   []  (1  seconds)  [11]  Foundation::Containers::Association  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test11...; ssh lewis@192.168.244.52   /tmp/Test11)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test12)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test12)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test12)
   []  (0  seconds)  [12]  Foundation::Containers::Bijection  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test12...; ssh lewis@192.168.244.52   /tmp/Test12)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test13)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test13)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test13)
   []  (0  seconds)  [13]  Foundation::Containers::Collection  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test13...; ssh lewis@192.168.244.52   /tmp/Test13)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test14)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test14)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test14)
   []  (0  seconds)  [14]  Foundation::Containers::DataHyperRectangle  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test14...; ssh lewis@192.168.244.52   /tmp/Test14)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test15)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test15)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test15)
   []  (1  seconds)  [15]  Foundation::Containers::Deque  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test15...; ssh lewis@192.168.244.52   /tmp/Test15)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test16)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test16)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test16)
   []  (0  seconds)  [16]  Foundation::Containers::KeyedCollection  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test16...; ssh lewis@192.168.244.52   /tmp/Test16)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test17)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test17)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test17)
   []  (0  seconds)  [17]  Foundation::Containers::Mapping  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test17...; ssh lewis@192.168.244.52   /tmp/Test17)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test18)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test18)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test18)
   []  (0  seconds)  [18]  Foundation::Containers::MultiSet  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test18...; ssh lewis@192.168.244.52   /tmp/Test18)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test19)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test19)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test19)
   []  (0  seconds)  [19]  Foundation::Containers::PriorityQueue  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test19...; ssh lewis@192.168.244.52   /tmp/Test19)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test20)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test20)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test20)
   []  (1  seconds)  [20]  Foundation::Containers::Queue  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test20...; ssh lewis@192.168.244.52   /tmp/Test20)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test21)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test21)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test21)
   []  (0  seconds)  [21]  Foundation::Containers::Sequence  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test21...; ssh lewis@192.168.244.52   /tmp/Test21)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test22)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test22)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test22)
   []  (0  seconds)  [22]  Foundation::Containers::Set  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test22...; ssh lewis@192.168.244.52   /tmp/Test22)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test23)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test23)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test23)
   []  (1  seconds)  [23]  Foundation::Containers::SortedAssociation  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test23...; ssh lewis@192.168.244.52   /tmp/Test23)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test24)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test24)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test24)
   []  (0  seconds)  [24]  Foundation::Containers::SortedCollection  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test24...; ssh lewis@192.168.244.52   /tmp/Test24)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test25)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test25)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test25)
   []  (1  seconds)  [25]  Foundation::Containers::SortedKeyedCollection  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test25...; ssh lewis@192.168.244.52   /tmp/Test25)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test26)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test26)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test26)
   []  (0  seconds)  [26]  Foundation::Containers::SortedMapping  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test26...; ssh lewis@192.168.244.52   /tmp/Test26)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test27)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test27)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test27)
   []  (0  seconds)  [27]  Foundation::Containers::SortedMultiSet  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test27...; ssh lewis@192.168.244.52   /tmp/Test27)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test28)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test28)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test28)
   []  (1  seconds)  [28]  Foundation::Containers::SortedSet  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test28...; ssh lewis@192.168.244.52   /tmp/Test28)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test29)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test29)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test29)
   []  (1  seconds)  [29]  Foundation::Containers::Stack  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test29...; ssh lewis@192.168.244.52   /tmp/Test29)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test30)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test30)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test30)
   []  (31 seconds)  [30]  Foundation::Containers::STL  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test30...; ssh lewis@192.168.244.52   /tmp/Test30)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test31)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test31)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test31)
   []  (0  seconds)  [31]  Foundation::Cryptography  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test31...; ssh lewis@192.168.244.52   /tmp/Test31)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test32)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test32)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test32)
   []  (1  seconds)  [32]  Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip)  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test32...; ssh lewis@192.168.244.52   /tmp/Test32)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test33)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test33)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test33)
   []  (0  seconds)  [33]  Foundation::DataExchange::ObjectVariantMapper  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test33...; ssh lewis@192.168.244.52   /tmp/Test33)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test34)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test34)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test34)
   []  (0  seconds)  [34]  Foundation::DataExchange::XML::SaxParser  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test34...; ssh lewis@192.168.244.52   /tmp/Test34)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test35)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test35)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test35)
   []  (0  seconds)  [35]  Foundation::DataExchange::Other  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test35...; ssh lewis@192.168.244.52   /tmp/Test35)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test36)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test36)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test36)
   []  (1  seconds)  [36]  Foundation::Database  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test36...; ssh lewis@192.168.244.52   /tmp/Test36)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test37)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test37)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test37)
   []  (0  seconds)  [37]  Foundation::Execution::Exceptions  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test37...; ssh lewis@192.168.244.52   /tmp/Test37)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test38)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test38)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test38)
   []  (0  seconds)  [38]  Foundation::Execution::ProcessRunner  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test38...; ssh lewis@192.168.244.52   /tmp/Test38)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test39)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test39)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test39)
   []  (0  seconds)  [39]  Foundation::Execution::Signals  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test39...; ssh lewis@192.168.244.52   /tmp/Test39)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test40)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test40)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test40)
   []  (0  seconds)  [40]  Foundation::Execution::Threads  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test40...; ssh lewis@192.168.244.52   /tmp/Test40)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test41)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test41)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test41)
   []  (0  seconds)  [41]  Foundation::Execution::ThreadSafetyBuiltinObject  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test41...; ssh lewis@192.168.244.52   /tmp/Test41)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test42)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test42)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test42)
   []  (1  seconds)  [42]  Foundation::Execution::Other  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test42...; ssh lewis@192.168.244.52   /tmp/Test42)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test43)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test43)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test43)
   []  (0  seconds)  [43]  Foundation::IO::Network  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test43...; ssh lewis@192.168.244.52   /tmp/Test43)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test44)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test44)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test44)
   []  (1  seconds)  [44]  Foundation::IO::Network::HTTP  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test44...; ssh lewis@192.168.244.52   /tmp/Test44)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test45)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test45)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test45)
   []  (0  seconds)  [45]  Foundation::IO::Network::Transfer  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test45...; ssh lewis@192.168.244.52   /tmp/Test45)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test46)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test46)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test46)
   []  (2  seconds)  [46]  Foundation::IO::Other  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test46...; ssh lewis@192.168.244.52   /tmp/Test46)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test47)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test47)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test47)
   []  (8  seconds)  [47]  Foundation::Math  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test47...; ssh lewis@192.168.244.52   /tmp/Test47)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test48)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test48)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test48)
   []  (0  seconds)  [48]  Foundation::Memory  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test48...; ssh lewis@192.168.244.52   /tmp/Test48)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test49)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test49)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test49)
   []  (11 seconds)  [49]  Foundation::Streams  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test49...; ssh lewis@192.168.244.52   /tmp/Test49)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test50)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test50)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test50)
   []  (1  seconds)  [50]  Foundation::Time  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test50...; ssh lewis@192.168.244.52   /tmp/Test50)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test51)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test51)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test51)
   []  (0  seconds)  [51]  Foundation::Traversal  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test51...; ssh lewis@192.168.244.52   /tmp/Test51)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test52)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test52)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test52)
   []  (0  seconds)  [52]  Foundation::PERFORMANCE  (scp ../Builds/raspberrypi-g++-11-debug-sanitize_undefined/Tests/Test52...; ssh lewis@192.168.244.52   /tmp/Test52)
       ***SOME TESTS FAILED*** (exit suppressed by TEST_FAILURES_CAUSE_FAILED_MAKE)
)))- make run-tests TEST_FAILURES_CAUSE_FAILED_MAKE=0 CONFIGURATION=raspberrypi-g++-11-release-sanitize_address REMOTE=lewis@192.168.244.52
Stroika ThirdPartyComponents Build {raspberrypi-g++-11-release-sanitize_address}:
   Stroika/ThirdPartyComponents/zlib Build 1.2.13 {raspberrypi-g++-11-release-sanitize_address}:
      zlib 1.2.13 - Checking ...  Stroika/ThirdPartyComponents/zlib -    [Succeeded]
   Stroika/ThirdPartyComponents/boost Build 1_82_0 {raspberrypi-g++-11-release-sanitize_address}:
      boost 1_82_0 - Checking ...  Stroika/ThirdPartyComponents/boost -   [Succeeded]
   Stroika/ThirdPartyComponents/OpenSSL Build 3.1.0 {raspberrypi-g++-11-release-sanitize_address}:
      openssl 3.1.0 - Checking ...  Stroika/ThirdPartyComponents/OpenSSL - [Succeeded]
   Stroika/ThirdPartyComponents/libcurl 8.1.2 Build {raspberrypi-g++-11-release-sanitize_address}:
      curl 8.1.2 - Checking ...  Stroika/ThirdPartyComponents/curl -    [Succeeded]
   Stroika/ThirdPartyComponents/lzma Build 1604 {raspberrypi-g++-11-release-sanitize_address}:
      lzma 1604 - Checking ...  Stroika/ThirdPartyComponents/lzma -    [Succeeded]
   Stroika/ThirdPartyComponents/sqlite Build 3420000 {raspberrypi-g++-11-release-sanitize_address}:
      sqlite 3420000 - Checking ...  Stroika/ThirdPartyComponents/sqlite -  [Succeeded]
   Stroika/ThirdPartyComponents/xerces 3.2.4 Build {raspberrypi-g++-11-release-sanitize_address}:
      Xerces 3.2.4 - Checking ...  Stroika/ThirdPartyComponents/Xerces -  [Succeeded]
Building Stroika Library {raspberrypi-g++-11-release-sanitize_address}:
   Building Stroika Foundation Objs:
   Building Stroika Frameworks Objs:
Building Stroika Tests {raspberrypi-g++-11-release-sanitize_address}:
   Test 01: Foundation::Caching:
   Test 02: Foundation::Characters:
   Test 03: Foundation::Common:
   Test 04: Foundation::Configuration:
   Test 05: Foundation::Containers::DataStructures::Array:
   Test 06: Foundation::Containers::DataStructures::LinkedList:
   Test 07: Foundation::Containers::DataStructures::LockFree:
   Test 08: Foundation::Containers::DataStructures::DoublyLinkedList:
   Test 09: Foundation::Containers::DataStructures::STLContainerWrapper:
   Test 10: Foundation::Containers::DataStructures::SkipList:
   Test 11: Foundation::Containers::Association:
   Test 12: Foundation::Containers::Bijection:
   Test 13: Foundation::Containers::Collection:
   Test 14: Foundation::Containers::DataHyperRectangle:
   Test 15: Foundation::Containers::Deque:
   Test 16: Foundation::Containers::KeyedCollection:
   Test 17: Foundation::Containers::Mapping:
   Test 18: Foundation::Containers::MultiSet:
   Test 19: Foundation::Containers::PriorityQueue:
   Test 20: Foundation::Containers::Queue:
   Test 21: Foundation::Containers::Sequence:
   Test 22: Foundation::Containers::Set:
   Test 23: Foundation::Containers::SortedAssociation:
   Test 24: Foundation::Containers::SortedCollection:
   Test 25: Foundation::Containers::SortedKeyedCollection:
   Test 26: Foundation::Containers::SortedMapping:
   Test 27: Foundation::Containers::SortedMultiSet:
   Test 28: Foundation::Containers::SortedSet:
   Test 29: Foundation::Containers::Stack:
   Test 30: Foundation::Containers::STL:
   Test 31: Foundation::Cryptography:
   Test 32: Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip):
   Test 33: Foundation::DataExchange::ObjectVariantMapper:
   Test 34: Foundation::DataExchange::XML::SaxParser:
   Test 35: Foundation::DataExchange::Other:
   Test 36: Foundation::Database:
   Test 37: Foundation::Execution::Exceptions:
   Test 38: Foundation::Execution::ProcessRunner:
   Test 39: Foundation::Execution::Signals:
   Test 40: Foundation::Execution::Threads:
   Test 41: Foundation::Execution::ThreadSafetyBuiltinObject:
   Test 42: Foundation::Execution::Other:
   Test 43: Foundation::IO::Network:
   Test 44: Foundation::IO::Network::HTTP:
   Test 45: Foundation::IO::Network::Transfer:
   Test 46: Foundation::IO::Other:
   Test 47: Foundation::Math:
   Test 48: Foundation::Memory:
   Test 49: Foundation::Streams:
   Test 50: Foundation::Time:
   Test 51: Foundation::Traversal:
   Test 52: Foundation::PERFORMANCE:
Running Stroika Tests {raspberrypi-g++-11-release-sanitize_address}:
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test01)
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test01)
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test01)
   []  (0  seconds)  [01]  Foundation::Caching  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test01...; ssh lewis@192.168.244.52   /tmp/Test01)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test02)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test02)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test02)
   []  (0  seconds)  [02]  Foundation::Characters  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test02...; ssh lewis@192.168.244.52   /tmp/Test02)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test03)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test03)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test03)
   []  (3  seconds)  [03]  Foundation::Common  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test03...; ssh lewis@192.168.244.52   /tmp/Test03)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test04)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test04)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test04)
   []  (0  seconds)  [04]  Foundation::Configuration  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test04...; ssh lewis@192.168.244.52   /tmp/Test04)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test05)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test05)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test05)
   []  (0  seconds)  [05]  Foundation::Containers::DataStructures::Array  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test05...; ssh lewis@192.168.244.52   /tmp/Test05)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test06)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test06)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test06)
   []  (0  seconds)  [06]  Foundation::Containers::DataStructures::LinkedList  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test06...; ssh lewis@192.168.244.52   /tmp/Test06)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test07)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test07)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test07)
   []  (1  seconds)  [07]  Foundation::Containers::DataStructures::LockFree  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test07...; ssh lewis@192.168.244.52   /tmp/Test07)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test08)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test08)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test08)
   []  (1  seconds)  [08]  Foundation::Containers::DataStructures::DoublyLinkedList  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test08...; ssh lewis@192.168.244.52   /tmp/Test08)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test09)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test09)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test09)
   []  (0  seconds)  [09]  Foundation::Containers::DataStructures::STLContainerWrapper  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test09...; ssh lewis@192.168.244.52   /tmp/Test09)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test10)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test10)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test10)
   []  (0  seconds)  [10]  Foundation::Containers::DataStructures::SkipList  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test10...; ssh lewis@192.168.244.52   /tmp/Test10)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test11)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test11)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test11)
   []  (0  seconds)  [11]  Foundation::Containers::Association  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test11...; ssh lewis@192.168.244.52   /tmp/Test11)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test12)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test12)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test12)
   []  (1  seconds)  [12]  Foundation::Containers::Bijection  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test12...; ssh lewis@192.168.244.52   /tmp/Test12)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test13)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test13)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test13)
   []  (1  seconds)  [13]  Foundation::Containers::Collection  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test13...; ssh lewis@192.168.244.52   /tmp/Test13)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test14)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test14)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test14)
   []  (0  seconds)  [14]  Foundation::Containers::DataHyperRectangle  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test14...; ssh lewis@192.168.244.52   /tmp/Test14)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test15)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test15)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test15)
   []  (0  seconds)  [15]  Foundation::Containers::Deque  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test15...; ssh lewis@192.168.244.52   /tmp/Test15)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test16)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test16)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test16)
   []  (0  seconds)  [16]  Foundation::Containers::KeyedCollection  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test16...; ssh lewis@192.168.244.52   /tmp/Test16)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test17)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test17)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test17)
   []  (0  seconds)  [17]  Foundation::Containers::Mapping  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test17...; ssh lewis@192.168.244.52   /tmp/Test17)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test18)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test18)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test18)
   []  (0  seconds)  [18]  Foundation::Containers::MultiSet  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test18...; ssh lewis@192.168.244.52   /tmp/Test18)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test19)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test19)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test19)
   []  (0  seconds)  [19]  Foundation::Containers::PriorityQueue  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test19...; ssh lewis@192.168.244.52   /tmp/Test19)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test20)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test20)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test20)
   []  (0  seconds)  [20]  Foundation::Containers::Queue  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test20...; ssh lewis@192.168.244.52   /tmp/Test20)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test21)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test21)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test21)
   []  (0  seconds)  [21]  Foundation::Containers::Sequence  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test21...; ssh lewis@192.168.244.52   /tmp/Test21)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test22)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test22)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test22)
   []  (1  seconds)  [22]  Foundation::Containers::Set  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test22...; ssh lewis@192.168.244.52   /tmp/Test22)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test23)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test23)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test23)
   []  (0  seconds)  [23]  Foundation::Containers::SortedAssociation  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test23...; ssh lewis@192.168.244.52   /tmp/Test23)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test24)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test24)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test24)
   []  (0  seconds)  [24]  Foundation::Containers::SortedCollection  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test24...; ssh lewis@192.168.244.52   /tmp/Test24)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test25)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test25)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test25)
   []  (0  seconds)  [25]  Foundation::Containers::SortedKeyedCollection  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test25...; ssh lewis@192.168.244.52   /tmp/Test25)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test26)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test26)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test26)
   []  (0  seconds)  [26]  Foundation::Containers::SortedMapping  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test26...; ssh lewis@192.168.244.52   /tmp/Test26)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test27)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test27)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test27)
   []  (0  seconds)  [27]  Foundation::Containers::SortedMultiSet  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test27...; ssh lewis@192.168.244.52   /tmp/Test27)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test28)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test28)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test28)
   []  (0  seconds)  [28]  Foundation::Containers::SortedSet  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test28...; ssh lewis@192.168.244.52   /tmp/Test28)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test29)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test29)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test29)
   []  (0  seconds)  [29]  Foundation::Containers::Stack  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test29...; ssh lewis@192.168.244.52   /tmp/Test29)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test30)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test30)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test30)
   []  (0  seconds)  [30]  Foundation::Containers::STL  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test30...; ssh lewis@192.168.244.52   /tmp/Test30)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test31)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test31)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test31)
   []  (1  seconds)  [31]  Foundation::Cryptography  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test31...; ssh lewis@192.168.244.52   /tmp/Test31)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test32)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test32)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test32)
   []  (0  seconds)  [32]  Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip)  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test32...; ssh lewis@192.168.244.52   /tmp/Test32)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test33)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test33)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test33)
   []  (0  seconds)  [33]  Foundation::DataExchange::ObjectVariantMapper  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test33...; ssh lewis@192.168.244.52   /tmp/Test33)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test34)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test34)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test34)
   []  (1  seconds)  [34]  Foundation::DataExchange::XML::SaxParser  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test34...; ssh lewis@192.168.244.52   /tmp/Test34)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test35)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test35)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test35)
   []  (0  seconds)  [35]  Foundation::DataExchange::Other  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test35...; ssh lewis@192.168.244.52   /tmp/Test35)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test36)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test36)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test36)
   []  (0  seconds)  [36]  Foundation::Database  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test36...; ssh lewis@192.168.244.52   /tmp/Test36)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test37)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test37)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test37)
   []  (0  seconds)  [37]  Foundation::Execution::Exceptions  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test37...; ssh lewis@192.168.244.52   /tmp/Test37)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test38)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test38)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test38)
   []  (0  seconds)  [38]  Foundation::Execution::ProcessRunner  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test38...; ssh lewis@192.168.244.52   /tmp/Test38)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test39)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test39)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test39)
   []  (0  seconds)  [39]  Foundation::Execution::Signals  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test39...; ssh lewis@192.168.244.52   /tmp/Test39)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test40)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test40)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test40)
   []  (0  seconds)  [40]  Foundation::Execution::Threads  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test40...; ssh lewis@192.168.244.52   /tmp/Test40)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test41)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test41)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test41)
   []  (0  seconds)  [41]  Foundation::Execution::ThreadSafetyBuiltinObject  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test41...; ssh lewis@192.168.244.52   /tmp/Test41)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test42)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test42)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test42)
   []  (1  seconds)  [42]  Foundation::Execution::Other  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test42...; ssh lewis@192.168.244.52   /tmp/Test42)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test43)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test43)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test43)
   []  (0  seconds)  [43]  Foundation::IO::Network  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test43...; ssh lewis@192.168.244.52   /tmp/Test43)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test44)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test44)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test44)
   []  (0  seconds)  [44]  Foundation::IO::Network::HTTP  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test44...; ssh lewis@192.168.244.52   /tmp/Test44)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test45)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test45)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test45)
   []  (0  seconds)  [45]  Foundation::IO::Network::Transfer  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test45...; ssh lewis@192.168.244.52   /tmp/Test45)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test46)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test46)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test46)
   []  (0  seconds)  [46]  Foundation::IO::Other  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test46...; ssh lewis@192.168.244.52   /tmp/Test46)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test47)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test47)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test47)
   []  (0  seconds)  [47]  Foundation::Math  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test47...; ssh lewis@192.168.244.52   /tmp/Test47)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test48)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test48)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test48)
   []  (0  seconds)  [48]  Foundation::Memory  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test48...; ssh lewis@192.168.244.52   /tmp/Test48)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test49)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test49)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test49)
   []  (0  seconds)  [49]  Foundation::Streams  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test49...; ssh lewis@192.168.244.52   /tmp/Test49)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test50)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test50)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test50)
   []  (0  seconds)  [50]  Foundation::Time  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test50...; ssh lewis@192.168.244.52   /tmp/Test50)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test51)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test51)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test51)
   []  (0  seconds)  [51]  Foundation::Traversal  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test51...; ssh lewis@192.168.244.52   /tmp/Test51)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test52)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test52)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test52)
   []  (0  seconds)  [52]  Foundation::PERFORMANCE  (scp ../Builds/raspberrypi-g++-11-release-sanitize_address/Tests/Test52...; ssh lewis@192.168.244.52   /tmp/Test52)
       ***SOME TESTS FAILED*** (exit suppressed by TEST_FAILURES_CAUSE_FAILED_MAKE)
)))- make run-tests TEST_FAILURES_CAUSE_FAILED_MAKE=0 CONFIGURATION=raspberrypi-g++-12-debug-sanitize_undefined REMOTE=lewis@192.168.244.52
Stroika ThirdPartyComponents Build {raspberrypi-g++-12-debug-sanitize_undefined}:
   Stroika/ThirdPartyComponents/zlib Build 1.2.13 {raspberrypi-g++-12-debug-sanitize_undefined}:
      zlib 1.2.13 - Checking ...  Stroika/ThirdPartyComponents/zlib -    [Succeeded]
   Stroika/ThirdPartyComponents/boost Build 1_82_0 {raspberrypi-g++-12-debug-sanitize_undefined}:
      boost 1_82_0 - Checking ...  Stroika/ThirdPartyComponents/boost -   [Succeeded]
   Stroika/ThirdPartyComponents/OpenSSL Build 3.1.0 {raspberrypi-g++-12-debug-sanitize_undefined}:
      openssl 3.1.0 - Checking ...  Stroika/ThirdPartyComponents/OpenSSL - [Succeeded]
   Stroika/ThirdPartyComponents/libcurl 8.1.2 Build {raspberrypi-g++-12-debug-sanitize_undefined}:
      curl 8.1.2 - Checking ...  Stroika/ThirdPartyComponents/curl -    [Succeeded]
   Stroika/ThirdPartyComponents/lzma Build 1604 {raspberrypi-g++-12-debug-sanitize_undefined}:
      lzma 1604 - Checking ...  Stroika/ThirdPartyComponents/lzma -    [Succeeded]
   Stroika/ThirdPartyComponents/sqlite Build 3420000 {raspberrypi-g++-12-debug-sanitize_undefined}:
      sqlite 3420000 - Checking ...  Stroika/ThirdPartyComponents/sqlite -  [Succeeded]
   Stroika/ThirdPartyComponents/xerces 3.2.4 Build {raspberrypi-g++-12-debug-sanitize_undefined}:
      Xerces 3.2.4 - Checking ...  Stroika/ThirdPartyComponents/Xerces -  [Succeeded]
Building Stroika Library {raspberrypi-g++-12-debug-sanitize_undefined}:
   Building Stroika Foundation Objs:
   Building Stroika Frameworks Objs:
Building Stroika Tests {raspberrypi-g++-12-debug-sanitize_undefined}:
   Test 01: Foundation::Caching:
   Test 02: Foundation::Characters:
   Test 03: Foundation::Common:
   Test 04: Foundation::Configuration:
   Test 05: Foundation::Containers::DataStructures::Array:
   Test 06: Foundation::Containers::DataStructures::LinkedList:
   Test 07: Foundation::Containers::DataStructures::LockFree:
   Test 08: Foundation::Containers::DataStructures::DoublyLinkedList:
   Test 09: Foundation::Containers::DataStructures::STLContainerWrapper:
   Test 10: Foundation::Containers::DataStructures::SkipList:
   Test 11: Foundation::Containers::Association:
   Test 12: Foundation::Containers::Bijection:
   Test 13: Foundation::Containers::Collection:
   Test 14: Foundation::Containers::DataHyperRectangle:
   Test 15: Foundation::Containers::Deque:
   Test 16: Foundation::Containers::KeyedCollection:
   Test 17: Foundation::Containers::Mapping:
   Test 18: Foundation::Containers::MultiSet:
   Test 19: Foundation::Containers::PriorityQueue:
   Test 20: Foundation::Containers::Queue:
   Test 21: Foundation::Containers::Sequence:
   Test 22: Foundation::Containers::Set:
   Test 23: Foundation::Containers::SortedAssociation:
   Test 24: Foundation::Containers::SortedCollection:
   Test 25: Foundation::Containers::SortedKeyedCollection:
   Test 26: Foundation::Containers::SortedMapping:
   Test 27: Foundation::Containers::SortedMultiSet:
   Test 28: Foundation::Containers::SortedSet:
   Test 29: Foundation::Containers::Stack:
   Test 30: Foundation::Containers::STL:
   Test 31: Foundation::Cryptography:
   Test 32: Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip):
   Test 33: Foundation::DataExchange::ObjectVariantMapper:
   Test 34: Foundation::DataExchange::XML::SaxParser:
   Test 35: Foundation::DataExchange::Other:
   Test 36: Foundation::Database:
   Test 37: Foundation::Execution::Exceptions:
   Test 38: Foundation::Execution::ProcessRunner:
   Test 39: Foundation::Execution::Signals:
   Test 40: Foundation::Execution::Threads:
   Test 41: Foundation::Execution::ThreadSafetyBuiltinObject:
   Test 42: Foundation::Execution::Other:
   Test 43: Foundation::IO::Network:
   Test 44: Foundation::IO::Network::HTTP:
   Test 45: Foundation::IO::Network::Transfer:
   Test 46: Foundation::IO::Other:
   Test 47: Foundation::Math:
   Test 48: Foundation::Memory:
   Test 49: Foundation::Streams:
   Test 50: Foundation::Time:
   Test 51: Foundation::Traversal:
   Test 52: Foundation::PERFORMANCE:
Running Stroika Tests {raspberrypi-g++-12-debug-sanitize_undefined}:
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test01)
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test01)
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test01)
   []  (0  seconds)  [01]  Foundation::Caching  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test01...; ssh lewis@192.168.244.52   /tmp/Test01)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test02)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test02)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test02)
   []  (0  seconds)  [02]  Foundation::Characters  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test02...; ssh lewis@192.168.244.52   /tmp/Test02)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test03)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test03)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test03)
   []  (1  seconds)  [03]  Foundation::Common  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test03...; ssh lewis@192.168.244.52   /tmp/Test03)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test04)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test04)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test04)
   []  (0  seconds)  [04]  Foundation::Configuration  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test04...; ssh lewis@192.168.244.52   /tmp/Test04)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test05)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test05)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test05)
   []  (1  seconds)  [05]  Foundation::Containers::DataStructures::Array  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test05...; ssh lewis@192.168.244.52   /tmp/Test05)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test06)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test06)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test06)
   []  (0  seconds)  [06]  Foundation::Containers::DataStructures::LinkedList  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test06...; ssh lewis@192.168.244.52   /tmp/Test06)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test07)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test07)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test07)
   []  (0  seconds)  [07]  Foundation::Containers::DataStructures::LockFree  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test07...; ssh lewis@192.168.244.52   /tmp/Test07)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test08)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test08)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test08)
   []  (0  seconds)  [08]  Foundation::Containers::DataStructures::DoublyLinkedList  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test08...; ssh lewis@192.168.244.52   /tmp/Test08)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test09)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test09)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test09)
   []  (0  seconds)  [09]  Foundation::Containers::DataStructures::STLContainerWrapper  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test09...; ssh lewis@192.168.244.52   /tmp/Test09)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test10)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test10)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test10)
   []  (1  seconds)  [10]  Foundation::Containers::DataStructures::SkipList  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test10...; ssh lewis@192.168.244.52   /tmp/Test10)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test11)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test11)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test11)
   []  (0  seconds)  [11]  Foundation::Containers::Association  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test11...; ssh lewis@192.168.244.52   /tmp/Test11)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test12)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test12)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test12)
   []  (0  seconds)  [12]  Foundation::Containers::Bijection  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test12...; ssh lewis@192.168.244.52   /tmp/Test12)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test13)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test13)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test13)
   []  (1  seconds)  [13]  Foundation::Containers::Collection  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test13...; ssh lewis@192.168.244.52   /tmp/Test13)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test14)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test14)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test14)
   []  (1  seconds)  [14]  Foundation::Containers::DataHyperRectangle  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test14...; ssh lewis@192.168.244.52   /tmp/Test14)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test15)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test15)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test15)
   []  (0  seconds)  [15]  Foundation::Containers::Deque  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test15...; ssh lewis@192.168.244.52   /tmp/Test15)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test16)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test16)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test16)
   []  (0  seconds)  [16]  Foundation::Containers::KeyedCollection  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test16...; ssh lewis@192.168.244.52   /tmp/Test16)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test17)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test17)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test17)
   []  (0  seconds)  [17]  Foundation::Containers::Mapping  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test17...; ssh lewis@192.168.244.52   /tmp/Test17)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test18)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test18)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test18)
   []  (0  seconds)  [18]  Foundation::Containers::MultiSet  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test18...; ssh lewis@192.168.244.52   /tmp/Test18)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test19)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test19)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test19)
   []  (0  seconds)  [19]  Foundation::Containers::PriorityQueue  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test19...; ssh lewis@192.168.244.52   /tmp/Test19)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test20)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test20)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test20)
   []  (1  seconds)  [20]  Foundation::Containers::Queue  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test20...; ssh lewis@192.168.244.52   /tmp/Test20)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test21)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test21)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test21)
   []  (1  seconds)  [21]  Foundation::Containers::Sequence  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test21...; ssh lewis@192.168.244.52   /tmp/Test21)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test22)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test22)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test22)
   []  (0  seconds)  [22]  Foundation::Containers::Set  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test22...; ssh lewis@192.168.244.52   /tmp/Test22)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test23)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test23)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test23)
   []  (0  seconds)  [23]  Foundation::Containers::SortedAssociation  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test23...; ssh lewis@192.168.244.52   /tmp/Test23)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test24)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test24)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test24)
   []  (0  seconds)  [24]  Foundation::Containers::SortedCollection  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test24...; ssh lewis@192.168.244.52   /tmp/Test24)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test25)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test25)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test25)
   []  (0  seconds)  [25]  Foundation::Containers::SortedKeyedCollection  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test25...; ssh lewis@192.168.244.52   /tmp/Test25)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test26)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test26)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test26)
   []  (1  seconds)  [26]  Foundation::Containers::SortedMapping  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test26...; ssh lewis@192.168.244.52   /tmp/Test26)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test27)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test27)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test27)
   []  (0  seconds)  [27]  Foundation::Containers::SortedMultiSet  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test27...; ssh lewis@192.168.244.52   /tmp/Test27)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test28)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test28)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test28)
   []  (1  seconds)  [28]  Foundation::Containers::SortedSet  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test28...; ssh lewis@192.168.244.52   /tmp/Test28)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test29)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test29)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test29)
   []  (1  seconds)  [29]  Foundation::Containers::Stack  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test29...; ssh lewis@192.168.244.52   /tmp/Test29)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test30)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test30)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test30)
   []  (1  seconds)  [30]  Foundation::Containers::STL  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test30...; ssh lewis@192.168.244.52   /tmp/Test30)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test31)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test31)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test31)
   []  (1  seconds)  [31]  Foundation::Cryptography  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test31...; ssh lewis@192.168.244.52   /tmp/Test31)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test32)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test32)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test32)
   []  (0  seconds)  [32]  Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip)  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test32...; ssh lewis@192.168.244.52   /tmp/Test32)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test33)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test33)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test33)
   []  (1  seconds)  [33]  Foundation::DataExchange::ObjectVariantMapper  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test33...; ssh lewis@192.168.244.52   /tmp/Test33)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test34)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test34)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test34)
   []  (0  seconds)  [34]  Foundation::DataExchange::XML::SaxParser  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test34...; ssh lewis@192.168.244.52   /tmp/Test34)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test35)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test35)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test35)
   []  (0  seconds)  [35]  Foundation::DataExchange::Other  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test35...; ssh lewis@192.168.244.52   /tmp/Test35)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test36)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test36)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test36)
   []  (0  seconds)  [36]  Foundation::Database  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test36...; ssh lewis@192.168.244.52   /tmp/Test36)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test37)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test37)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test37)
   []  (0  seconds)  [37]  Foundation::Execution::Exceptions  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test37...; ssh lewis@192.168.244.52   /tmp/Test37)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test38)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test38)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test38)
   []  (0  seconds)  [38]  Foundation::Execution::ProcessRunner  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test38...; ssh lewis@192.168.244.52   /tmp/Test38)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test39)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test39)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test39)
   []  (1  seconds)  [39]  Foundation::Execution::Signals  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test39...; ssh lewis@192.168.244.52   /tmp/Test39)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test40)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test40)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test40)
   []  (0  seconds)  [40]  Foundation::Execution::Threads  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test40...; ssh lewis@192.168.244.52   /tmp/Test40)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test41)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test41)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test41)
   []  (0  seconds)  [41]  Foundation::Execution::ThreadSafetyBuiltinObject  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test41...; ssh lewis@192.168.244.52   /tmp/Test41)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test42)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test42)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test42)
   []  (0  seconds)  [42]  Foundation::Execution::Other  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test42...; ssh lewis@192.168.244.52   /tmp/Test42)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test43)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test43)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test43)
   []  (0  seconds)  [43]  Foundation::IO::Network  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test43...; ssh lewis@192.168.244.52   /tmp/Test43)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test44)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test44)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test44)
   []  (0  seconds)  [44]  Foundation::IO::Network::HTTP  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test44...; ssh lewis@192.168.244.52   /tmp/Test44)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test45)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test45)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test45)
   []  (0  seconds)  [45]  Foundation::IO::Network::Transfer  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test45...; ssh lewis@192.168.244.52   /tmp/Test45)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test46)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test46)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test46)
   []  (0  seconds)  [46]  Foundation::IO::Other  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test46...; ssh lewis@192.168.244.52   /tmp/Test46)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test47)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test47)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test47)
   []  (0  seconds)  [47]  Foundation::Math  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test47...; ssh lewis@192.168.244.52   /tmp/Test47)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test48)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test48)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test48)
   []  (0  seconds)  [48]  Foundation::Memory  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test48...; ssh lewis@192.168.244.52   /tmp/Test48)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test49)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test49)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test49)
   []  (0  seconds)  [49]  Foundation::Streams  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test49...; ssh lewis@192.168.244.52   /tmp/Test49)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test50)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test50)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test50)
   []  (0  seconds)  [50]  Foundation::Time  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test50...; ssh lewis@192.168.244.52   /tmp/Test50)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test51)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test51)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test51)
   []  (0  seconds)  [51]  Foundation::Traversal  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test51...; ssh lewis@192.168.244.52   /tmp/Test51)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test52)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test52)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test52)
   []  (0  seconds)  [52]  Foundation::PERFORMANCE  (scp ../Builds/raspberrypi-g++-12-debug-sanitize_undefined/Tests/Test52...; ssh lewis@192.168.244.52   /tmp/Test52)
       ***SOME TESTS FAILED*** (exit suppressed by TEST_FAILURES_CAUSE_FAILED_MAKE)
)))- make run-tests TEST_FAILURES_CAUSE_FAILED_MAKE=0 CONFIGURATION=raspberrypi-g++-12-release-sanitize_address REMOTE=lewis@192.168.244.52
Stroika ThirdPartyComponents Build {raspberrypi-g++-12-release-sanitize_address}:
   Stroika/ThirdPartyComponents/zlib Build 1.2.13 {raspberrypi-g++-12-release-sanitize_address}:
      zlib 1.2.13 - Checking ...  Stroika/ThirdPartyComponents/zlib -    [Succeeded]
   Stroika/ThirdPartyComponents/boost Build 1_82_0 {raspberrypi-g++-12-release-sanitize_address}:
      boost 1_82_0 - Checking ...  Stroika/ThirdPartyComponents/boost -   [Succeeded]
   Stroika/ThirdPartyComponents/OpenSSL Build 3.1.0 {raspberrypi-g++-12-release-sanitize_address}:
      openssl 3.1.0 - Checking ...  Stroika/ThirdPartyComponents/OpenSSL - [Succeeded]
   Stroika/ThirdPartyComponents/libcurl 8.1.2 Build {raspberrypi-g++-12-release-sanitize_address}:
      curl 8.1.2 - Checking ...  Stroika/ThirdPartyComponents/curl -    [Succeeded]
   Stroika/ThirdPartyComponents/lzma Build 1604 {raspberrypi-g++-12-release-sanitize_address}:
      lzma 1604 - Checking ...  Stroika/ThirdPartyComponents/lzma -    [Succeeded]
   Stroika/ThirdPartyComponents/sqlite Build 3420000 {raspberrypi-g++-12-release-sanitize_address}:
      sqlite 3420000 - Checking ...  Stroika/ThirdPartyComponents/sqlite -  [Succeeded]
   Stroika/ThirdPartyComponents/xerces 3.2.4 Build {raspberrypi-g++-12-release-sanitize_address}:
      Xerces 3.2.4 - Checking ...  Stroika/ThirdPartyComponents/Xerces -  [Succeeded]
Building Stroika Library {raspberrypi-g++-12-release-sanitize_address}:
   Building Stroika Foundation Objs:
   Building Stroika Frameworks Objs:
Building Stroika Tests {raspberrypi-g++-12-release-sanitize_address}:
   Test 01: Foundation::Caching:
   Test 02: Foundation::Characters:
   Test 03: Foundation::Common:
   Test 04: Foundation::Configuration:
   Test 05: Foundation::Containers::DataStructures::Array:
   Test 06: Foundation::Containers::DataStructures::LinkedList:
   Test 07: Foundation::Containers::DataStructures::LockFree:
   Test 08: Foundation::Containers::DataStructures::DoublyLinkedList:
   Test 09: Foundation::Containers::DataStructures::STLContainerWrapper:
   Test 10: Foundation::Containers::DataStructures::SkipList:
   Test 11: Foundation::Containers::Association:
   Test 12: Foundation::Containers::Bijection:
   Test 13: Foundation::Containers::Collection:
   Test 14: Foundation::Containers::DataHyperRectangle:
   Test 15: Foundation::Containers::Deque:
   Test 16: Foundation::Containers::KeyedCollection:
   Test 17: Foundation::Containers::Mapping:
   Test 18: Foundation::Containers::MultiSet:
   Test 19: Foundation::Containers::PriorityQueue:
   Test 20: Foundation::Containers::Queue:
   Test 21: Foundation::Containers::Sequence:
   Test 22: Foundation::Containers::Set:
   Test 23: Foundation::Containers::SortedAssociation:
   Test 24: Foundation::Containers::SortedCollection:
   Test 25: Foundation::Containers::SortedKeyedCollection:
   Test 26: Foundation::Containers::SortedMapping:
   Test 27: Foundation::Containers::SortedMultiSet:
   Test 28: Foundation::Containers::SortedSet:
   Test 29: Foundation::Containers::Stack:
   Test 30: Foundation::Containers::STL:
   Test 31: Foundation::Cryptography:
   Test 32: Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip):
   Test 33: Foundation::DataExchange::ObjectVariantMapper:
   Test 34: Foundation::DataExchange::XML::SaxParser:
   Test 35: Foundation::DataExchange::Other:
   Test 36: Foundation::Database:
   Test 37: Foundation::Execution::Exceptions:
   Test 38: Foundation::Execution::ProcessRunner:
   Test 39: Foundation::Execution::Signals:
   Test 40: Foundation::Execution::Threads:
   Test 41: Foundation::Execution::ThreadSafetyBuiltinObject:
   Test 42: Foundation::Execution::Other:
   Test 43: Foundation::IO::Network:
   Test 44: Foundation::IO::Network::HTTP:
   Test 45: Foundation::IO::Network::Transfer:
   Test 46: Foundation::IO::Other:
   Test 47: Foundation::Math:
   Test 48: Foundation::Memory:
   Test 49: Foundation::Streams:
   Test 50: Foundation::Time:
   Test 51: Foundation::Traversal:
   Test 52: Foundation::PERFORMANCE:
Running Stroika Tests {raspberrypi-g++-12-release-sanitize_address}:
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test01)
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test01)
/tmp/Test01: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test01)
   []  (0  seconds)  [01]  Foundation::Caching  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test01...; ssh lewis@192.168.244.52   /tmp/Test01)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test02)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test02)
/tmp/Test02: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test02)
   []  (1  seconds)  [02]  Foundation::Characters  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test02...; ssh lewis@192.168.244.52   /tmp/Test02)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test03)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test03)
/tmp/Test03: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test03)
   []  (0  seconds)  [03]  Foundation::Common  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test03...; ssh lewis@192.168.244.52   /tmp/Test03)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test04)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test04)
/tmp/Test04: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test04)
   []  (0  seconds)  [04]  Foundation::Configuration  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test04...; ssh lewis@192.168.244.52   /tmp/Test04)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test05)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test05)
/tmp/Test05: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test05)
   []  (0  seconds)  [05]  Foundation::Containers::DataStructures::Array  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test05...; ssh lewis@192.168.244.52   /tmp/Test05)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test06)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test06)
/tmp/Test06: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test06)
   []  (0  seconds)  [06]  Foundation::Containers::DataStructures::LinkedList  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test06...; ssh lewis@192.168.244.52   /tmp/Test06)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test07)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test07)
/tmp/Test07: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test07)
   []  (0  seconds)  [07]  Foundation::Containers::DataStructures::LockFree  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test07...; ssh lewis@192.168.244.52   /tmp/Test07)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test08)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test08)
/tmp/Test08: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test08)
   []  (0  seconds)  [08]  Foundation::Containers::DataStructures::DoublyLinkedList  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test08...; ssh lewis@192.168.244.52   /tmp/Test08)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test09)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test09)
/tmp/Test09: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test09)
   []  (0  seconds)  [09]  Foundation::Containers::DataStructures::STLContainerWrapper  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test09...; ssh lewis@192.168.244.52   /tmp/Test09)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test10)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test10)
/tmp/Test10: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test10)
   []  (0  seconds)  [10]  Foundation::Containers::DataStructures::SkipList  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test10...; ssh lewis@192.168.244.52   /tmp/Test10)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test11)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test11)
/tmp/Test11: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test11)
   []  (0  seconds)  [11]  Foundation::Containers::Association  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test11...; ssh lewis@192.168.244.52   /tmp/Test11)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test12)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test12)
/tmp/Test12: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test12)
   []  (0  seconds)  [12]  Foundation::Containers::Bijection  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test12...; ssh lewis@192.168.244.52   /tmp/Test12)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test13)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test13)
/tmp/Test13: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test13)
   []  (0  seconds)  [13]  Foundation::Containers::Collection  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test13...; ssh lewis@192.168.244.52   /tmp/Test13)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test14)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test14)
/tmp/Test14: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test14)
   []  (0  seconds)  [14]  Foundation::Containers::DataHyperRectangle  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test14...; ssh lewis@192.168.244.52   /tmp/Test14)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test15)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test15)
/tmp/Test15: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test15)
   []  (1  seconds)  [15]  Foundation::Containers::Deque  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test15...; ssh lewis@192.168.244.52   /tmp/Test15)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test16)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test16)
/tmp/Test16: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test16)
   []  (0  seconds)  [16]  Foundation::Containers::KeyedCollection  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test16...; ssh lewis@192.168.244.52   /tmp/Test16)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test17)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test17)
/tmp/Test17: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test17)
   []  (0  seconds)  [17]  Foundation::Containers::Mapping  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test17...; ssh lewis@192.168.244.52   /tmp/Test17)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test18)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test18)
/tmp/Test18: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test18)
   []  (1  seconds)  [18]  Foundation::Containers::MultiSet  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test18...; ssh lewis@192.168.244.52   /tmp/Test18)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test19)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test19)
/tmp/Test19: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test19)
   []  (0  seconds)  [19]  Foundation::Containers::PriorityQueue  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test19...; ssh lewis@192.168.244.52   /tmp/Test19)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test20)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test20)
/tmp/Test20: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test20)
   []  (1  seconds)  [20]  Foundation::Containers::Queue  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test20...; ssh lewis@192.168.244.52   /tmp/Test20)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test21)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test21)
/tmp/Test21: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test21)
   []  (0  seconds)  [21]  Foundation::Containers::Sequence  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test21...; ssh lewis@192.168.244.52   /tmp/Test21)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test22)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test22)
/tmp/Test22: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test22)
   []  (0  seconds)  [22]  Foundation::Containers::Set  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test22...; ssh lewis@192.168.244.52   /tmp/Test22)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test23)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test23)
/tmp/Test23: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test23)
   []  (0  seconds)  [23]  Foundation::Containers::SortedAssociation  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test23...; ssh lewis@192.168.244.52   /tmp/Test23)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test24)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test24)
/tmp/Test24: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test24)
   []  (0  seconds)  [24]  Foundation::Containers::SortedCollection  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test24...; ssh lewis@192.168.244.52   /tmp/Test24)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test25)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test25)
/tmp/Test25: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test25)
   []  (0  seconds)  [25]  Foundation::Containers::SortedKeyedCollection  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test25...; ssh lewis@192.168.244.52   /tmp/Test25)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test26)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test26)
/tmp/Test26: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test26)
   []  (1  seconds)  [26]  Foundation::Containers::SortedMapping  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test26...; ssh lewis@192.168.244.52   /tmp/Test26)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test27)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test27)
/tmp/Test27: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test27)
   []  (1  seconds)  [27]  Foundation::Containers::SortedMultiSet  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test27...; ssh lewis@192.168.244.52   /tmp/Test27)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test28)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test28)
/tmp/Test28: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test28)
   []  (1  seconds)  [28]  Foundation::Containers::SortedSet  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test28...; ssh lewis@192.168.244.52   /tmp/Test28)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test29)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test29)
/tmp/Test29: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test29)
   []  (1  seconds)  [29]  Foundation::Containers::Stack  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test29...; ssh lewis@192.168.244.52   /tmp/Test29)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test30)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test30)
/tmp/Test30: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test30)
   []  (0  seconds)  [30]  Foundation::Containers::STL  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test30...; ssh lewis@192.168.244.52   /tmp/Test30)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test31)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test31)
/tmp/Test31: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test31)
   []  (0  seconds)  [31]  Foundation::Cryptography  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test31...; ssh lewis@192.168.244.52   /tmp/Test31)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test32)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test32)
/tmp/Test32: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test32)
   []  (1  seconds)  [32]  Foundation::DataExchange::Reader/Writers(7z/CharacterDelimitedLines/INI/JSON/XML/Zip)  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test32...; ssh lewis@192.168.244.52   /tmp/Test32)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test33)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test33)
/tmp/Test33: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test33)
   []  (0  seconds)  [33]  Foundation::DataExchange::ObjectVariantMapper  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test33...; ssh lewis@192.168.244.52   /tmp/Test33)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test34)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test34)
/tmp/Test34: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test34)
   []  (0  seconds)  [34]  Foundation::DataExchange::XML::SaxParser  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test34...; ssh lewis@192.168.244.52   /tmp/Test34)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test35)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test35)
/tmp/Test35: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test35)
   []  (0  seconds)  [35]  Foundation::DataExchange::Other  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test35...; ssh lewis@192.168.244.52   /tmp/Test35)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test36)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test36)
/tmp/Test36: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test36)
   []  (0  seconds)  [36]  Foundation::Database  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test36...; ssh lewis@192.168.244.52   /tmp/Test36)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test37)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test37)
/tmp/Test37: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test37)
   []  (1  seconds)  [37]  Foundation::Execution::Exceptions  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test37...; ssh lewis@192.168.244.52   /tmp/Test37)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test38)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test38)
/tmp/Test38: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test38)
   []  (0  seconds)  [38]  Foundation::Execution::ProcessRunner  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test38...; ssh lewis@192.168.244.52   /tmp/Test38)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test39)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test39)
/tmp/Test39: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test39)
   []  (1  seconds)  [39]  Foundation::Execution::Signals  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test39...; ssh lewis@192.168.244.52   /tmp/Test39)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test40)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test40)
/tmp/Test40: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test40)
   []  (0  seconds)  [40]  Foundation::Execution::Threads  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test40...; ssh lewis@192.168.244.52   /tmp/Test40)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test41)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test41)
/tmp/Test41: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test41)
   []  (0  seconds)  [41]  Foundation::Execution::ThreadSafetyBuiltinObject  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test41...; ssh lewis@192.168.244.52   /tmp/Test41)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test42)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test42)
/tmp/Test42: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test42)
   []  (0  seconds)  [42]  Foundation::Execution::Other  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test42...; ssh lewis@192.168.244.52   /tmp/Test42)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test43)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test43)
/tmp/Test43: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test43)
   []  (0  seconds)  [43]  Foundation::IO::Network  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test43...; ssh lewis@192.168.244.52   /tmp/Test43)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test44)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test44)
/tmp/Test44: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test44)
   []  (1  seconds)  [44]  Foundation::IO::Network::HTTP  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test44...; ssh lewis@192.168.244.52   /tmp/Test44)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test45)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test45)
/tmp/Test45: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test45)
   []  (0  seconds)  [45]  Foundation::IO::Network::Transfer  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test45...; ssh lewis@192.168.244.52   /tmp/Test45)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test46)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test46)
/tmp/Test46: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test46)
   []  (1  seconds)  [46]  Foundation::IO::Other  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test46...; ssh lewis@192.168.244.52   /tmp/Test46)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test47)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test47)
/tmp/Test47: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test47)
   []  (0  seconds)  [47]  Foundation::Math  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test47...; ssh lewis@192.168.244.52   /tmp/Test47)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test48)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test48)
/tmp/Test48: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test48)
   []  (0  seconds)  [48]  Foundation::Memory  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test48...; ssh lewis@192.168.244.52   /tmp/Test48)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test49)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test49)
/tmp/Test49: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test49)
   []  (0  seconds)  [49]  Foundation::Streams  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test49...; ssh lewis@192.168.244.52   /tmp/Test49)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test50)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test50)
/tmp/Test50: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test50)
   []  (0  seconds)  [50]  Foundation::Time  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test50...; ssh lewis@192.168.244.52   /tmp/Test50)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test51)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test51)
/tmp/Test51: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test51)
   []  (0  seconds)  [51]  Foundation::Traversal  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test51...; ssh lewis@192.168.244.52   /tmp/Test51)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.33' not found (required by /tmp/Test52)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/Test52)
/tmp/Test52: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/Test52)
   []  (0  seconds)  [52]  Foundation::PERFORMANCE  (scp ../Builds/raspberrypi-g++-12-release-sanitize_address/Tests/Test52...; ssh lewis@192.168.244.52   /tmp/Test52)
       ***SOME TESTS FAILED*** (exit suppressed by TEST_FAILURES_CAUSE_FAILED_MAKE)
done (in 59 minutes)
</Run-Tests-REMOTE>


)))- Regression Tests Summary:
   ***   WARNING: 0 tests succeeded and expected 208
   0 items succeeded (expected 4 * 52)
   0 items failed (expected 0)
   0 items error (expected 0)
   65 items warned (expected 0)
   0 core dumps (expected 0)
   17 valgrind output lines (apx 0 errors (expected 0)
)))- Finished at Tue Jul 11 15:58:25 EDT 2023  (138 minutes)
