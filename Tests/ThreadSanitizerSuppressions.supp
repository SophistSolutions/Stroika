#workaround https://stroika.atlassian.net/browse/STK-673 - Ubuntu 1810 only
race:__interceptor_pipe
#workaround https://stroika.atlassian.net/browse/STK-673 - Ubuntu 1810 only
race:pipe

#workaround https://stroika.atlassian.net/browse/STK-677 - sem_post() called from inside signal handler, and can spoil errno	- rare and only seen so far on Ubunt1804 but should affect anything
# REMOVED workaround when I added code that should eliminate the problem in SemWaitableEvent::Set(). Not sure tsan will see
# this as a fix, so must test quite a few times (this was hard to reproduce) -- LGP 2018-12-13
#
# re-added the signal suppression since I got the error again in TSAN on Ubuntu 1810:
#   WARNING: ThreadSanitizer: signal handler spoils errno (pid=25253)
#       #0 Stroika::Foundation::Execution::SignalHandlerRegistry::FirstPassSignalHandler_(int) /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu1810_x86_64/Library/Sources/Stroika/Foundation/Execution/SignalHandlers.cpp:497 (Test38+0xa545b6)
#       #1 __gnu_debug::_Safe_sequence_base::_M_detach(__gnu_debug::_Safe_iterator_base*) <null> (Test38+0xe63a3b)
#       #2 __gnu_debug::_Safe_iterator<std::_Rb_tree_const_iterator<std::thread::id>, std::__debug::multiset<std::thread::id, std::less<std::thread::id>, std::allocator<std::thread::id> > >::~_Safe_iterator() /usr/include/c++/8/debug/safe_iterator.h:86 (Test38+0xa36d80)
#       #3 Stroika::Foundation::Debug::AssertExternallySynchronizedLock::unlock_shared_() const /home/lewis/Sandbox/Stroika-Build-Dir-Ubuntu1810_x86_64/Library/Sources/Stroika/Foundation/Debug/AssertExternallySynchronizedLock.cpp:82 (Test38+0xa35c99)
#       #4 Stroika::Foundation::Debug::AssertExternallySynchronizedLock::unlock_shared() const ../Characters/../Containers/../Traversal/../Debug/AssertExternallySynchronizedLock.inl:88 (Test38+0x8554a0)
# not 100% clear this is right thing, but FirstPassSignalHandler_ does indirect call sem_post which could spoil though I wrote code to unspoil iterators
# may not look that way to tsan -- LGP 2018-02-13
#
# NOTE - I see this very rarely, but did see again on Ununtu 1904 - 2019-10-03 regtest. So this suppression doesn't work.
#
# SINCE NOT WORKING - COMMENT OUT AND LATER REMOVE ENTIRELY - LGP 2019-11-23
# see jira ticket for how I handled instead
#signal:Stroika::Foundation::Execution::SignalHandlerRegistry::FirstPassSignalHandler_(int)
#
# SAW TWICE in one week, but always on ubuntu 1910, so trying to re-enable to see if that
# supresses on ubuntu 1910
signal:Stroika::Foundation::Execution::SignalHandlerRegistry::FirstPassSignalHandler_(int)

#https://stroika.atlassian.net/browse/STK-647 - possible deadlock/bug detected by tsan (debug iterators and FirstPassSignalHandler_
#since hard to reproduce hard to write/test supressions - want to match on BOTH FirstPassSignalHandler_ AND AssertExternallySynchronizedLock (in one stacktrace)
#NB: This is ONLY needed on DEBUG builds

# tried this suppression and got the error again. TRY NEW SUPPRESSION STRING
#deadlock:FirstPassSignalHandler_*AssertExternallySynchronizedLock

# Ideally, we would match on having ONE of these in one stack, and the other in the other stack, but could come in either order
deadlock:Stroika::Foundation::Debug::AssertExternallySynchronizedLock::AssertExternallySynchronizedLock
deadlock:Stroika::Foundation::Execution::SignalHandlerRegistry::FirstPassSignalHandler_