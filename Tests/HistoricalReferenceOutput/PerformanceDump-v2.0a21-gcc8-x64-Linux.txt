Using TIME MULTIPLIER: 10

Test Test of simple locking strategies (mutex v shared_ptr copy) (mutex vs shared_ptr<> copy)
      shared_ptr<> copy is 20.18% faster [baseline test 3.68121 seconds, and comparison 2.93846 seconds, and failThreshold = 40.00% slower]

Test Test of simple locking strategies (mutex v SpinLock) (mutex vs SpinLock)
      SpinLock is 52.39% faster [baseline test 3.68104 seconds, and comparison 1.75247 seconds, and failThreshold = 65.00% slower]

Test std::shared_ptr versus Memory::SharedPtr (shared_ptr vs SharedPtr)
      SharedPtr is 9.64% faster [baseline test 5.94235 seconds, and comparison 5.36976 seconds, and failThreshold = 8.00% faster]

Test Simple Struct With Strings Filling And Copying (wstring vs Charactes::String)
      Charactes::String is 65.24% slower [baseline test 1.44564 seconds, and comparison 2.38876 seconds, and failThreshold = 69.00% faster]

Test Simple String append test (+='string object') 10x (wstring vs Charactes::String)
      Charactes::String is 226.99% slower [baseline test 7.96479 seconds, and comparison 26.044 seconds, and failThreshold = 300.00% slower]

Test Simple String append test (+=wchar_t[]) 10x (wstring vs Charactes::String)
      Charactes::String is 203.27% slower [baseline test 8.62894 seconds, and comparison 26.1694 seconds, and failThreshold = 280.00% slower]

Test Simple String append test (+=wchar_t[]) 100x (wstring vs Charactes::String)
      Charactes::String is 683.14% slower [baseline test 8.44546 seconds, and comparison 66.14 seconds, and failThreshold = 810.00% slower]

Test String a + b (wstring vs String)
      String is 61.15% slower [baseline test 9.34924 seconds, and comparison 15.0662 seconds, and failThreshold = 120.00% slower]

Test wstringstream << test (wstring vs Charactes::String)
      Charactes::String is 42.90% slower [baseline test 4.95229 seconds, and comparison 7.07705 seconds, and failThreshold = 38.00% slower]

Test String::substr() (wstring vs Charactes::String)
      Charactes::String is 143.35% slower [baseline test 7.77018 seconds, and comparison 18.9084 seconds, and failThreshold = 130.00% slower]

Test wstringstream versus BasicTextOutputStream (wstringstream vs BasicTextOutputStream)
      BasicTextOutputStream is 367.78% slower [baseline test 4.50822 seconds, and comparison 21.0887 seconds, and failThreshold = 275.00% slower]

Test wstringstream versus StringBuilder (wstringstream vs StringBuilder)
      StringBuilder is 61.52% faster [baseline test 3.95641 seconds, and comparison 1.52256 seconds, and failThreshold = 82.00% faster]

Test Simple c_str() test (wstring vs Charactes::String)
      Charactes::String is 34.39% slower [baseline test 3.86552 seconds, and comparison 5.19502 seconds, and failThreshold = 30.00% slower]

Test Sequence<int> basics (vector<int> vs Sequence<int>)
      Sequence<int> is 345.56% slower [baseline test 4.91339 seconds, and comparison 21.8921 seconds, and failThreshold = 490.00% slower]

Test Sequence<string> basics (vector<string> vs Sequence<string>)
      Sequence<string> is 40.07% faster [baseline test 3.46968 seconds, and comparison 2.07928 seconds, and failThreshold = 20.00% faster]

Test Sequence_DoublyLinkedList<int> basics (vector<int> vs Sequence_DoublyLinkedList<int>)
      Sequence_DoublyLinkedList<int> is 344.67% slower [baseline test 4.92605 seconds, and comparison 21.9046 seconds, and failThreshold = 500.00% slower]

Test Sequence_DoublyLinkedList<string> basics (vector<string> vs Sequence_DoublyLinkedList<string>)
      Sequence_DoublyLinkedList<string> is 40.68% faster [baseline test 3.50051 seconds, and comparison 2.07644 seconds, and failThreshold = 7.00% faster]

Test Collection<int> basics (vector<int> vs Collection<int>)
      Collection<int> is 712.41% slower [baseline test 4.39352 seconds, and comparison 35.6932 seconds, and failThreshold = 530.00% slower]

Test Collection<string> basics (vector<string> vs Collection<string>)
      Collection<string> is 4.73% slower [baseline test 3.5009 seconds, and comparison 3.66655 seconds, and failThreshold = 25.00% faster]

Test String Chracters::Format () (sprintf vs String Characters::Format)
      String Characters::Format is 28.90% slower [baseline test 7.24648 seconds, and comparison 9.34063 seconds, and failThreshold = 47.00% slower]

Test BLOB versus vector<Byte> (vector<Byte> vs BLOB)
      BLOB is 70.73% faster [baseline test 4.99493 seconds, and comparison 1.46222 seconds, and failThreshold = 70.00% faster]

