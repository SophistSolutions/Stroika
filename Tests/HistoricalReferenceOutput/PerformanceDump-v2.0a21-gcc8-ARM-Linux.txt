Using TIME MULTIPLIER: 3

Test Test of simple locking strategies (mutex v shared_ptr copy) (mutex vs shared_ptr<> copy)
      shared_ptr<> copy is 26.10% faster [baseline test 6.25153 seconds, and comparison 4.61995 seconds, and failThreshold = 40.00% slower]

Test Test of simple locking strategies (mutex v SpinLock) (mutex vs SpinLock)
      SpinLock is 51.56% faster [baseline test 6.08029 seconds, and comparison 2.94559 seconds, and failThreshold = 65.00% slower]

Test std::shared_ptr versus Memory::SharedPtr (shared_ptr vs SharedPtr)
      SharedPtr is 8.60% faster [baseline test 11.8703 seconds, and comparison 10.8499 seconds, and failThreshold = 8.00% faster]

Test Simple Struct With Strings Filling And Copying (wstring vs Charactes::String)
      Charactes::String is 41.91% slower [baseline test 3.18152 seconds, and comparison 4.5149 seconds, and failThreshold = 69.00% faster]

Test Simple String append test (+='string object') 10x (wstring vs Charactes::String)
      Charactes::String is 200.40% slower [baseline test 18.6081 seconds, and comparison 55.8982 seconds, and failThreshold = 300.00% slower]

Test Simple String append test (+=wchar_t[]) 10x (wstring vs Charactes::String)
      Charactes::String is 183.98% slower [baseline test 20.0931 seconds, and comparison 57.0609 seconds, and failThreshold = 280.00% slower]

Test Simple String append test (+=wchar_t[]) 100x (wstring vs Charactes::String)
      Charactes::String is 829.95% slower [baseline test 17.298 seconds, and comparison 160.863 seconds, and failThreshold = 810.00% slower]

Test String a + b (wstring vs String)
      String is 54.57% slower [baseline test 26.5912 seconds, and comparison 41.1021 seconds, and failThreshold = 120.00% slower]

Test wstringstream << test (wstring vs Charactes::String)
      Charactes::String is 40.36% slower [baseline test 15.4 seconds, and comparison 21.6158 seconds, and failThreshold = 38.00% slower]

Test String::substr() (wstring vs Charactes::String)
      Charactes::String is 10.24% slower [baseline test 33.7521 seconds, and comparison 37.2092 seconds, and failThreshold = 130.00% slower]

Test wstringstream versus BasicTextOutputStream (wstringstream vs BasicTextOutputStream)
      BasicTextOutputStream is 574.13% slower [baseline test 12.4784 seconds, and comparison 84.1203 seconds, and failThreshold = 275.00% slower]

Test wstringstream versus StringBuilder (wstringstream vs StringBuilder)
      StringBuilder is 57.37% faster [baseline test 11.3579 seconds, and comparison 4.84162 seconds, and failThreshold = 82.00% faster]

Test Simple c_str() test (wstring vs Charactes::String)
      Charactes::String is 26.48% slower [baseline test 18.3293 seconds, and comparison 23.1832 seconds, and failThreshold = 30.00% slower]

Test Sequence<int> basics (vector<int> vs Sequence<int>)
      Sequence<int> is 121.08% slower [baseline test 23.9355 seconds, and comparison 52.9169 seconds, and failThreshold = 490.00% slower]

Test Sequence<string> basics (vector<string> vs Sequence<string>)
      Sequence<string> is 40.13% faster [baseline test 10.2651 seconds, and comparison 6.14583 seconds, and failThreshold = 20.00% faster]

Test Sequence_DoublyLinkedList<int> basics (vector<int> vs Sequence_DoublyLinkedList<int>)
      Sequence_DoublyLinkedList<int> is 121.60% slower [baseline test 23.819 seconds, and comparison 52.7832 seconds, and failThreshold = 500.00% slower]

Test Sequence_DoublyLinkedList<string> basics (vector<string> vs Sequence_DoublyLinkedList<string>)
      Sequence_DoublyLinkedList<string> is 40.38% faster [baseline test 10.3331 seconds, and comparison 6.16058 seconds, and failThreshold = 7.00% faster]

Test Collection<int> basics (vector<int> vs Collection<int>)
      Collection<int> is 253.92% slower [baseline test 18.0257 seconds, and comparison 63.7973 seconds, and failThreshold = 530.00% slower]

Test Collection<string> basics (vector<string> vs Collection<string>)
      Collection<string> is 24.86% faster [baseline test 10.4513 seconds, and comparison 7.85309 seconds, and failThreshold = 25.00% faster]

Test String Chracters::Format () (sprintf vs String Characters::Format)
      String Characters::Format is 8.72% slower [baseline test 20.1383 seconds, and comparison 21.8951 seconds, and failThreshold = 47.00% slower]

Test BLOB versus vector<Byte> (vector<Byte> vs BLOB)
      BLOB is 64.69% faster [baseline test 20.3117 seconds, and comparison 7.1724 seconds, and failThreshold = 70.00% faster]

