Using TIME MULTIPLIER: 10

Test Test of simple locking strategies (mutex v shared_ptr copy) (mutex vs shared_ptr<> copy)
      shared_ptr<> copy is 62.66% faster [baseline test 10.8476 seconds, and comparison 4.05013 seconds, and failThreshold = 40.00% slower]

Test Test of simple locking strategies (mutex v SpinLock) (mutex vs SpinLock)
      SpinLock is 71.72% faster [baseline test 9.77839 seconds, and comparison 2.76541 seconds, and failThreshold = 65.00% slower]

Test std::shared_ptr versus Memory::SharedPtr (shared_ptr vs SharedPtr)
      SharedPtr is 9.85% faster [baseline test 9.1083 seconds, and comparison 8.21121 seconds, and failThreshold = 10.00% faster]
      {{{WARNING - expected no worse than 10.00% faster}}}

Test Simple Struct With Strings Filling And Copying (wstring vs Charactes::String)
      Charactes::String is 71.08% faster [baseline test 9.48023 seconds, and comparison 2.74178 seconds, and failThreshold = 69.00% faster]

Test Simple String append test (+='string object') 10x (wstring vs Charactes::String)
      Charactes::String is 385.66% slower [baseline test 8.876 seconds, and comparison 43.1069 seconds, and failThreshold = 420.00% slower]

Test Simple String append test (+=wchar_t[]) 10x (wstring vs Charactes::String)
      Charactes::String is 604.64% slower [baseline test 9.4268 seconds, and comparison 66.425 seconds, and failThreshold = 680.00% slower]

Test Simple String append test (+=wchar_t[]) 100x (wstring vs Charactes::String)
      Charactes::String is 1456.30% slower [baseline test 9.65125 seconds, and comparison 150.202 seconds, and failThreshold = 1600.00% slower]

Test String a + b (wstring vs String)
      String is 412.81% slower [baseline test 9.41842 seconds, and comparison 48.2991 seconds, and failThreshold = 440.00% slower]

Test wstringstream << test (wstring vs Charactes::String)
      Charactes::String is 18.59% slower [baseline test 9.41117 seconds, and comparison 11.1607 seconds, and failThreshold = 38.00% slower]

Test String::substr() (wstring vs Charactes::String)
      Charactes::String is 131.87% slower [baseline test 9.10966 seconds, and comparison 21.1221 seconds, and failThreshold = 300.00% slower]

Test wstringstream versus BasicTextOutputStream (wstringstream vs BasicTextOutputStream)
      BasicTextOutputStream is 260.74% slower [baseline test 9.73531 seconds, and comparison 35.1187 seconds, and failThreshold = 280.00% slower]

Test Simple c_str() test (wstring vs Charactes::String)
      Charactes::String is 13.95% slower [baseline test 9.84233 seconds, and comparison 11.215 seconds, and failThreshold = 22.00% slower]

Test Sequence<int> basics (vector<int> vs Sequence<int>)
      Sequence<int> is 437.84% slower [baseline test 9.21453 seconds, and comparison 49.5598 seconds, and failThreshold = 475.00% slower]

Test Sequence<string> basics (vector<string> vs Sequence<string>)
      Sequence<string> is 22.95% faster [baseline test 8.60384 seconds, and comparison 6.62895 seconds, and failThreshold = 20.00% faster]

Test Sequence_DoublyLinkedList<int> basics (vector<int> vs Sequence_DoublyLinkedList<int>)
      Sequence_DoublyLinkedList<int> is 432.83% slower [baseline test 9.23221 seconds, and comparison 49.1919 seconds, and failThreshold = 500.00% slower]

Test Sequence_DoublyLinkedList<string> basics (vector<string> vs Sequence_DoublyLinkedList<string>)
      Sequence_DoublyLinkedList<string> is 7.56% faster [baseline test 8.56286 seconds, and comparison 7.9153 seconds, and failThreshold = 14.00% faster]
      {{{WARNING - expected no worse than 14.00% faster}}}

Test Collection<int> basics (vector<int> vs Collection<int>)
      Collection<int> is 462.67% slower [baseline test 9.18341 seconds, and comparison 51.6722 seconds, and failThreshold = 530.00% slower]

Test Collection<string> basics (vector<string> vs Collection<string>)
      Collection<string> is 29.54% faster [baseline test 8.95238 seconds, and comparison 6.30805 seconds, and failThreshold = 25.00% faster]

Test String Chracters::Format () (sprintf vs String Characters::Format)
      String Characters::Format is 43.62% slower [baseline test 8.97769 seconds, and comparison 12.8934 seconds, and failThreshold = 47.00% slower]

Test BLOB versus vector<Byte> (vector<Byte> vs BLOB)
      BLOB is 77.35% faster [baseline test 9.15309 seconds, and comparison 2.073 seconds, and failThreshold = 70.00% faster]

