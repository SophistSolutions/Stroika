Using TIME MULTIPLIER: 10

Test Test of simple locking strategies (mutex v shared_ptr copy) (mutex vs shared_ptr<> copy)
      shared_ptr<> copy is 62.27% faster [baseline test 11.3733 seconds, and comparison 4.29095 seconds, and failThreshold = 40.00% slower]

Test Test of simple locking strategies (mutex v SpinLock) (mutex vs SpinLock)
      SpinLock is 71.93% faster [baseline test 10.0495 seconds, and comparison 2.82106 seconds, and failThreshold = 65.00% slower]

Test std::shared_ptr versus Memory::SharedPtr (shared_ptr vs SharedPtr)
      SharedPtr is 9.93% faster [baseline test 9.47 seconds, and comparison 8.53009 seconds, and failThreshold = 8.00% faster]

Test Simple Struct With Strings Filling And Copying (wstring vs Charactes::String)
      Charactes::String is 71.14% faster [baseline test 9.83088 seconds, and comparison 2.83746 seconds, and failThreshold = 69.00% faster]

Test Simple String append test (+='string object') 10x (wstring vs Charactes::String)
      Charactes::String is 398.06% slower [baseline test 9.02298 seconds, and comparison 44.9397 seconds, and failThreshold = 420.00% slower]

Test Simple String append test (+=wchar_t[]) 10x (wstring vs Charactes::String)
      Charactes::String is 602.64% slower [baseline test 9.90829 seconds, and comparison 69.6193 seconds, and failThreshold = 680.00% slower]

Test Simple String append test (+=wchar_t[]) 100x (wstring vs Charactes::String)
      Charactes::String is 1496.63% slower [baseline test 10.0521 seconds, and comparison 160.494 seconds, and failThreshold = 1600.00% slower]

Test String a + b (wstring vs String)
      String is 122.74% slower [baseline test 9.72144 seconds, and comparison 21.6539 seconds, and failThreshold = 440.00% slower]

Test wstringstream << test (wstring vs Charactes::String)
      Charactes::String is 36.78% slower [baseline test 9.23151 seconds, and comparison 12.6264 seconds, and failThreshold = 38.00% slower]

Test String::substr() (wstring vs Charactes::String)
      Charactes::String is 136.22% slower [baseline test 9.31955 seconds, and comparison 22.0145 seconds, and failThreshold = 300.00% slower]

Test wstringstream versus BasicTextOutputStream (wstringstream vs BasicTextOutputStream)
      BasicTextOutputStream is 262.36% slower [baseline test 9.88515 seconds, and comparison 35.8202 seconds, and failThreshold = 280.00% slower]

Test Simple c_str() test (wstring vs Charactes::String)
      Charactes::String is 17.70% slower [baseline test 9.51561 seconds, and comparison 11.1995 seconds, and failThreshold = 22.00% slower]

Test Sequence<int> basics (vector<int> vs Sequence<int>)
      Sequence<int> is 435.50% slower [baseline test 9.56883 seconds, and comparison 51.2411 seconds, and failThreshold = 475.00% slower]

Test Sequence<string> basics (vector<string> vs Sequence<string>)
      Sequence<string> is 23.13% faster [baseline test 8.71358 seconds, and comparison 6.69821 seconds, and failThreshold = 20.00% faster]

Test Sequence_DoublyLinkedList<int> basics (vector<int> vs Sequence_DoublyLinkedList<int>)
      Sequence_DoublyLinkedList<int> is 439.37% slower [baseline test 9.64044 seconds, and comparison 51.9978 seconds, and failThreshold = 500.00% slower]

Test Sequence_DoublyLinkedList<string> basics (vector<string> vs Sequence_DoublyLinkedList<string>)
      Sequence_DoublyLinkedList<string> is 11.23% faster [baseline test 8.96788 seconds, and comparison 7.96038 seconds, and failThreshold = 7.00% faster]

Test Collection<int> basics (vector<int> vs Collection<int>)
      Collection<int> is 473.95% slower [baseline test 9.67727 seconds, and comparison 55.5426 seconds, and failThreshold = 530.00% slower]

Test Collection<string> basics (vector<string> vs Collection<string>)
      Collection<string> is 30.06% faster [baseline test 9.37217 seconds, and comparison 6.55481 seconds, and failThreshold = 25.00% faster]

Test String Chracters::Format () (sprintf vs String Characters::Format)
      String Characters::Format is 41.69% slower [baseline test 9.54506 seconds, and comparison 13.5246 seconds, and failThreshold = 47.00% slower]

Test BLOB versus vector<Byte> (vector<Byte> vs BLOB)
      BLOB is 78.29% faster [baseline test 9.49897 seconds, and comparison 2.06193 seconds, and failThreshold = 70.00% faster]

