Using TIME MULTIPLIER: 10

Test Test of simple locking strategies (mutex v shared_ptr copy) (mutex vs shared_ptr<> copy)
      shared_ptr<> copy is 61.25% faster [baseline test 10.5719 seconds, and comparison 4.09664 seconds, and failThreshold = 40.00% slower]

Test Test of simple locking strategies (mutex v SpinLock) (mutex vs SpinLock)
      SpinLock is 70.32% faster [baseline test 9.65368 seconds, and comparison 2.86555 seconds, and failThreshold = 65.00% slower]

Test std::shared_ptr versus Memory::SharedPtr (shared_ptr vs SharedPtr)
      SharedPtr is 9.96% faster [baseline test 9.44581 seconds, and comparison 8.50458 seconds, and failThreshold = 8.00% faster]

Test Simple Struct With Strings Filling And Copying (wstring vs Charactes::String)
      Charactes::String is 71.11% faster [baseline test 9.84274 seconds, and comparison 2.84367 seconds, and failThreshold = 69.00% faster]

Test Simple String append test (+='string object') 10x (wstring vs Charactes::String)
      Charactes::String is 380.11% slower [baseline test 9.28539 seconds, and comparison 44.5802 seconds, and failThreshold = 420.00% slower]

Test Simple String append test (+=wchar_t[]) 10x (wstring vs Charactes::String)
      Charactes::String is 603.81% slower [baseline test 10.017 seconds, and comparison 70.5001 seconds, and failThreshold = 680.00% slower]

Test Simple String append test (+=wchar_t[]) 100x (wstring vs Charactes::String)
      Charactes::String is 1439.27% slower [baseline test 10.3233 seconds, and comparison 158.903 seconds, and failThreshold = 1600.00% slower]

Test String a + b (wstring vs String)
      String is 119.43% slower [baseline test 9.88489 seconds, and comparison 21.6908 seconds, and failThreshold = 440.00% slower]

Test wstringstream << test (wstring vs Charactes::String)
      Charactes::String is 14.32% slower [baseline test 10.0306 seconds, and comparison 11.4673 seconds, and failThreshold = 38.00% slower]

Test String::substr() (wstring vs Charactes::String)
      Charactes::String is 137.06% slower [baseline test 9.28545 seconds, and comparison 22.0123 seconds, and failThreshold = 300.00% slower]

Test wstringstream versus BasicTextOutputStream (wstringstream vs BasicTextOutputStream)
      BasicTextOutputStream is 259.60% slower [baseline test 9.85502 seconds, and comparison 35.4391 seconds, and failThreshold = 280.00% slower]

Test Simple c_str() test (wstring vs Charactes::String)
      Charactes::String is 16.17% slower [baseline test 9.42343 seconds, and comparison 10.9476 seconds, and failThreshold = 22.00% slower]

Test Sequence<int> basics (vector<int> vs Sequence<int>)
      Sequence<int> is 444.59% slower [baseline test 9.50218 seconds, and comparison 51.7479 seconds, and failThreshold = 475.00% slower]

Test Sequence<string> basics (vector<string> vs Sequence<string>)
      Sequence<string> is 22.11% faster [baseline test 8.80372 seconds, and comparison 6.85763 seconds, and failThreshold = 20.00% faster]

Test Sequence_DoublyLinkedList<int> basics (vector<int> vs Sequence_DoublyLinkedList<int>)
      Sequence_DoublyLinkedList<int> is 436.04% slower [baseline test 9.61096 seconds, and comparison 51.5182 seconds, and failThreshold = 500.00% slower]

Test Sequence_DoublyLinkedList<string> basics (vector<string> vs Sequence_DoublyLinkedList<string>)
      Sequence_DoublyLinkedList<string> is 9.92% faster [baseline test 8.82962 seconds, and comparison 7.95392 seconds, and failThreshold = 7.00% faster]

Test Collection<int> basics (vector<int> vs Collection<int>)
      Collection<int> is 468.36% slower [baseline test 9.52636 seconds, and comparison 54.1441 seconds, and failThreshold = 530.00% slower]

Test Collection<string> basics (vector<string> vs Collection<string>)
      Collection<string> is 29.60% faster [baseline test 9.43554 seconds, and comparison 6.64262 seconds, and failThreshold = 25.00% faster]

Test String Chracters::Format () (sprintf vs String Characters::Format)
      String Characters::Format is 42.04% slower [baseline test 9.46003 seconds, and comparison 13.4371 seconds, and failThreshold = 47.00% slower]

Test BLOB versus vector<Byte> (vector<Byte> vs BLOB)
      BLOB is 77.89% faster [baseline test 9.46704 seconds, and comparison 2.09298 seconds, and failThreshold = 70.00% faster]

