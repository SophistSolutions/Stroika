Using TIME MULTIPLIER: 10

Test Test of simple locking strategies (mutex v shared_ptr copy) (mutex vs shared_ptr<> copy)
      shared_ptr<> copy is 59.99% faster [baseline test 10.4004 seconds, and comparison 4.16072 seconds, and failThreshold = 40.00% slower]

Test Test of simple locking strategies (mutex v SpinLock) (mutex vs SpinLock)
      SpinLock is 71.93% faster [baseline test 10.1562 seconds, and comparison 2.85115 seconds, and failThreshold = 65.00% slower]

Test std::shared_ptr versus Memory::SharedPtr (shared_ptr vs SharedPtr)
      SharedPtr is 22.22% faster [baseline test 9.68086 seconds, and comparison 7.52939 seconds, and failThreshold = 8.00% faster]

Test Simple Struct With Strings Filling And Copying (wstring vs Charactes::String)
      Charactes::String is 72.35% faster [baseline test 9.822 seconds, and comparison 2.71562 seconds, and failThreshold = 69.00% faster]

Test Simple String append test (+='string object') 10x (wstring vs Charactes::String)
      Charactes::String is 256.12% slower [baseline test 9.21434 seconds, and comparison 32.8143 seconds, and failThreshold = 300.00% slower]

Test Simple String append test (+=wchar_t[]) 10x (wstring vs Charactes::String)
      Charactes::String is 250.32% slower [baseline test 9.78567 seconds, and comparison 34.2816 seconds, and failThreshold = 280.00% slower]

Test Simple String append test (+=wchar_t[]) 100x (wstring vs Charactes::String)
      Charactes::String is 753.79% slower [baseline test 10.0916 seconds, and comparison 86.1614 seconds, and failThreshold = 800.00% slower]

Test String a + b (wstring vs String)
      String is 104.20% slower [baseline test 9.71453 seconds, and comparison 19.8371 seconds, and failThreshold = 120.00% slower]

Test wstringstream << test (wstring vs Charactes::String)
      Charactes::String is 30.16% slower [baseline test 9.60907 seconds, and comparison 12.5073 seconds, and failThreshold = 38.00% slower]

Test String::substr() (wstring vs Charactes::String)
      Charactes::String is 105.57% slower [baseline test 9.34223 seconds, and comparison 19.2049 seconds, and failThreshold = 120.00% slower]

Test wstringstream versus BasicTextOutputStream (wstringstream vs BasicTextOutputStream)
      BasicTextOutputStream is 263.34% slower [baseline test 9.86058 seconds, and comparison 35.8269 seconds, and failThreshold = 270.00% slower]

Test Simple c_str() test (wstring vs Charactes::String)
      Charactes::String is 9.31% slower [baseline test 10.0576 seconds, and comparison 10.9937 seconds, and failThreshold = 22.00% slower]

Test Sequence<int> basics (vector<int> vs Sequence<int>)
      Sequence<int> is 442.34% slower [baseline test 9.42798 seconds, and comparison 51.1321 seconds, and failThreshold = 490.00% slower]

Test Sequence<string> basics (vector<string> vs Sequence<string>)
      Sequence<string> is 27.40% faster [baseline test 8.97329 seconds, and comparison 6.51425 seconds, and failThreshold = 20.00% faster]

Test Sequence_DoublyLinkedList<int> basics (vector<int> vs Sequence_DoublyLinkedList<int>)
      Sequence_DoublyLinkedList<int> is 426.36% slower [baseline test 9.70118 seconds, and comparison 51.0627 seconds, and failThreshold = 500.00% slower]

Test Sequence_DoublyLinkedList<string> basics (vector<string> vs Sequence_DoublyLinkedList<string>)
      Sequence_DoublyLinkedList<string> is 19.55% faster [baseline test 8.91221 seconds, and comparison 7.16984 seconds, and failThreshold = 7.00% faster]

Test Collection<int> basics (vector<int> vs Collection<int>)
      Collection<int> is 457.45% slower [baseline test 9.37092 seconds, and comparison 52.2377 seconds, and failThreshold = 530.00% slower]

Test Collection<string> basics (vector<string> vs Collection<string>)
      Collection<string> is 30.99% faster [baseline test 9.31255 seconds, and comparison 6.4263 seconds, and failThreshold = 25.00% faster]

Test String Chracters::Format () (sprintf vs String Characters::Format)
      String Characters::Format is 36.19% slower [baseline test 9.26225 seconds, and comparison 12.6141 seconds, and failThreshold = 47.00% slower]

Test BLOB versus vector<Byte> (vector<Byte> vs BLOB)
      BLOB is 77.26% faster [baseline test 9.27606 seconds, and comparison 2.10934 seconds, and failThreshold = 70.00% faster]

