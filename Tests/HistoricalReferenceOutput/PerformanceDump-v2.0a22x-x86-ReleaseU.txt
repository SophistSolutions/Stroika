Using TIME MULTIPLIER: 10

Test Test of simple locking strategies (mutex v shared_ptr copy) (mutex vs shared_ptr<> copy)
      shared_ptr<> copy is 57.92% faster [baseline test 9.95169 seconds, and comparison 4.18762 seconds, and failThreshold = 40.00% slower]

Test Test of simple locking strategies (mutex v SpinLock) (mutex vs SpinLock)
      SpinLock is 71.15% faster [baseline test 9.85299 seconds, and comparison 2.84261 seconds, and failThreshold = 65.00% slower]

Test std::shared_ptr versus Memory::SharedPtr (shared_ptr vs SharedPtr)
      SharedPtr is 20.89% faster [baseline test 9.8237 seconds, and comparison 7.77151 seconds, and failThreshold = 8.00% faster]

Test Simple Struct With Strings Filling And Copying (wstring vs Charactes::String)
      Charactes::String is 47.16% faster [baseline test 9.6992 seconds, and comparison 5.12512 seconds, and failThreshold = 40.00% faster]

Test Simple String append test (+='string object') 10x (wstring vs Charactes::String)
      Charactes::String is 344.06% slower [baseline test 9.47585 seconds, and comparison 42.0785 seconds, and failThreshold = 370.00% slower]

Test Simple String append test (+=wchar_t[]) 10x (wstring vs Charactes::String)
      Charactes::String is 314.94% slower [baseline test 9.76838 seconds, and comparison 40.5327 seconds, and failThreshold = 320.00% slower]

Test Simple String append test (+=wchar_t[]) 100x (wstring vs Charactes::String)
      Charactes::String is 855.62% slower [baseline test 10.1903 seconds, and comparison 97.3798 seconds, and failThreshold = 900.00% slower]

Test String a + b (wstring vs String)
      String is 130.67% slower [baseline test 9.60376 seconds, and comparison 22.153 seconds, and failThreshold = 140.00% slower]

Test wstringstream << test (wstring vs Charactes::String)
      Charactes::String is 42.18% slower [baseline test 9.91758 seconds, and comparison 14.1008 seconds, and failThreshold = 50.00% slower]

Test String::substr() (wstring vs Charactes::String)
      Charactes::String is 100.37% slower [baseline test 9.83117 seconds, and comparison 19.6985 seconds, and failThreshold = 110.00% slower]

Test wstringstream versus BasicTextOutputStream (wstringstream vs BasicTextOutputStream)
      BasicTextOutputStream is 254.79% slower [baseline test 9.95855 seconds, and comparison 35.3324 seconds, and failThreshold = 275.00% slower]

Test wstringstream versus StringBuilder (wstringstream vs StringBuilder)
      StringBuilder is 87.59% faster [baseline test 8.67164 seconds, and comparison 1.07651 seconds, and failThreshold = 82.00% faster]

Test Simple c_str() test (wstring vs Charactes::String)
      Charactes::String is 8.26% slower [baseline test 9.74812 seconds, and comparison 10.5532 seconds, and failThreshold = 13.00% slower]

Test Sequence<int> basics (vector<int> vs Sequence<int>)
      Sequence<int> is 461.61% slower [baseline test 9.32048 seconds, and comparison 52.3447 seconds, and failThreshold = 490.00% slower]

Test Sequence<string> basics (vector<string> vs Sequence<string>)
      Sequence<string> is 28.45% faster [baseline test 9.06338 seconds, and comparison 6.48474 seconds, and failThreshold = 20.00% faster]

Test Sequence_DoublyLinkedList<int> basics (vector<int> vs Sequence_DoublyLinkedList<int>)
      Sequence_DoublyLinkedList<int> is 453.82% slower [baseline test 9.42139 seconds, and comparison 52.1772 seconds, and failThreshold = 520.00% slower]

Test Sequence_DoublyLinkedList<string> basics (vector<string> vs Sequence_DoublyLinkedList<string>)
      Sequence_DoublyLinkedList<string> is 18.08% faster [baseline test 9.05747 seconds, and comparison 7.4201 seconds, and failThreshold = 7.00% faster]

Test Collection<int> basics (vector<int> vs Collection<int>)
      Collection<int> is 470.46% slower [baseline test 9.29618 seconds, and comparison 53.0312 seconds, and failThreshold = 530.00% slower]

Test Collection<string> basics (vector<string> vs Collection<string>)
      Collection<string> is 31.80% faster [baseline test 9.44946 seconds, and comparison 6.44439 seconds, and failThreshold = 25.00% faster]

Test String Chracters::Format () (sprintf vs String Characters::Format)
      String Characters::Format is 30.28% slower [baseline test 9.48231 seconds, and comparison 12.3536 seconds, and failThreshold = 35.00% slower]

Test BLOB versus vector<Byte> (vector<Byte> vs BLOB)
      BLOB is 78.57% faster [baseline test 9.24836 seconds, and comparison 1.98159 seconds, and failThreshold = 75.00% faster]

