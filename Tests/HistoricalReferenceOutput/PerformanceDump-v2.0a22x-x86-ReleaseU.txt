Using TIME MULTIPLIER: 10

Test Test of simple locking strategies (mutex v shared_ptr copy) (mutex vs shared_ptr<> copy)
      shared_ptr<> copy is 56.96% faster [baseline test 9.89628 seconds, and comparison 4.25923 seconds, and failThreshold = 40.00% slower]

Test Test of simple locking strategies (mutex v SpinLock) (mutex vs SpinLock)
      SpinLock is 71.79% faster [baseline test 9.86509 seconds, and comparison 2.78309 seconds, and failThreshold = 65.00% slower]

Test std::shared_ptr versus Memory::SharedPtr (shared_ptr vs SharedPtr)
      SharedPtr is 21.38% faster [baseline test 9.40004 seconds, and comparison 7.39022 seconds, and failThreshold = 8.00% faster]

Test Simple Struct With Strings Filling And Copying (wstring vs Charactes::String)
      Charactes::String is 73.29% faster [baseline test 9.58927 seconds, and comparison 2.56093 seconds, and failThreshold = 70.00% faster]

Test Simple String append test (+='string object') 10x (wstring vs Charactes::String)
      Charactes::String is 238.74% slower [baseline test 9.02421 seconds, and comparison 30.5685 seconds, and failThreshold = 250.00% slower]

Test Simple String append test (+=wchar_t[]) 10x (wstring vs Charactes::String)
      Charactes::String is 210.59% slower [baseline test 9.61771 seconds, and comparison 29.8716 seconds, and failThreshold = 220.00% slower]

Test Simple String append test (+=wchar_t[]) 100x (wstring vs Charactes::String)
      Charactes::String is 664.20% slower [baseline test 10.0726 seconds, and comparison 76.975 seconds, and failThreshold = 700.00% slower]

Test String a + b (wstring vs String)
      String is 87.11% slower [baseline test 9.36253 seconds, and comparison 17.518 seconds, and failThreshold = 90.00% slower]

Test wstringstream << test (wstring vs Charactes::String)
      Charactes::String is 24.14% slower [baseline test 9.9905 seconds, and comparison 12.4018 seconds, and failThreshold = 30.00% slower]

Test String::substr() (wstring vs Charactes::String)
      Charactes::String is 67.57% slower [baseline test 10.3372 seconds, and comparison 17.3224 seconds, and failThreshold = 90.00% slower]

Test wstringstream versus BasicTextOutputStream (wstringstream vs BasicTextOutputStream)
      BasicTextOutputStream is 262.16% slower [baseline test 9.73573 seconds, and comparison 35.259 seconds, and failThreshold = 275.00% slower]

Test wstringstream versus StringBuilder (wstringstream vs StringBuilder)
      StringBuilder is 88.28% faster [baseline test 8.51456 seconds, and comparison 0.997531 seconds, and failThreshold = 82.00% faster]

Test Simple c_str() test (wstring vs Charactes::String)
      Charactes::String is 6.81% slower [baseline test 9.43287 seconds, and comparison 10.0752 seconds, and failThreshold = 10.00% slower]

Test Sequence<int> basics (vector<int> vs Sequence<int>)
      Sequence<int> is 438.74% slower [baseline test 9.30908 seconds, and comparison 50.152 seconds, and failThreshold = 490.00% slower]

Test Sequence<string> basics (vector<string> vs Sequence<string>)
      Sequence<string> is 27.35% faster [baseline test 8.64083 seconds, and comparison 6.27764 seconds, and failThreshold = 20.00% faster]

Test Sequence_DoublyLinkedList<int> basics (vector<int> vs Sequence_DoublyLinkedList<int>)
      Sequence_DoublyLinkedList<int> is 436.55% slower [baseline test 9.30597 seconds, and comparison 49.931 seconds, and failThreshold = 500.00% slower]

Test Sequence_DoublyLinkedList<string> basics (vector<string> vs Sequence_DoublyLinkedList<string>)
      Sequence_DoublyLinkedList<string> is 18.54% faster [baseline test 8.61954 seconds, and comparison 7.02172 seconds, and failThreshold = 7.00% faster]

Test Collection<int> basics (vector<int> vs Collection<int>)
      Collection<int> is 453.54% slower [baseline test 9.32201 seconds, and comparison 51.6007 seconds, and failThreshold = 530.00% slower]

Test Collection<string> basics (vector<string> vs Collection<string>)
      Collection<string> is 31.76% faster [baseline test 8.96527 seconds, and comparison 6.11778 seconds, and failThreshold = 25.00% faster]

Test String Chracters::Format () (sprintf vs String Characters::Format)
      String Characters::Format is 29.39% slower [baseline test 8.96377 seconds, and comparison 11.5981 seconds, and failThreshold = 43.00% slower]

Test BLOB versus vector<Byte> (vector<Byte> vs BLOB)
      BLOB is 79.06% faster [baseline test 9.01194 seconds, and comparison 1.88707 seconds, and failThreshold = 70.00% faster]

