Using TIME MULTIPLIER: 10

Test Test of simple locking strategies (mutex v shared_ptr copy) (mutex vs shared_ptr<> copy)
      shared_ptr<> copy is 58.28% faster [baseline test 9.89112 seconds, and comparison 4.1265 seconds, and failThreshold = 40.00% slower]

Test Test of simple locking strategies (mutex v SpinLock) (mutex vs SpinLock)
      SpinLock is 71.98% faster [baseline test 9.88751 seconds, and comparison 2.7706 seconds, and failThreshold = 65.00% slower]

Test std::shared_ptr versus Memory::SharedPtr (shared_ptr vs SharedPtr)
      SharedPtr is 20.64% faster [baseline test 9.52732 seconds, and comparison 7.5606 seconds, and failThreshold = 8.00% faster]

Test Simple Struct With Strings Filling And Copying (wstring vs Charactes::String)
      Charactes::String is 72.70% faster [baseline test 9.68962 seconds, and comparison 2.64509 seconds, and failThreshold = 70.00% faster]

Test Simple String append test (+='string object') 10x (wstring vs Charactes::String)
      Charactes::String is 237.74% slower [baseline test 9.28503 seconds, and comparison 31.3596 seconds, and failThreshold = 260.00% slower]

Test Simple String append test (+=wchar_t[]) 10x (wstring vs Charactes::String)
      Charactes::String is 213.02% slower [baseline test 9.64855 seconds, and comparison 30.2018 seconds, and failThreshold = 220.00% slower]

Test Simple String append test (+=wchar_t[]) 100x (wstring vs Charactes::String)
      Charactes::String is 667.97% slower [baseline test 9.99606 seconds, and comparison 76.7665 seconds, and failThreshold = 700.00% slower]

Test String a + b (wstring vs String)
      String is 84.59% slower [baseline test 9.63684 seconds, and comparison 17.7882 seconds, and failThreshold = 90.00% slower]

Test wstringstream << test (wstring vs Charactes::String)
      Charactes::String is 23.12% slower [baseline test 9.69792 seconds, and comparison 11.9399 seconds, and failThreshold = 30.00% slower]

Test String::substr() (wstring vs Charactes::String)
      Charactes::String is 71.45% slower [baseline test 10.3329 seconds, and comparison 17.7155 seconds, and failThreshold = 90.00% slower]

Test wstringstream versus BasicTextOutputStream (wstringstream vs BasicTextOutputStream)
      BasicTextOutputStream is 249.86% slower [baseline test 10.017 seconds, and comparison 35.0457 seconds, and failThreshold = 275.00% slower]

Test wstringstream versus StringBuilder (wstringstream vs StringBuilder)
      StringBuilder is 88.28% faster [baseline test 8.66853 seconds, and comparison 1.01556 seconds, and failThreshold = 82.00% faster]

Test Simple c_str() test (wstring vs Charactes::String)
      Charactes::String is 6.63% slower [baseline test 9.61894 seconds, and comparison 10.2567 seconds, and failThreshold = 10.00% slower]

Test Sequence<int> basics (vector<int> vs Sequence<int>)
      Sequence<int> is 448.37% slower [baseline test 9.36262 seconds, and comparison 51.3417 seconds, and failThreshold = 490.00% slower]

Test Sequence<string> basics (vector<string> vs Sequence<string>)
      Sequence<string> is 27.92% faster [baseline test 8.81505 seconds, and comparison 6.35401 seconds, and failThreshold = 20.00% faster]

Test Sequence_DoublyLinkedList<int> basics (vector<int> vs Sequence_DoublyLinkedList<int>)
      Sequence_DoublyLinkedList<int> is 448.93% slower [baseline test 9.28755 seconds, and comparison 50.9824 seconds, and failThreshold = 500.00% slower]

Test Sequence_DoublyLinkedList<string> basics (vector<string> vs Sequence_DoublyLinkedList<string>)
      Sequence_DoublyLinkedList<string> is 18.40% faster [baseline test 8.80136 seconds, and comparison 7.18147 seconds, and failThreshold = 7.00% faster]

Test Collection<int> basics (vector<int> vs Collection<int>)
      Collection<int> is 486.80% slower [baseline test 9.52031 seconds, and comparison 55.8649 seconds, and failThreshold = 530.00% slower]

Test Collection<string> basics (vector<string> vs Collection<string>)
      Collection<string> is 31.26% faster [baseline test 9.30583 seconds, and comparison 6.39686 seconds, and failThreshold = 25.00% faster]

Test String Chracters::Format () (sprintf vs String Characters::Format)
      String Characters::Format is 28.30% slower [baseline test 9.3428 seconds, and comparison 11.9871 seconds, and failThreshold = 35.00% slower]

Test BLOB versus vector<Byte> (vector<Byte> vs BLOB)
      BLOB is 78.85% faster [baseline test 9.12211 seconds, and comparison 1.92931 seconds, and failThreshold = 75.00% faster]

