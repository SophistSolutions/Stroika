/*
 * Copyright(c) Sophist Solutions, Inc. 1990-2012.  All rights reserved
 */

#if		defined (WIN32)
	#define	qMacOS			0
	#define	qWindows		1
#else
	#define	qMacOS			1
	#define	qWindows		0
#endif




#if		qMacOS

	// Default to NOT using Carbon (include CarbonPreComp.pch for Carbon)
	#ifndef	PP_Target_Carbon
	#define PP_Target_Carbon		0
	#endif

	#define PP_Target_Classic		(!PP_Target_Carbon)
	#define	TARGET_CARBON	PP_Target_Carbon
	#define TARGET_API_MAC_CARBON	PP_Target_Carbon
	#define TARGET_API_MAC_OS8		PP_Target_Classic


	// We've already updated this project file
	#define PP_Suppress_Notes_22			1
	#define PP_Suppress_Notes_21			1

	#ifdef	rez
		#define	qRez		1
	#else
		#define	qRez		0
	#endif


	// Default to SINGLE-BYTE
	#if		!defined (qSingleByteCharacters) && !defined (qMultiByteCharacters) && !defined (qWideCharacters)
	#define	qSingleByteCharacters	1
	#endif


	// You can manually specify qDebug flag, but I now let it default to the
	// 'dont_inline' flag since that almost always tracks if we are doing debug
	// builds or not... That way, I don't have to change the precomp file...
	#ifndef	qDebug
		#if		qRez
			#define	qDebug	0
		#else
			#if		__option (dont_inline)
				#define	qDebug	1
			#else
				#define	qDebug	0
			#endif
		#endif
	#endif

	// ignored if qDebug=0, and defaults OFF (so we must turn on) cuz most customers don't want these
	// warnings
	#define	qHeavyDebugging	1


	#ifndef	DEBUG_NEW
		#if		qDebug
			//#define DEBUG_NEW	DEBUG_NEW_BASIC	DEBUG_NEW_LEAKS
			//#define DEBUG_NEW	1		//	DEBUG_NEW_BASIC
			#define DEBUG_NEW	2		//	DEBUG_NEW_LEAKS
		#else
			#define DEBUG_NEW	0
		#endif
	#endif

	#if		DEBUG_NEW && defined (__cplusplus)
	#include	<DebugNew.h>
	#endif

	#if		qDebug
		#undef	NDEBUG
	#else
		#define NDEBUG	1
	#endif


	#if		qDebug
		#define Debug_Throw
		#define Debug_Signal
	#endif


	#if		!qRez

		// Needed to assure __PowerPlant__ define is defined for Led.h
		#include	"PP_Prefix.h"

		// use Metrowerks’ standard precompiled header file
		//#include <PP_ClassHeaders.cp>	

	#endif


#endif

#if		qWindows
	#define	qUseQuicktimeForWindows		1

	#if		defined (rez) || defined (RC_INVOKED)
		#define	qRez		1
	#endif


	// needed if building with MSL/STL to avoid name conflict. Led doesn't use the name
	// min/max at all (uses Led_MinMax to avoid name conflicts).
	// LGP 960909
	#define	NOMINMAX	1



	// You can manually specify qDebug flag, but I now let it default to the
	// 'dont_inline' flag since that almost always tracks if we are doing debug
	// builds or not... That way, I don't have to change the precomp file...
	#ifndef	qDebug
		#if		qRez
			#define	qDebug	0
		#else
			#if		__option (dont_inline)
				#define	qDebug	1
			#else
				#define	qDebug	0
			#endif
		#endif
	#endif



	#if		qDebug
		#undef	_DEBUG
		#undef	NDEBUG
		#define	_DEBUG	1
	#else
		#undef	_DEBUG
		#undef	NDEBUG
		#define	NDEBUG	1
	#endif



	#if		!qRez
		#include	<ansi_prefix.win32.h>

		#define	_AFX_PORTABLE
		#define	_AFX_NO_DAO_SUPPORT
		#define	_AFX_NO_DEBUG_CRT

		// include for the _MFC_VER definition, and a few files assume this gets included
		// first (cuz MFC has a requirement it gets included before Window.h)
		#include	<afx.h>

		// If you really do PRECOMP, you may want to include these
		#if		0
			#include	<afxwin.h>
			#include	<objbase.h>
			#include	<initguid.h>
			#include	<mcompile.h>
		#endif
	#endif
#endif
